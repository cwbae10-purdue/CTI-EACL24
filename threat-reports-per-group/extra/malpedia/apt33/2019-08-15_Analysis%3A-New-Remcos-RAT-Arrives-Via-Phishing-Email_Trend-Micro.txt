We found another adware family that not only displays advertisements that are difficult to close, it employs unique techniques to evade detection through user behavior and time-based triggers.
By: Aliakbar Zahravi
		
			August 15, 2019
Read time:  ( words)
In July, we came across a phishing email purporting to be a new order notification, which contains a malicious attachment that leads to the remote access tool Remcos RAT (detected by Trend Micro as BKDR_SOCMER.SM).
This attack delivers Remcos using an AutoIt wrapper that incorporates various obfuscation and anti-debugging techniques to evade detection, which is a common method for distributing known malware.
Remcos RAT emerged in 2016 being peddled as a service in hacking forums — advertised, sold, and offered cracked on various sites and forums.
The RAT appears to still be actively pushed by cybercriminals.
In 2017, we reported spotting Remcos being delivered via a malicious PowerPoint slideshow, embedded with an exploit for CVE-2017-0199.
Recently, the RAT has made its way to phishing emails.
The malicious actor behind the phishing email appears to use the email address rud-division@alkuhaimi[.
]com (with a legitimate domain) and the subject "RE: NEW ORDER 573923".
The email includes the malicious attachment using the ACE compressed file format, Purchase order201900512.ace, which has the loader/wrapper Boom.exe.
After converting the executable to AutoIt script, we found that the malicious code was obfuscated with multiple layers, possibly to evade detection and make it difficult for researchers to reverse.
The top layer of obfuscation is shown in the following:
The main goal of the Boom.exe file is to achieve persistence, perform anti-analysis detection, and drop/execute Remcos RAT on an affected system.
The above snippet code first calculates the value inside the array and then uses the ChrW() function to convert the Unicode number to the character.
In some cases after decryption, the malware uses the AutoIt function called BinaryToString() to deobfuscate the next layer.
The following code snippet demonstrates this behavior:
AutoIt Binary to String decoding
After deobfuscation, the AutoIt code can be seen containing large amounts of junk code meant to throw analysts off the track.
The malware then creates a copy of itself in %AppData%\Roaming\appidapi\UevTemplateBaselineGenerator.exe and loads the main payload (Remcos RAT) from its resource section.
The malware then prepares the environment to execute the main payload.
It achieves this by executing the following Shellcode (frenchy_shellcode version 1).
Executing and decoding Frenchy Shellcode
Decoding and loading Remcos from resources
The DecData() function loads the data from its resource then reverses all data and replaces “%$=” with “/”.
AutoIt decoding the main payload: Code + encoded resource (Remcos RAT)
AutoIt decoding the main payload: Code only
Then it uses the following to decode the base64 PE file, which is the main payload:
This AutoIt loader is capable of detecting a virtual machine environment by checking vmtoolsd.exe and vbox.exe in the list of running processes.
However, it should be noted that this feature is not invoked in this sample.
Depending on the Windows version, the malware uses either the built-in Event Viewer utility (eventvwr) or fodhelper to bypass the User Account Control (UAC).
If the loader detects IsdebuggerPresent in the system, it will display the message, “This is a third-party compiled AutoIt script.” and exits the program.
AutoIt loader checks for a debugger
Originally marketed as a remote access tool that legitimately lets a user control a system remotely, Remcos RAT has since been used by cybercriminals.
Once the RAT is executed, a perpetrator gains the ability to run remote commands on the user’s system.
In a past campaign, for instance, the tool was seen with a variety of capabilities, which includes downloading and executing commands, logging keys, logging screens, and capturing audio and video using the microphone and webcam.
For the analysis of this payload, we looked into the sample Remcos Professional version 1.7.
Upon execution, depending on the configuration, the malware creates a copy of itself in %AppData%\remcos\remcos.exe, uses install.bat to execute remcos.ex$ from the %APPDATA% directory, and finally deletes itself.
It then creates the following Run key in the Registry to maintain persistence on the system.
Remcos RAT changes the Registry entry to maintain persistence
Reflected Remcos RAT change in the Registry
The malware retrieves the configuration called “SETTING” from its resource section.
Remcos loads the encrypted settings from its resources
The content of the configuration is encrypted using the RC4 algorithm, as seen below:
The following, on the other hand, is the RC4 algorithm used to decrypt the above configuration:
RC4 algorithm to decrypt the configuration
The malware then creates the following mutex to mark its presence on the system:
It then starts to collect system information such as username, computer name, Windows version, etc., which it sends to the command and control (C&C) server.
The malware encrypts the collected data using the RC4 algorithm with the password “pass” from the configuration data.
Clear text data collected by Remcos, where “|cmd|” is the delimiter
Data is encrypted and sent to C&C server
The following list shows some of the commands supported by the malware:
The “consolecmd” command shown in the next figure, for instance, is used to execute shell commands on an infected system:
Some examples of Remcos RAT’s commands
After analyzing this Remcos variant — its configuration data, communication mechanism, and functionalities — we saw that it had many similarities with its older variant (detected as Backdoor.Win32.Remcosrat.A).
However, this particular campaign delivers Remcos using an AutoIt wrapper, which incorporates different obfuscation and anti-debugging techniques to avoid detection.
To defend against threats like Remcos RAT that use email-based attacks, we advise users to refrain from opening unsolicited emails — especially those with attachments — from unknown sources.
Users should also exercise caution before clicking on URLs to avoid being infected with malware.
For enterprises, if an anomaly is suspected in the system, report the activity to the network administrator immediately.
We also recommend these best practices for added protection:
Implementing security solutions with anti-spam filtering should weed out spam messages such as the one discussed here.
The use of a multilayered solution such as Trend Micro™ Deep Discovery™ will help provide detection, in-depth analysis, and proactive response to today’s stealthy malware such as Remcos RAT, and targeted attacks in real-time.
It provides a comprehensive defense tailored to protect organizations against targeted attacks and advanced threats through specialized engines, custom sandboxing, and seamless correlation across the entire attack lifecycle.
Trend Micro™ Deep Discovery™ Inspector prevents malware from reaching end users.
For a more comprehensive security suite, organizations can consider the Trend Micro™ Cloud App Security™ solution, which employs machine learning (ML) in web reputation and URL dynamic analysis.
The solution can also detect suspicious content in the message body and attachments as well as provide sandbox malware analysis and document exploit detection.
