
        A proxy aware C2 framework used to aid red teamers with post-exploitation and lateral movement.
PoshC2 is a proxy aware C2 framework used to aid penetration testers with red teaming, post-exploitation and lateral movement.
PoshC2 is primarily written in Python3 and follows a modular format to enable users to add their own modules and tools, allowing an extendible and flexible C2 framework.
Out-of-the-box PoshC2 comes PowerShell/C# and Python2/Python3 implants with payloads written in PowerShell v2 and v4, C++ and C# source code, a variety of executables, DLLs and raw shellcode in addition to a Python2/Python3 payload.
These enable C2 functionality on a wide range of devices and operating systems, including Windows, *nix and OSX.
Other notable features of PoshC2 include:
We maintain PoshC2 documentation over at https://poshc2.readthedocs.io/en/latest/
Find us on #Slack - poshc2.slack.com (to request an invite send an email to labs@nettitude.com)
You can install PoshC2 directly or use the Docker images, instructions for both are below.
An install script is provided for installing PoshC2:
Elevated privileges are required as the install script performs apt updates and installations.
Alternatively the repository can be cloned down and the install script manually run.
You can manually set the PoshC2 installation directory by passing it to the Install.sh script as the -p argument.
We want to keep the master branch stable to ensure that users are able to rely on it when required and for this reason changes can often be feature-complete but not yet present on master as they have not been tested completely and signed-off yet.
If you want to look at upcoming features in PoshC2 you can check out the dev branch, or any individual feature branches branched off of dev.
As features are tested before they are merged into dev this branch should still be fairly stable and operators can opt in to using this branch or a particular feature branch for their engagement.
This does trade stablity for new features however so do it at your own discretion.
To use dev or a feature branch pass the branch name to the Install.sh script as the -b argument:
Note the URL includes the branch name also (here dev instead of master).
You can also run PoshC2 using Docker, this allows more stable and running and enables PoshC2 to easily run on other operating systems.
The Docker install does not clone PoshC2 as the PoshC2 images on Docker Hub are used, so only a minimal install of some dependencies and scripts are performed.
To start with, install Docker on the host and then add the PoshC2 projects directory to Docker as a shared directory if required for your OS.
By default this is /var/poshc2 on *nix and /private/var/poshc2 on Mac.
Elevated privileges are required as the install script performs script installations.
To use the dev or feature branches with Docker curl down the Install-for-Docker.sh on the appropriate branch and pass the branch name as an argument:
On Windows, import the PoshC2.psm1 PowerShell module.
Projects can be switched to or listed using this script:
Edit the configuration for your project:
Alternatively start it as a service:
Separately, run the ImplantHandler for interacting with implants:
See https://poshc2.readthedocs.io/en/latest/ for full documentation on PoshC2.
If you are using Docker you can specify the Docker image tag to run with the -t option to posh-server and posh.
It is not recommended to update PoshC2 during an engagement.
Incoming changes may be incompatible with an existing project and can result in erratic behaviour.
When using a git cloned version of PoshC2 you can update your PoshC2 installation using the following command:
You can use an older version of PoshC2 by referencing the appropriate tag.
Note this only works if you have cloned down the repository.
You can list the tags for the repository by issuing:
If you have a local clone of PoshC2 you can change the version that is in use while offline by just checking out the version you want to use:
However note that this will overwrite any local changes to files, such as changes to the configuration files, and you may have to re-run the install script for that version or re-setup the environment appropriately.
This software should only be used for authorised testing activity and not for malicious use.
By downloading this software you are accepting the terms of use and the licensing agreement.

      A proxy aware C2 framework used to aid red teamers with post-exploitation and lateral movement.
