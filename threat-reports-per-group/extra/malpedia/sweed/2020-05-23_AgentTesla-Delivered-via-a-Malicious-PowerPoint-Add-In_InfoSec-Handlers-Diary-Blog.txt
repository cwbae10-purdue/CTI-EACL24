Attackers are always trying to find new ways to deliver malicious code to their victims.
Microsoft Word and Excel are documents that can be easily weaponized by adding malicious VBA macros.
Today, they are one of the most common techniques to compromise a computer.
Especially because Microsoft implemented automatically executed macros when the document is opened.
In Word, the macro must be named AutoOpen().
In Excel, the name must be Workbook_Open().
However, PowerPoint does not support this kind of macro.
Not in the same way as Word and Excel do!
While hunting, I found an interesting document disguised as a PowerPoint template (with the extension ‘.pot’) delivered within a classic phishing email.
In reality, it was not a template but an add-in.
PowerPoint supports ‘add-ins’ developed by third parties to add new features[1].
Add-ins are able to automatically execute macros.
Here is the list of available actions:
Two macros are fired automatically within an add-in.
Auto_Open() is fired when the add-in is loaded and Auto_Close() fired when the add-in is being unloaded.
You can use them to do preprocessing, creating menu items, setting up event handlers, etc, or performing cleanup upon exiting.
The document (SHA256:b345b73a72f866ac3bc2945467d2678ca4976dd4c51bd0f2cdb142a79f56210a[2]) that I found contains an Auto_Close() macro defined that will open an URL when the victim closes PowerPoint.
Let’s have a look at the document.
Macros are stored in the same way as Word or Excel, they are stored in an OLE2 file:
When the victim opens the ‘Payments detail.pot’ file, PowerPoint is launched and the add-in silently installed.
Seeing that no content is displayed (there is no slide to render), the user will close PowerPoint and the macro will be executed.
You can see the installed Add-ins in the PowerPoint options:

The macro simply launches an URL.
In this case, Windows will try to open with the default browser.
This HTTP request returns a 301 to a pastie:
Here is the pastie content (some Javascript code):
The decode version shows more payloads being downloaded:
The script fetches two extra payloads from pastebin.com, one of them was already removed but I successfully grabbed a copy.
Both are identical, here is the decoded payload:
(Note the funny comments at the end of the script)
Two new pasties are fetched.
Here is the decoded content (PowerShell code):
The two hex-encoded chunks of data decoded into a DLL and a PE.
The PE is an AgentTesla malware (SHA256: d46615754e00e004d683ff2ad5de9bca976db9d110b43e0ab0f5ae35c652fab7[3])
Conclusion: PowerPoint can also be used to deliver malicious content!
Xavier Mertens (@xme)
Senior ISC Handler - Freelance Cyber Security Consultant
PGP Key
Sign Up for Free or Log In to start participating in the conversation!
Have you heard our daily podcast covering the latest information security threats?
