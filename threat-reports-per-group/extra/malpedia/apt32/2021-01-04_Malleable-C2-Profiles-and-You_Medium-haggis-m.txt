Like most defenders out there today we keep hearing and seeing CobaltStrike used by actors.
I wanted to share some notes on some back of the napkin research I‚Äôve been doing related to it in hopes that it sparks interest in others to begin investigating more.
It wasn‚Äôt until about 2 years ago I realized how powerful CobaltStrike is.
If I am this late, I can‚Äôt imagine how far heavily funded adversaries are in generating their toolsets.
I know some more advanced Red Teams have been using these capabilities to their fullest, but many are still using the defaults.
Some of this may come as old news, but for me, this was quite profound.
I‚Äôm talking about Malleable C2 Profiles.
A very generic set of these profiles may be found here:
The pieces didn‚Äôt connect as to what these were until I found
Simple things, like User Agent -
all the fields for SMB beacons, DNS beacons ‚Äî setting the pipes or DNS settings.. ü§î This is pretty fantastic stuff!
We talk about how actors blend in, here is your chance.
and I started to get really curious as to how these are being used.
I wont break down each section, but here are the resources to understand what is going on:
In short of what I am getting at, if an actor or red team wants to blend in, using these malleable C2 profiles is how the job will get done.
CobaltStrike itself has a lot of options, but I feel the money is on these profiles.
Now, I do not have a CobaltStrike teamserver, or own a license.
I am only basing my analysis on what I‚Äôve analyzed and seen in the wild.
However, there are cracked versions on the internet easily obtainable (probably backdoored ü§∑‚Äç‚ôÇ, but obtainable), and @BC-Security1 made the ability to import malleable profiles to Empire (more here).
ThreatExpress has been keeping their profiles up to date with each CS release.
I want to scope this blog on post exploitation.
Everything else is obviously very interesting, but for some reason post-ex interests me the most.
The idea is, which is great, allows the operator to select what process to spawn beacon into.
Upon its use, a process will spawn.
In practice, the process will sometimes look out of place by having a non-standard parent process, no command line arguments or maybe a network connection.
There is a lot of ways to remove OpSec with CobaltStrike ‚Äî maybe it‚Äôs not widely known or understood, but Beacon has a lot of options for configuration.
I‚Äôve seen others on Twitter begin to publicly share scans of CobaltStrike Team Servers.
I don‚Äôt believe it‚Äôs entirely public how some are gathering these data points ü§∑‚Äç‚ôÇ, but I am glad it‚Äôs happening.
There you go, lots of options and details there.
All the scanning and public lists lead to this small set of binaries being used to spawn into:
Note: rundll32.exe is the default.
We can use the spawn_to values as a jump off point for detection coverage by looking for and asking the following:
Does our EDR/AV product provider visibility to answer these questions?
This should be looked into.
Should we go and generate new coverage for the list above?
It‚Äôs a good start, however, I recommend baselining all of system32.
If threat actors of all sorts can get their hands on CobaltStrike, it is in your threat model.
Spawn_to is only one of the many things Beacon can do (more here).
We have only scratched the surface.
I only hope that as organizations buy and use CobaltStrike, they are taking the time to understand it and build out detection capabilities.
I also wish more teams publicly released or talked about how they are using CobaltStrike so that more defenders can learn from its use.
I hope you have found this interesting and use this as a way to begin (or continue) your journey in understanding more about CobaltStrike and its many uses.
I write, sometimes, about InfoSec related topics and I love coffee.
I write, sometimes, about InfoSec related topics and I love coffee.
