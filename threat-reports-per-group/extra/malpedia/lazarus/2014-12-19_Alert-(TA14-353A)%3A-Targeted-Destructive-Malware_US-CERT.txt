An official website of the United States government Here's how you know
US-CERT was recently notified by a trusted third party of cyber threat actors using a Server Message Block (SMB) Worm Tool to conduct cyber exploitation activities recently targeting a major entertainment company.
This SMB Worm Tool is equipped with a Listening Implant, Lightweight Backdoor, Proxy Tool, Destructive Hard Drive Tool, and Destructive Target Cleaning Tool.
SMB Worm Tool: This worm uses a brute force authentication attack to propagate via Windows SMB shares.
It connects home every five minutes to send log data back to command and control (C2) infrastructure if it has successfully spread to other Windows hosts via SMB port 445.
The tool also accepts new scan tasking when it connects to C2.
There are two main threads: the first thread calls home and sends back logs (a list of successful SMB exploitations), and the second thread attempts to guess passwords for SMB connections.
If the password is correctly guessed, a file share is established and file is copied and run on the newly-infected host.
Listening Implant: During installation of this tool, a portion of the binaries is decrypted using AES, with a key derived from the phrase "National Football League."
Additionally, this implant listens for connections on TCP port 195 (for "sensvc.exe" and "msensvc.exe") and TCP port 444 (for "netcfg.dll").
Each message sent to and from this implant is preceded with its length, then XOR encoded with the byte 0x1F.
Upon initial connection, the victim sends the string, "HTTP/1.1 GET /dns?\x00."
The controller then responds with the string "200 www.yahoo.com!\x00" (for "sensvc.exe" and "msensvc.exe") or with the string "RESPONSE 200 OK!!"
The controller sends the byte "!"
(0x21) to end the network connection.
This special message is not preceded with a length or XOR encoded.
Lightweight Backdoor: This is a backdoor listener that is designed as a service DLL.
It includes functionality such as file transfer, system survey, process manipulation, file time matching and proxy capability.
The listener can also perform arbitrary code execution and execute commands on the command line.
There are no callback domains associated with this malware since connections are inbound only on a specified port number.
Proxy Tool: Implants in this malware family are typically loaded via a dropper installed as a service, then configured to listen on TCP port 443.
The implant may have an associated configuration file which can contain a configurable port.
This proxy tool has basic backdoor functionality, including the ability to fingerprint the victim machine, run remote commands, perform directory listings, perform process listings, and transfer files.
Destructive Hard Drive Tool: This tool is a tailored hard-drive wiping tool that is intended to destroy data past the point of recovery and to complicate the victim machine’s recovery.
If the CNE operator has administrator-level privileges on the host, the program will over-write portions of up-to the first four physical drives attached, and over-write the master boot record (MBR) with a program designed to cause further damage if the hard drive is re-booted.
If the actor has user-level access, the result includes specific files being deleted and practically irrecoverable, but the victim machine would remain usable.
Destructive Target Cleaning Tool: This tool renders victim machines inoperable by overwriting the Master Boot Record.
The tool is dropped and installed by another executable and consists of three parts: an executable and a dll which contain the destructive components, and an encoded command file that contains the actual destruction commands to be executed.
Network Propagation Wiper: The malware has the ability to propagate throughout the target network via built-in Windows shares.
Based on the username/password provided in the configuration file and the hostname/IP address of target systems, the malware will access remote network shares in order to upload a copy of the wiper and begin the wiping process on these remote systems.
The malware uses several methods to access shares on the remote systems to begin wiping files.
Checking for existing shares via “\\hostname\admin$\system32” and “\\hostname\shared$\system32” or create a new share “cmd.exe /q /c net share shared$=%SystemRoot% /GRANT:everyone, FULL”.
Once successful, the malware uploads a copy of the wiper file “taskhostXX.exe”, changes the file-time to match that of the built-in file “calc.exe”, and starts the remote process.
The remote process is started via the command “cmd.exe /c wmic.exe /node:hostname /user:username /password:pass PROCESS CALL CREATE”.
Hostname, username, and password are then obtained from the configuration file.
Afterwards, the remote network share is removed via “cmd.exe /q /c net share shared$ /delete”.
Once the wiper has been uploaded, the malware reports its status back to one of the four C2 IP addresses.
Technical and strategic mitigation recommendations are included in the Solution section below.
US-CERT recommends reviewing the Security Tip Handling Destructive Malware #ST13-003.
Cyber threat actors are using an SMB worm to conduct cyber exploitation activities.
This tool contains five components – a listening implant, lightweight backdoor, proxy tool, destructive hard drive tool, and destructive target cleaning tool.
The SMB worm propagates throughout an infected network via brute-force authentication attacks, and connects to a C2 infrastructure.
Due to the highly destructive functionality of this malware, an organization infected could experience operational impacts including loss of intellectual property and disruption of critical systems.
Users and administrators are recommended to take the following preventive measures to protect their computer networks:
The following is a list of the Indicators of Compromise (IOCs) that can be added to network security solutions to determine whether they are present on a network.
        Earliest PE compile Time: 20141001T072107Z
        Most Recent PE compile Time: 20141001T072107Z
         Earliest PE compile Time: 20141001T120954Z
         Most Recent PE compile Time: 20141001T142138Z
         Earliest PE compile time: 20110411T225224Z
         Latest PE compile time: 20110411T225224Z
         Earliest PE compile time: 20110517T050015Z
         Latest PE compile time: 20110605T204508Z
         Earliest PE compile time: 20110729T062417Z
         Latest PE compile time: 20110729T062958Z
         Earliest PE compile time: 20120128T071327Z
         Latest PE compile time: 20120128T071327Z
         Earliest PE compile time: 20120309T105837Z
         Latest PE compile time: 20120309T105837Z
         Earliest PE compile time: 20120311T090329Z
         Latest PE compile time: 20120311T090329Z
         Earliest PE compile time: 20120325T053138Z
         Latest PE compile time: 20130513T090422Z
         Earliest PE compile time: 20130802T054822Z
         Latest PE compile time: 20130802T054822Z
         Earliest PE compile time: 20130913T013016Z
         Latest PE compile time: 20130913T013016Z
         Earliest PE compile time: 20140205T090906Z
         Latest PE compile time: 20140205T090906Z
         Earliest PE compile time: 20140320T152637Z
         Latest PE compile time: 20140402T023748Z
         Earliest PE compile time: 20140321T014949Z
         Latest PE compile time: 20140321T014949Z
         Earliest PE compile time: 20140506T020330Z
         Latest PE compile time: 20140506T020330Z
         Earliest PE compile time: 20140611T064905Z
         Latest PE compile time: 20140611T064905Z
         Earliest PE compile time: 20140617T035143Z
         Latest PE compile time: 20140617T035143Z
         Earliest PE compile time : 20140618T064527Z
         Latest PE compile time: 20140618T064527Z
         Earliest PE compile time: 20140724T011233Z
         Latest PE compile time: 20140724T011233Z
         Earliest PE compile time: 20140724T065031Z
         Latest PE compile time: 20140902T135050Z
         Earliest PE compile time: 20140819T024812Z
         Latest PE compile time: 20140819T024812Z
         Earliest PE compile time: 20140902T172442Z
         Latest PE compile time: 20140902T172442Z
         Earliest PE compile time: 20141024T134136Z
         Latest PE compile time: 20141024T134136Z
         Earliest PE compile time: 20140526T010925Z
         Latest PE compile time: 20140526T010925Z
         Earliest PE compile time: 20140611T064904Z
Notes: "Destructive hard drive tool"
         Earliest PE compile time: 20120507T151820Z
         Latest PE compile time: 20120507T151820Z
Notes: "Destructive target cleaning tool"
         Earliest PE compile time: 20130318T003315Z
         Latest PE compile time: 20130318T003315Z
Notes: "Destructive target cleaning tool"
         Earliest PE compile time: 20130318T003319Z
         Latest PE compile time: 20130318T003319Z
Size: 268579 bytes (268.6 KB)
PE Compile Time: 2014-11-22 00:06:54
The malware has the following characteristics:
While the original filename of this file is unknown, it was likely “diskpartmg16.exe”.
This file serves as a dropper.
It drops destructive malware: “igfxtrayex.exe”.
When the dropper file was executed, it started a second instance of itself with “-i” as an argument, and then terminated.
The second instance of the dropper file installed itself as the “WinsSchMgmt” service with “-k” as a command line argument, started the service, and then terminated.
The “WinsSchMgmt” service executed the file with “-k” as an argument, which started another instance of the file using “-s” as an argument.
The “-s” instance dropped and executed “igfxtrayex.exe”, created “net_ver.dat”, and began generating network traffic over TCP ports 445 and 139 to victim IP addresses.
Size: 4572 bytes (4.6 KB)  (size will vary)
MD5: 93BC819011B2B3DA8487F964F29EB934  (hash will vary)
This is a log file created by the dropper, and appended to as the scans progress  It contains what appear to be hostnames, IP addresses, and the number 2.
Entries in the file have the structure “HOSTNAME | IP Address | 2”.
Size: 249856 bytes (249.9 KB)
PE Compile Time: 2014-11-24 04:11:08
This file is destructive malware: a disk wiper with network beacon capabilities.
If “igfxtrayex.exe” is run with no parameters, it creates and starts a copy of itself with the “–i” argument.
After 10 minutes, the “igfxtrayex.exe” makes three copies of itself and places them in the same directory from which it was executed.
These copies are named according to the format “taskhostXX.exe” (where X is a randomly generated ASCII character).
These copies are then executed, each with a different argument (one being “-m”, one being “-d” and the other “-w”).
Network connection attempts are made to one of three hard-coded IP addresses in a random order to port 8080 or 8000.
If a connection to the IP address cannot be made, it attempts to connect to another of the three IP addresses, until connections to all three IP addresses have been attempted.
The following command-line string is then executed: “cmd.exe /c net stop MSExchangeIS /y”.
A 120-minute (2 hour) sleep command is issued after which the computer is shut down and rebooted.
Size: 114688 bytes (114.7 KB)
PE Compile Time: 2014-11-13 02:05:35
This file, when executed, starts a listener on localhost port 80.
It has 3 files contained in the resource section; all xor’d with 0x63.
Size: 24280 bytes (24.3 KB)
PE Compile Time: 2009-08-21 06:05:32
This SYS file is a commercially available tool that allows read/write access to files and raw disk sectors for user mode applications in Windows 2000, XP, 2003, Vista, 2008 (32-bit).
It is dropped from resource ID 0x81 of “igfxtrayex.exe”.
Size: 28120 bytes (28.1 KB)
PE Compile Time: 2009-08-21 06:05:35
This SYS file is a also a commercially available tool that allows read/write access to files and raw disk sectors for user mode applications in Windows 2000, XP, 2003, Vista, 2008 (64-bit).
It is dropped from resource ID 0x83 of “igfxtrayex.exe”.
Size: 91888 bytes (91.9 KB)
PE Compile Time: 2014-07-07 08:01:09
A summary of the C2 IP addresses:
SMB Worm Tool (not necessarily the tool itself):
alert tcp any any -> any any (msg:"Wiper 1"; sid:42000001; rev:1; flow:established; content:"|be 64 ba f2 a8 64|"; depth:6; offset:16; classtype:bad-unknown;)
alert tcp any any -> any any (msg:"Wiper 2"; sid:42000002; rev:1; flow:established; content:"|c9 06 d9 96 fc 37 23 5a fe f9 40 ba 4c 94 14 98|"; depth:16; classtype:bad-unknown;)
alert tcp any any -> any any (msg:"Wiper 3"; sid:42000003; rev:1; flow:established; content:"|aa 64 ba f2 56|"; depth:50; classtype:bad-unknown;)
alert ip any any -> any any (msg:"Wiper 4"; sid:42000004; rev:1; content:"|aa 74 ba f2 b9 75|"; depth:74; classtype:bad-unknown;)
alert tcp any any -> any [8000,8080] (msg:"Wiper 5"; sid:42000005; rev:1; flow:established,to_server; dsize:42; byte_test:2,=,40,0,little; content:"|04 00 00 00|"; depth:4; offset:38; classtype:bad-unknown;)
alert tcp any any -> any any (msg:"Listening Implant 1"; sid:42000006; rev:1; flow:established; content:"|0c 1f 1f 1f 4d 5a 4c 4f 50 51 4c 5a 3f 2d 2f 2f 3f 50 54 3e 3e 3e|"; depth:22; classtype:bad-unknown;)
alert tcp any any -> any any (msg:"Listening Implant 2"; sid:42000007; rev:1; flow:established; content:"|d3 c4 d2 d1 ce cf d2 c4 a1 b3 b1 b1 a1 ce ca a0 a0 a0|"; depth:18; classtype:bad-unknown;)
alert ip any any -> any any (msg:"Listening Implant 3"; sid:42000008; rev:1; content:"|17 08 14 13 67 0f 13 13 17 67 15 02 16 12 02 14 13 78 47 47|"; depth:24; classtype:bad-unknown;)
alert ip any any -> any any (msg:"Listening Implant 4"; sid:42000009; rev:1; content:"|4f 50 4c 4b 3f 57 4b 4b 4f 3f 4d 5a 4e 4a 5a 4c 4b 20 1f|"; depth:23; classtype:bad-unknown;)
alert ip any any -> any any (msg:"Listening Implant 5"; sid:42000010; rev:1; content:"|15 02 14 17 08 09 14 02 67 75 77 77 67 08 0c 66 66 66|"; depth:22; classtype:bad-unknown;)
alert tcp any any -> any any (msg:"Listening Implant 6"; sid:42000011; rev:1; flow:established; content:"|09 22 33 30 28 35 2c|"; fast_pattern:only; classtype:bad-unknown;)
alert tcp any any -> any any (msg:"Listening Implant 7"; sid:42000012; rev:1; flow:established; content:"|13 2f 22 35 22 67 26 35 22 29 27 33 67 28 37 22 29 67 37 28 35 33 34 69|"; fast_pattern:only; classtype:bad-unknown;)
alert tcp any any -> any any (msg:"Listening Implant 8"; sid:42000013; rev:1; flow:established; content:"|43 47 47 47 45 67 47 47 43 47 47 47 44 67 47 47|"; classtype:bad-unknown;)
alert tcp any any -> any any (msg:"Listening Implant 9"; sid:42000014; rev:1; flow:established; content:"|43 47 47 47 42 67 47 47 43 47 47 47 4f 67 47 47 43 47 47 47 43 67 47 47 43 47 47 47 4e 67 47 47|"; classtype:bad-unknown;)
alert tcp any any -> any any (msg:"Listening Implant 10"; sid:42000015; rev:1; flow:established; content:"|d1 ce d2 d5 a1 c9 d5 d5 d1 a1 d3 c4 d0 d4 c4 d2 d5 be|"; depth:18; classtype:bad-unknown;)
alert tcp any any -> any any (msg:"Listening Implant 11"; sid:42000016; rev:1; flow:established; content:"|17 08 14 13 67 0f 13 13 17 67 15 02 16 12 02 14 13 78|"; depth:18; classtype:bad-unknown;)
alert tcp any any -> any any (msg:"Listening Implant 12"; sid:42000017; rev:1; flow:established; content:"|0c 1f 1f 1f 4f 50 4c 4b 3f 57 4b 4b 4f 3f 4d 5a 4e 4a 5a 4c 4b 20|"; classtype:bad-unknown;)
alert tcp any 488 -> any any (msg:"Lightweight Backdoor 1"; sid:42000018; rev:1; flow:established,from_server; content:"|60 db 37 37 37 37 37 37|"; fast_pattern:only; classtype:bad-unknown;)
alert tcp any any -> any 488 (msg:"Lightweight Backdoor 2"; sid:42000019; rev:1; flow:established,to_server; content:"|60 db 37 37 37 37 37 37|"; fast_pattern:only; classtype:bad-unknown;)
alert tcp any any -> any any (msg:"Lightweight Backdoor 3"; sid:42000020; rev:1; flow:established; content:"|4c 4c|"; depth:2; offset:16; content:"|75 14 2a 2a|"; distance:4; within:4; classtype:bad-unknown;)
alert tcp any any -> any any (msg:"Lightweight Backdoor 4"; sid:42000021; rev:1; flow:established; content:"|8a 10 80 c2 67 80 f2 24 88 10|"; fast_pattern:only; content:"|8a 10 80 f2 24 80 ea 67 88 10|"; classtype:bad-unknown;)
alert tcp any 488 -> any any (msg:"Lightweight Backdoor 5"; sid:42000022; rev:1; flow:established,from_server; content:"|65 db 37 37 37 37 37 37|"; fast_pattern:only; classtype:bad-unknown;)
alert tcp any any -> any 488 (msg:"Lightweight Backdoor 6"; sid:42000023; rev:1; flow:established,to_server; content:"|65 db 37 37 37 37 37 37|"; fast_pattern:only; classtype:bad-unknown;)
alert tcp any [547,8080,133,117,189,159] -> any any (msg:"Lightweight Backdoor 7"; sid:42000024; rev:1; flow:established,from_server; content:"|7b 08 2a 2a|"; offset:17; content:"|08 2a 2a 01 00|"; distance:0; classtype:bad-unknown;)
alert tcp any any -> any any (msg:"Lightweight Backdoor 8"; sid:42000025; rev:1; flow:established; content:"|8a 10 80 ea 62 80 f2 b4 88 10|"; fast_pattern:only; content:"|8a 10 80 f2 b4 80 c2 62 88 10|"; classtype:bad-unknown;)
alert tcp any any -> any any (msg:"Lightweight Backdoor 9"; sid:42000026; rev:1; flow:established; content:"|8a 10 80 c2 4e 80 f2 79 88 10|"; fast_pattern:only; content:"|8a 10 80 f2 79 80 ea 4e 88 10|"; classtype:bad-unknown;)
alert tcp any any -> any any (msg:"Lightweight Backdoor 10"; sid:42000027; rev:1; flow:established; content:"Sleepy!
alert tcp any any -> any any (msg:"Proxy Tool 1"; sid:42000028; rev:1; flow:established; content:"|8a 10 80 c2 3a 80 f2 73 88 10|"; fast_pattern:only; content:"|8a 10 80 f2 73 80 ea 3a 88 10|"; classtype:bad-unknown;)
alert tcp any any -> any any (msg:"Proxy Tool 2"; sid:42000029; rev:1; flow:established; content:!
"HTTP/1"; content:"|e2 1d 49 49|"; depth:4; fast_pattern; content:"|49 49 49 49|"; distance:4; within:4; classtype:bad-unknown;)
alert tcp any any -> any any (msg:"Proxy Tool 3"; sid:42000030; rev:1; flow:established; content:"|82 f4 de d4 d3 c2 ca f5 c8 c8 d3 82 fb f4 de d4 d3 c2 ca 94 95 fb d4 d1 c4 cf c8 d4 d3 89 c2 df c2 87 8a cc 87 00|"; fast_pattern:only; classtype:bad-unknown;)
Malware associated with the cyber threat actor:
alert tcp any any -> any [8000,8080] (msg:"WIPER4";flow: established, to_server;dsize:42;content:"|28 00|";depth:2;content:"|04 00 00 00|";offset:38;depth:4;sid:123;)
Below are potential YARA signatures to detect malware binaries on host machines:
    strings:
        $STR1 = "NetMgStart"
        $STR2 = "Netmgmt.srg"
        
    condition:
        (uint16(0) == 0x5A4D) and all of them
}
rule LightweightBackdoor2
{
    strings:
        $STR1 = "prxTroy" ascii wide nocase
    
    condition:
        (uint16(0) == 0x5A4D or uint16(0) == 0xCFD0 or uint16(0) == 0xC3D4 or uint32(0) == 0x46445025 or uint32(1) == 0x6674725C) and all of them
}
rule LightweightBackdoor6
{
    strings:
        $STR1 = { 8A 10 80 ??
79 88 10}
        $STR2 = { 8A 10 80??
4E 88 10}
    
    condition:
        (uint16(0) == 0x5A4D or uint16(0) == 0xCFD0 or uint16(0) == 0xC3D4 or uint32(0) == 0x46445025 or uint32(1) == 0x6674725C) and all of them
}
rule ProxyTool1
{
    strings:
        $STR1 = "pmsconfig.msi" wide
        $STR2 = "pmslog.msi" wide
    
    condition:
        (uint16(0) == 0x5A4D or uint16(0) == 0xCFD0 or uint16(0) == 0xC3D4 or uint32(0) == 0x46445025 or uint32(1) == 0x6674725C) and any of them
}
rule ProxyTool2
{
strings:
    $STR1 = { 82 F4 DE D4 D3 C2 CA F5 C8 C8 D3 82 FB F4 DE D4 D3 C2 CA 94 95 FB D4 D1 C4 CF C8 D4 D3 89 C2 DF C2 87 8A CC 87 00 } // '%SystemRoot%\System32\svchost.exe -k' xor A7
condition:
    (uint16(0) == 0x5A4D or uint16(0) == 0xCFD0 or uint16(0) == 0xC3D4 or uint32(0) == 0x46445025 or uint32(1) == 0x6674725C) and all of them
}
rule ProxyTool3
{
    strings:
        $STR2 = {8A 04 17 8B FB 34 A7 46 88 02 83 C9 FF}
    
    condition:
        (uint16(0) == 0x5A4D or uint16(0) == 0xCFD0 or uint16(0) == 0xC3D4 or uint32(0) == 0x46445025 or uint32(1) == 0x6674725C) and $STR2
}
rule DestructiveHardDriveTool1
{
    strings:
        $str0= "MZ"
        $str1 = {c6 84 24 ??
rule DestructiveTargetCleaningTool1
{
    strings:
        $s1  = {d3000000 [4] 2c000000 [12] 95000000 [4] 6a000000 [8] 07000000}
    
    condition:
        (uint16(0) == 0x5A4D and uint16(uint32(0x3c)) == 0x4550) and all of them
}
rule DestructiveTargetCleaningTool2
{
    strings:
        $secureWipe = { 83 EC 34 53 55 8B 6C 24 40 56 57 83 CE FF 55 C7 44 24 2C D3 00 00 00 C7 44 24 30 2C 00 00 00 89 74 24 34 89 74 24   38 C7 44 24 3C 95 00 00 00 C7 44 24 40 6A 00 00 00 89 74 24 44 C7 44 24 14 07 00 00 00 FF 15 ??
3B C6 89 44 24 1C 0F 84 (D8 | d9) 01 00 00 33 FF 68 00 00 01 00 57 FF 15 ??
8B D8 3B DF 89 5C 24 14 0F 84 (BC | BD) 01 00 00 8B 44 24 1C A8 01 74 0A 24 FE 50 55 FF 15 ??
88 04 1E 46 81 FE 00 00 01 00 7C ( EF | ee) 6A 00 6A 00 6A 03 6A 00 6A 03 68 00 00 00 C0 55 FF 15 ??
8B F0 83 FE FF 0F 84 FA 00 00 00 8D 44 24 20 50 56 FF 15 ??
6A 02 6A 00 6A FF 56 FF D5 8D 4C 24 18 6A 00 51 6A 01 53 56 FF 15 ??
6A 00 6A 00 6A 00 56 FF D5 8B 44 24 24 8B 54 24 20 33 FF 33 DB 85 C0 7C 5A   7F 0A 85 D2 76 54 EB 04 8B 54 24 20 8B CA BD 00 00 01 00 2B CF 1B C3 85 C0 7F 0A 7C 04 3B CD 73 04 2B D7 8B EA 8B 44 24 14 8D 54 24 18 6A 00 52 55 50 56 FF 15 ??
8B 6C 24 18 8B 44 24 24 03 FD 83 D3 00 3B D8 7C BE 7F 08 8B 54 24 20 3B FA 72 B8 8B 2D ??
8B 5C 24 10 8B 7C 24 1C 8D 4B FF 3B F9 75 17 56 FF 15 ??
6A 00 6A 00 6A 00 56 FF D5 56 FF 15 ??
8B 4C 24 4C 8B 6C 24 48 47 83 C1 04 3B FB 8B 5C 24 14 89 7C 24 1C 89 4C 24 4C 0F 8C ( AE | AD) FE FF FF 6A 00 55 E8 ??
83 C4 08 53 FF 15 ??
5F 5E 5D 5B 83 C4 34 C3 }
    
    condition:
        $secureWipe
}
rule DestructiveTargetCleaningTool3
{
    
    strings:
        $S1_CMD_Arg = "/install" fullword
        $S2_CMD_Parse= "\"%s\"  /install \"%s\"" fullword
        $S3_CMD_Builder= "\"%s\"  \"%s\" \"%s\" %s" fullword
    
    condition:
        all of them
}
rule DestructiveTargetCleaningTool5
{
    strings:
        $MCU_DLL_ZLIB_COMPRESSED2 = { 5C EC AB AE 81 3C C9 BC D5 A5 42 F4 54 91 04 28 34 34 79 80 6F 71 D5 52 1E 2A 0D }
    
    condition:
        $MCU_DLL_ZLIB_COMPRESSED2
}
rule DestructiveTargetCleaningTool7
{
    strings:
        $a = "SetFilePointer"
        $b = "SetEndOfFile"
        $c = {75 17 56 ff 15 ??
6a 00 6a 00 6a 00 56 ff D5 56 ff 15 ??
56}
    
    condition:
        (uint16(0) == 0x5A4D and uint16(uint32(0x3c)) == 0x4550) and all of them
}
?033C0C36A0158C3}
        
        $heapCreateFunction = { 55 8B EC B8 2C 12 00 00 E8 ??
FF FF 8D 85 68 FF FF FF 53 50 C7 85 68 FF FF FF 94 00 00 00 FF 1?
?0 85 C0 74 1A 83 BD 78 FF FF FF 02 75 11 83 BD 6C FF FF FF 05 72 08 6A 01 58 E9 02 01 00 00 8D 85 D4 ED FF F6 89 01 00 00 05 06 8?
08 5C 00 F8 4D 00 00 00 03 3D B8 D8 DD 4E DF FF F3 89 DD DF FF F7 41 38 A0 13 C6 17 C0 83 C7 A7 F0 42 C2 08 80 14 13 81 97 5E D8 D8 5D 4E DF FF F6 A1 65 06 8?
?0 00 08 3C 40 C8 5C 07 50 88 D8 5D 4E DF FF FE B4 98 D8 56 4F EF FF F6 80 40 10 00 05 05 3F F1 5?
03 89 D6 4F EF FF F8 D8 D6 4F EF FF F7 41 38 A0 13 C6 17 C0 83 C7 A7 F0 42 C2 08 80 14 13 81 97 5E D8 D8 56 4F EF FF F5 08 D8 5D 4E DF FF F5 0E 8?
?5 95 93 BC 37 43 E6 A2 C5 0E 8?
?5 93 BC 35 97 43 04 08 BC 83 81 87 40 E8 03 93 B7 50 48 81 9E B0 14 13 81 97 5F 26 A0 A5 35 0E 8?
?0 00 08 3C 40 C8 3F 80 27 41 D8 3F 80 37 41 88 3F 80 17 41 38 D4 5F C5 0E 89 8F EF FF F8 07 DF C0 65 91 BC 08 3C 00 35 BC 9C}
        
        $getMajorMinorLinker = {568B7424086A00832600FF15??????
?0?0?08BF?85F?74}
    
    condition:
    
        all of them
}

rule Malwareusedbycyberthreatactor3
{
    strings:
        $STR1 = { 50 68 80 00 00 00 68 FF FF 00 00 51 C7 44 24 1C 3a 8b 00 00 }
    
    condition:
        (uint16(0) == 0x5A4D or uint16(0) == 0xCFD0 or uint16(0) == 0xC3D4 or uint32(0) == 0x46445025 or uint32(1) == 0x6674725C) and all of them
}
Because of the highly destructive functionality of the malware, an organization infected with the malware could experience operational impacts including loss of intellectual property (IP) and disruption of critical systems.
Actual impact to organizations may vary depending on the type and number of systems impacted.
This product is provided subject to this Notification and this Privacy & Use policy.
We recently updated our anonymous product survey; we'd welcome your feedback.
Receive security alerts, tips, and other updates.
CISA is part of the Department of Homeland Security
