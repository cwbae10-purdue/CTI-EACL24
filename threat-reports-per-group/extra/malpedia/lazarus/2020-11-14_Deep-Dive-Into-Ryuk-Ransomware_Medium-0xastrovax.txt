Hello World, This Will Probably be My First Malware Report Where I will Reverse Ryuk Ransomware.
So Before Getting into Technical Analysis and Reverse Engineering I will Provide Some Introduction to Ryuk.
So let’s First Discuss the CyberKillChain of Ryuk it goes typically like this:
1- An maldoc Contains a malicious macro that will execute PowerShell.2- The PowerShell Command then Downloads Emotet Banking Trojan.3- Emotet Then Downloads TrickBot4- As A Typical Lateral Movement Activity TrickBot Downloads Ryuk5- Ryuk Then Tries to Encrypt all the Network Hosts
However in new samples it uses BazarLoader and Cobalt Strike and it goes like this.
Here I analyzed a sample not old its from 2020 but that’s because I analyzed this sample before ryuk last attack occurred.
So Attribution is Hard However From What I have Read Threat Intel Researches Suggest that it belongs to the Authors of HERMES which is a Ransomware first was detected in October 2017 was then arrtributed to an APT Group Called Lazarus Group.
By Static Code Analysis it Concats “.exe” to the name of the dropped file and executes it using ShellExecute passing a param “8 lan” to it.
this command is a hardware feauture called WoL (Wakeup On Lan) which allow a computer to turned on by a network message.
it works on a lan network.
the way its executed is by the program for our case its ryuk sends a message to all the devices on the same lan.
As You Can See a Typo Found in the First Command The Author Missed ‘e’ in delete.
Ryuk Uses GetProcAddress and LoadLibraryA to Resolve Its APIs
And By Using the Debugger:
Due to That I don’t Know Emulation or Scripting + Scylla Didn’t Dump the process correctly I managed to rename them manually :) here is the result:
Ryuk Escalates Privilege by Modifying the Access Token
According to MSDN The LookupPrivilegeValue function retrieves the locally unique identifier (LUID) used on a specified system to locally represent the specified privilege name.
It Takes 3 Parameters lpSystemName, lpName, lpLuid.
What We Care About is the Second Here the Second Param is The Name of The Privilege Looked up In this Case its “ “SeDebugPrivilege” this is used to inspect and Modify the memory of other process.
This Will Be Used For Process Injection.
Ryuk Acheives Persistence by Adding the Path of the malware under /Run Key In the Registry Makes it Run Every Time the User logs In It uses this Command
First It Opens a Process
Then It Allocates Memory in the Target Process
Next it Writes injects its Self using WriteProcessMemory and Creates a Thread to run the injected code
Following with the debugger we can see the exectuable in the memory dump
Ryuk Uses AES-256 Encryption it utilizes the CryptoAPI by Microsoft.
It Encrypts the Files using “.RYK” Extension.
The AES Key is Encrypted using a Public RSA Key.
It uses a Marker “HERMES” to identify if the file is encrypted or not.
Ryuk Uses MultiThreaded Approach to Encrypt the files which means it makes a thread per file which makes it very fast.
It loops Through the Files using FindFirstFileA and FindNextFileA.
It Avoid Encrypting Some Files
Here it builds Strings on stack for folders to avoid encrypting its files or skipping it
There is two Assumptions One is that that Who Wrote Ryuk was the same who wrote HERMES or just that Ryuk Author was having HERMES Source code.
The Encryption Logic is Same as HERMES.
As We Saw Ryuk Uses AES-256 and Encrypts the KEY using RSA and that is the same in HERMES.
Also Checking the Code the Author Didn’t Change the marker of the encrypted files.
This Marker is used to check if the file was encrypted or not.
Also HERMES Uses the Same Batch Script used to delete the shadows copies.
Even the files/folders that are skipped are the same.
You Can Find My YARA Rule Here Ryuk
[+] Execution through API T1106
[+] Registry Run Keys / Startup Folder T1060
[+] Disabling Security Tools T1089
[+] File Permissions Modification T1222
[+] System Service Discovery T1007
[+] Inhibit System Recovery T1490
[+] Access Token Manipulation T1134
[+] Impair Defenses: Disable or Modify Tools T1562
[+] Data Encrypted for Impact T1486
So That’s It Hope You Enjoy It I am a N00b so my mistakes are alot xD so if u have any suggestions for me feel free to dm on twitter @astrovax
A community for the nerds by the nerds focused on various domains of security research.
A community for the nerds by the nerds related to:Reverse Engineering, Malware analysis, Web security, CTFs & various other domains of security research.
A community for the nerds by the nerds related to:Reverse Engineering, Malware analysis, Web security, CTFs & various other domains of security research.
