As the IT and OT environment becomes more complex, adversaries are quick to adapt their attack strategy.
For example, as users’ work environments diversify, adversaries are busy acquiring the TTPs to infiltrate systems.
Recently, we reported to our Threat Intelligence Portal customers a similar malware framework that internally we called MATA.
The MATA malware framework possesses several components, such as loader, orchestrator and plugins.
This comprehensive framework is able to target Windows, Linux and macOS operating systems.
The first artefacts we found relating to MATA were used around April 2018.
After that, the actor behind this advanced malware framework used it aggressively to infiltrate corporate entities around the world.
We identified several victims from our telemetry and figured out the purpose of this malware framework.
The Windows version of MATA consists of several components.
According to our telemetry, the actor used a loader malware to load the encrypted next-stage payload.
We’re not sure that the loaded payload is the orchestrator malware, but almost all victims have the loader and orchestrator on the same machine.
Component of the Windows version of MATA
This loader takes a hardcoded hex-string, converts it to binary and AES-decrypts it in order to obtain the path to the payload file.
Each loader has a hard-coded path to load the encrypted payload.
The payload file is then AES-decrypted and loaded.
From the loader malware found on one of the compromised victims, we discovered that the parent process which executes the loader malware is the “C:\Windows\System32\wbem\WmiPrvSE.exe” process.
The WmiPrvSE.exe process is “WMI Provider Host process”, and it usually means the actor has executed this loader malware from a remote host to move laterally.
Therefore, we assess that the actor used this loader to compromise additional hosts in the same network.
We discovered the orchestrator malware in the lsass.exe process on victims’ machines.
This orchestrator malware loads encrypted configuration data from a registry key and decrypts it with the AES algorithm.
Unless the registry value exists, the malware uses hard-coded configuration data.
The following is a configuration value example from one orchestrator malware sample:
The orchestrator can load 15 plugins at the same time.
There are three ways to load them:
The malware authors call their infrastructure MataNet.
For covert communication, they employ TLS1.2 connections with the help of the “openssl-1.1.0f” open source library, which is statically linked inside this module.
Additionally, the traffic between MataNet nodes is encrypted with a random RC4 session key.
MataNet implements both client and server mode.
In server mode the certificate file “c_2910.cls” and the private key file “k_3872.cls” are loaded for TLS encryption.
However, this mode is never used.
The MataNet client establishes periodic connections with its C2.
Every message has a 12-byte-long header, where the first DWORD is the message ID and the rest is the auxiliary data, as described in the table below:
The main functionality of the orchestrator is loading each plugin file and executing them in memory.
Each DLL file type plugin provides an interface for the orchestrator and provides rich functionality that can control infected machines.
Ping given host or IP range.
There is an interesting string inside the MATA_Plug_WebProxy plugin – “Proxy-agent: matt-dot-net” – which is a reference to Matt McKnight’s open source project.
There are some differences though.
Matt’s project is written in C# rather than C++.
The MATA proxy is noticeably simpler, as there is no cache and no SSL support, for instance.
It’s possible that MATA’s authors found and used the source code of an early version of Matt’s proxy server.
It looks like the malware author rewrote the code from C# to C++ but left this footprint unchanged.
The MATA framework targets not only the Windows system but also Linux and macOS systems.
During our research, we also found a package containing different MATA files together with a set of hacking tools.
In this case, the package was found on a legitimate distribution site, which might indicate that this is the way the malware was distributed.
It included a Windows MATA orchestrator, a Linux tool for listing folders, scripts for exploiting Atlassian Confluence Server (CVE-2019-3396), a legitimate socat tool and a Linux version of the MATA orchestrator bundled together with a set of plugins.
China-based security vendor Netlab also published a highly detailed blog on this malware.
The module is designed to run as a daemon.
Upon launch, the module checks if it is already running by reading the PID from “/var/run/init.pid” and checks if the “/proc/%pid%/cmdline” file content is equal to “/flash/bin/mountd”.
Note that “/flash/bin/mountd” is an unusual path for standard Linux desktop or server installations.
This path suggests that MATA’s Linux targets are diskless network devices such as routers, firewalls or IoT devices based on x86_64.
The module can be run with the “/pro” switch to skip the “init.pid” check.
The AES-encrypted configuration is stored in the “$HOME/.memcache” file.
The behavior of this module is the same as the Windows MATA orchestrator previously described.
The plugin names of Linux MATA and the corresponding Windows plugins are:
Note that the Linux version of MATA has a logsend plugin.
This plugin implements an interesting new feature, a “scan” command that tries to establish a TCP connection on ports 8291 (used for administration of MikroTik RouterOS devices) and 8292 (“Bloomberg Professional” software) and random IP addresses excluding addresses belonging to private networks.
Any successful connection is logged and sent to the C2.
These logs might be used by attackers for target selection.
We discovered another MATA malware target for macOS uploaded to VirusTotal on April 8, 2020.
The malicious Apple Disk Image file is a Trojanized macOS application based on an open-source two-factor authentication application named MinaOTP.
Like another strain running on a different platform, the macOS MATA malware also runs on a plugin basis.
Its plugin list is almost identical to the Linux version, except that it also contains a plugin named “plugin_socks”.
The “plugin_socks” plugin is similar to “plugin_reverse_p2p” and is responsible for configuring proxy servers.
Victims
Based on our telemetry, we have been able to identify several victims who were infected by the MATA framework.
The infection is not restricted to a specific territory.
Victims were recorded in Poland, Germany, Turkey, Korea, Japan and India.
Moreover, the actor compromised systems in various industries, including a software development company, an e-commerce company and an internet service provider.
We assess that MATA was used by an APT actor, and from one victim we identified one of their intentions.
After deploying MATA malware and its plugins, the actor attempted to find the victim’s databases and execute several database queries to acquire customer lists.
We’re not sure if they completed the exfiltration of the customer database, but it’s certain that customer databases from victims are one of their interests.
In addition, MATA was used to distribute VHD ransomware to one victim, something that will be described in detail in an upcoming blog post.
Victims of MATA
Attribution
We assess that the MATA framework is linked to the Lazarus APT group.
The MATA orchestrator uses two unique filenames, c_2910.cls and k_3872.cls, which have only previously been seen in several Manuscrypt variants, including the samples (0137f688436c468d43b3e50878ec1a1f) mentioned in the US-CERT publication.
Unique file name
Moreover, MATA uses global configuration data including a randomly generated session ID, date-based version information, a sleep interval and multiple C2s and C2 server addresses.
We’ve seen that one of the Manuscrypt variants (ab09f6a249ca88d1a036eee7a02cdd16) shares a similar configuration structure with the MATA framework.
This old Manuscrypt variant is an active backdoor that has similar configuration data such as session ID, sleep interval, number of C2 addresses, infected date, and C2 addresses.
They are not identical, but they have a similar structure.
Manuscrypt configuration structure 
Conclusion
The MATA framework is significant in that it is able to target multiple platforms: Windows, Linux and macOS.
In addition, the actor behind this advanced malware framework utilized it for a type of cybercrime attack that steals customer databases and distributes ransomware.
We evaluate that this malware is going to evolve, so we will be monitoring its activity in order to protect our customers.
Upon launch, this malicious Mach-o file loads the initial configuration file from “/Library/Caches/com.apple.appstotore.db”.
Like another strain running on a different platform, the macOS MATA malware also runs on a plugin basis.
Its plugin list is almost identical to the Linux version, except that it also contains a plugin named “plugin_socks”.
The “plugin_socks” plugin is similar to “plugin_reverse_p2p” and is responsible for configuring proxy servers.
Based on our telemetry, we have been able to identify several victims who were infected by the MATA framework.
The infection is not restricted to a specific territory.
Victims were recorded in Poland, Germany, Turkey, Korea, Japan and India.
Moreover, the actor compromised systems in various industries, including a software development company, an e-commerce company and an internet service provider.
We assess that MATA was used by an APT actor, and from one victim we identified one of their intentions.
After deploying MATA malware and its plugins, the actor attempted to find the victim’s databases and execute several database queries to acquire customer lists.
We’re not sure if they completed the exfiltration of the customer database, but it’s certain that customer databases from victims are one of their interests.
In addition, MATA was used to distribute VHD ransomware to one victim, something that will be described in detail in an upcoming blog post.
We assess that the MATA framework is linked to the Lazarus APT group.
The MATA orchestrator uses two unique filenames, c_2910.cls and k_3872.cls, which have only previously been seen in several Manuscrypt variants, including the samples (0137f688436c468d43b3e50878ec1a1f) mentioned in the US-CERT publication.
Moreover, MATA uses global configuration data including a randomly generated session ID, date-based version information, a sleep interval and multiple C2s and C2 server addresses.
We’ve seen that one of the Manuscrypt variants (ab09f6a249ca88d1a036eee7a02cdd16) shares a similar configuration structure with the MATA framework.
This old Manuscrypt variant is an active backdoor that has similar configuration data such as session ID, sleep interval, number of C2 addresses, infected date, and C2 addresses.
They are not identical, but they have a similar structure.
The MATA framework is significant in that it is able to target multiple platforms: Windows, Linux and macOS.
In addition, the actor behind this advanced malware framework utilized it for a type of cybercrime attack that steals customer databases and distributes ransomware.
We evaluate that this malware is going to evolve, so we will be monitoring its activity in order to protect our customers.
For more information please contact: intelreports@kaspersky.com
bea49839390e4f1eb3cb38d0fcaf897e    rdata.dat
8910bdaaa6d3d40e9f60523d3a34f914    sdata.dat
6a066cf853fe51e3398ef773d016a4a8
228998f29864603fd4966cadd0be77fc
da50a7a05abffb806f4a60c461521f41
ec05817e19039c2f6cc2c021e2ea0016
859e7e9a11b37d355955f85b9a305fec    mdata.dat
80c0efb9e129f7f9b05a783df6959812    ldata.dat, mdata.dat
d2f94e178c254669fb9656d5513356d2   mdata.dat
Script for exploiting Atlassian Confluence Server
a99b7ef095f44cf35453465c64f0c70c    check.vm, r.vm
199b4c116ac14964e9646b2f27595156    r.vm
MATA: Multi-platform targeted malware framework
Your email address will not be published.
Required fields are marked *
 Save my name, email, and website in this browser for the next time I comment.
Notify me when new comments are added.
It’s really surprising as target.
It’s pretty small country without anything special as targets…
The hottest research right in your inbox
While investigating a recent rise of attacks against Exchange servers, we noticed a recurring cluster of activity that appeared in several distinct compromised networks.
With a long-standing operation, high profile victims, advanced toolset and no affinity to a known threat actor, we decided to dub the cluster GhostEmperor.
We discovered a campaign delivering the Tomiris backdoor that shows a number of similarities with the Sunshuttle malware distributed by DarkHalo APT and target overlaps with Kazuar.
This is our latest summary of advanced persistent threat (APT) activity, focusing on significant events that we observed during Q2 2021: attacks against Microsoft Exchange servers, APT29 and APT31 activities, targeting campaigns, etc.
We recently came across unusual APT activity that was detected in high volumes, albeit most likely aimed at a few targets of interest.
Further analysis revealed that the actor, which we dubbed LuminousMoth, shows an affinity to the HoneyMyte group, otherwise known as Mustang Panda.
The hottest research right in your inbox
© 2021 AO Kaspersky Lab.
Registered trademarks and service marks are the property of their respective owners.
The hottest research right in your inbox
