A few months back, Delphibased malware was being distributed on multiple systems via SMB exploit.
The payloads used by this malware have close similarities with open-source Gh0stRAT code.
We have observed this malware targeting important institutions in India such as –
After analysis, it was found that this malware is creating two different payloads app.exe and mfc.exe.
After execution, both executables extract dlls in ststem32 folder of Windows directory and register them as service for persistence.
Major code of all exacted payloads shares similarities with the open-source code of Ghost RAT.
This executable had an embedded DLL file stored in reverse order as shown in the below figure.
This embedded binary is decrypted and written to  %SYSTEMROOT%\System32\ folder.
The below code shows the decryption code — DLL name is generated from the return value of GetTickCount() API.
App.exe then registers this DLL as service by calling Install exported function.
Below are details of service:
The exported function of DLL are as below:
There are multiple C2 commands observed in the code of Gh0stRat.
Some C2 functions observed by static analysis of DLL are as below:
This function takes shutdown debug privileges and calls the ExitWindowsEx() function to shut down systems.
This function will download a specific file from the server and execute it.
This function searches for a specific process by calling process enumeration APIs.
This function creates an iexplore.exe process with a specified URL.
This function clears all event logs of Application, Security, and System
The second executable dropped by the main payload is mfc.exe having embedded executable in resource under the name “BIN”.
When this payload is run it drops dll (random name) from the above resource into the system32 folder and installed as a service with the name “NetworkServices” on an infected system.
After creating DLL into the system32 folder, mfc.exe calls the Install()  function of dll.
This DLL has four exported functions as below:
Below are C2 Commands observed in this sample:
Below figure, XX shows that a thread is created to install a keyboard hook.
All keylogging data is written to a file named “syslog.dat”.
Figure XX shows a similar keylogger code of Gh0st RAT.
Process enumeration involves getting the list of running processes to enumerate modules.
This function will create a remote shell to accept and execute any command.
This function records audio with the help of functions like waveInOpen(), waveInStart(), waveInStop() etc.
Function to download the executable file from a remote server and execute it.
These samples are modified variants of Gh0st RAT and actors are constantly updating them to evade AV detections.
Samples and TTPs that are seen in victim organizations are mostly associated with China-based APT groups.
We have been following these samples for the last 1 month but were unable to identify the initial attack vector.
As they are targeted towards specific industries, we suspect to find more malware associated with these attack chains.
Interestingly few of the victims were also infected with Monero miners during the same period.
We would be closely monitoring the campaign to hunt for the entire infection chain.
 
                                                            Pavankumar is associated with Quick Heal Technologies as a Technical Lead (Research and Development) and is also a part of Vulnerability Research and Analysis Team....
 If A New Comment Is Posted:Do Not Send Email Notifications.Send Email Notification ONLY If Someone Replies To My Comment(s).Send Email Notification Whenever A New Comment Is Posted.
Follow us for the latest updates and insights related to security for...
Viraj is a Lead Technical Writer at Quick Heal Technologies.
Sanjay Katkar is the Joint Managing Director and Chief Technology Officer of...

						© 2021 Quick Heal Technologies Ltd.						Cookie Policies
Privacy Policies
Cookies enable us to provide the best experience possible and help us understand how visitors use our website.
By browsing this website, you agree to our cookie policy.
