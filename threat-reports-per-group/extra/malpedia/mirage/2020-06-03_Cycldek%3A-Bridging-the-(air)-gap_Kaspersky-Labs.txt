While investigating attacks related to a group named Cycldek post 2018, we were able to uncover various pieces of information on its activities that were not known thus far.
In this blog post we aim to bridge the knowledge gap on this group and provide a more thorough insight into its latest activities and modus operandi.
Here are some key insights that will be described in this publication:
Cycldek is a long-known Chinese-speaking threat actor.
Based on the group’s past activity, it has a strong interest in Southeast Asian targets, with a primary focus on large organizations and government institutions in Vietnam.
This is evident from a series of targeted campaigns that are publicly attributed to the group, as outlined below:
Figure 1: Timeline of Cycldek-attributed attacks.
Most attacks that we observed after 2018 start with a politically themed RTF document built with the 8.t document builder (also known as ‘Royal Road’) and sent as a phishing mail to the victims.
These documents are bundled with 1-day exploits (e.g.
CVE-2012-0158, CVE-2017-11882, CVE-2018-0802) which in turn run a dropper for three files:
The final payload that is run in memory is malware known as NewCore RAT.
It is based on an open-source framework named PcShare or PcClient that used to be prevalent in Chinese hacker forums more than a decade ago.
Today, the software is fully available on Github, allowing attackers to leverage and modify it for their needs.
In the case of Cycldek, the first public accounts of the group’s usage of NewCore date back to 2017.
As described in a blog post by Fortinet, the malware provides the attacker with broad capabilities such as conducting a range of operations on files, taking screenshots, controlling the machine via a remote shell and shutting down or restarting the system.
When inspecting the NewCore RAT malware delivered during the various attacks we investigated, we were able to distinguish between two variants.
Both were deployed as side-loaded DLLs and shared multiple similarities, both in code and behavior.
At the same time, we noticed differences that indicate the variants could have been used by different operators.
Our analysis shows that the underlying pieces of malware and the way they were used form two clusters of activity.
As a result, we named the variants BlueCore and RedCore and examined the artifacts we found around each one in order to profile their related clusters.
Notable characteristics of each cluster’s implant are summarized in the table below.
Table 1: Comparison of BlueCore and RedCore loader and implant traits.
As demonstrated by the table, the variants share similar behavior.
For example, both use DLL load order hijacking to run code from DLLs impersonating dependencies of legitimate AV utilities and both share a mutex naming convention of random UUIDs, where mutexes are used for synchronization of thread execution.
By comparing code in both implants, we can find multiple functions that originate from the PCShare RAT; however, several others (like the injection code in the figure below) are proprietary and demonstrate identical code that may have been written by a shared developer.
Figure 2: Code similarity in proprietary injection code used in both RedCore and BlueCore implants.
Code marked in yellow in BlueCore is an inlined version of the marked function in RedCore.
Moreover, both implants leverage similar injected shellcode used to load the RedCore and BlueCore implants.
This shellcode, which resides in the files ‘stdole.tlb’ and ‘msgsm64.acm’,  contains a routine used to decrypt the implants’ raw executable from an embedded blob, map it to memory and execute it from its entry point in a new thread.
Since both pieces of shellcode are identical for the two variants and cannot be attributed to any open source project, we estimate that they originate from a proprietary shared resource.
Figure 3: Call flow graph comparison for binary decryption functions used by the shellcode in both clusters.
Having said that, it is also evident that there are differences between the variants.
The clearest distinctions can be made by looking at malware functionality that is unique to one type of implant and absent from the other.
The following are examples of features that could be found only in RedCore implants, suggesting that despite their similarity with BlueCore, they were likely used by a different entity for different purposes:
Perhaps the most notable difference between the two implants is the URL scheme they use to connect and beacon their C&C servers.
By looking for requests made using similar URL patterns in our telemetry, we were able to find multiple C&C servers and divide the underlying infrastructure based on the aforementioned two clusters.
The requests by each malware type were issued only by legitimate and signed applications that were either leveraged to side-load a malicious DLL or injected with malicious code.
All of the discovered domains were used to download further samples.
Figure 4: Difference in URL scheme used by each implant for C2 communication.
The conclusion that we were able to reach from this is that while all targets were diplomatic and government entities, each cluster of activity had a different geographical focus.
The operators behind the BlueCore cluster invested most of their efforts on Vietnamese targets with several outliers in Laos and Thailand, while the operators of the RedCore cluster started out with a focus on Vietnam and diverted to Laos by the end of 2018.
The statistics of these activities, based on the number of detected samples we witnessed downloaded from each cluster of C&Cs, are outlined in the figures below.
Figure 5: Volume of downloaded samples from C&Cs of each cluster by country and month, since mid-2018.
Furthermore, considering both differences and similarities, we are able to conclude that the activities we saw are affiliated to a single actor, which we refer to as Cycldek.
In several instances, we spotted unique tools crafted by the group that were downloaded from servers of both groups.
One example of this, which can be seen in the figure below, is a tool custom built by the group named USBCulprit.
Two samples of it were downloaded from both BlueCore and RedCore servers.
A more comprehensive list can be found in the Appendix.
All in all, this suggests the entities operating behind those clusters are sharing multiple resources – both code and infrastructure – and operating under a single organizational umbrella.
Figure 6: Examples of proprietary malware named USBCulprit downloaded from servers of both clusters.
Further examples are provided in the Appendix.
During the analysis, we were able to observe a variety of tools downloaded from both BlueCore and RedCore implants used for either lateral movement in the compromised networks or information stealing from infected nodes.
There were several types of these tools – some were proprietary and formerly unseen in the wild; others were pieces of software copied from open-source post-exploitation frameworks, some of which were customized to complete specific tasks by the attackers.
As in the cases of RedCore and BlueCore, the downloaded tools were all invoked as side-loaded DLLs of legitimate signed applications.
Such applications included AV components like wsc_proxy.exe (Avast remediation service), qcconsol.exe and mcvsshld.exe (McAfee components), as well as legitimate Microsoft and Google utilities like the resource compiler (rc.exe) and Google Updates (googleupdate.exe).
These tools could be used in order to bypass weak security mechanisms like application allowlisting, grant the malware additional permissions during execution or complicate incident response.
As already mentioned, the bulk of these tools are common and widespread among attackers, sometimes referred to as living-off-the-land binaries, or LOLbins.
Such tools can be part of open-source and legitimate software, abused to conduct malicious activities.
The rest of the tools were either developed fully by the attackers or made use of known tools that were customized to accommodate particular attack scenarios.
The following are several notable examples:
Figure 7: Command line usage of the custom HDoor tool.
Figure 8: Command line usage of the ChromePass tool.
One of the most notable examples in Cycldek’s toolset that demonstrates both data stealing and lateral movement capabilities is a malware we discovered and dubbed USBCulrpit.
This tool, which we saw downloaded by RedCore implants in several instances, is capable of scanning various paths in victim machines, collecting documents with particular extensions and passing them on to USB drives when they are connected to the system.
It can also selectively copy itself to a removable drive in the presence of a particular file, suggesting it can be spread laterally by having designated drives infected and the executable in them opened manually.
During the time the malware was active, it showed little change in functionality.
Based on Kaspersky’s telemetry, USBCulprit has been seen in the wild since 2014, with the latest samples emerging at the end of 2019.
The most prominent addition incorporated to samples detected after 2017 is the capability to execute files with a given name from a connected USB.
This suggests that the malware can be extended with other modules.
However, we were not able to capture any such files and their purpose remains unknown.
Another change we saw is the loading scheme used for variants spotted after 2017.
The older versions made use of a dropper that wrote a configuration file to disk and extracted an embedded cabinet archive containing a legitimate binary and a malicious side-loaded DLL.
This was improved in the newer versions, where an additional stage was added, such that the side-loaded DLL decrypts and loads a third file from the archive containing the malicious payload.
As a result, the latter can be found in its decrypted form only in memory.
This loading scheme demonstrates that the actor behind it makes use of similar TTPs seen in the previously described implants attributed to Cycldek.
For example, binaries mimicking AV components are leveraged for conducting DLL load-order hijacking.
In this case, one of the files dropped from the cabinet archive named ‘wrapper.exe’ (originally named ‘PtUserSessionWrapper.exe’ and belonging to Trend Micro) forces the execution of a malicious DLL named ‘TmDbgLog.dll’.
Also, the malware makes use of an encrypted blob that is decrypted using RC4 and executed using a custom PE loader.
The full chain is depicted in the figure below.
Figure 9: USBCulprit’s loading flow, as observed in samples after 2017.
Once USBCulprit is loaded to memory and executed, it operates in three phases:
The chosen files are then grouped into encrypted RAR archives.
To achieve that, the malware extracts a ‘rar.exe’ command line utility, hardcoded as a cabinet archive in its binary, and runs it against every list created in the former step.
The password for the archive is initialized at the beginning of the malware’s execution, and is set to ‘abcd!
@#$’ for most variants that we observed.
It is worth noting that sought documents can be filtered by their modification date.
Several variants of USBCulprit perform a check for a file named ‘time’ within the directory from which the malware is executed.
This file is expected to have a date-time value that specifies the modification timestamp beyond which files are considered of interest and should be collected.
If the ‘time’ file doesn’t exist, it is created with the default value ‘20160601000000’ corresponding to 01/06/2016 00:00:00.
When a USB is connected, the malware will verify if stolen data should be exfiltrated to it or it already contains existing data that should be copied locally.
To do this, a directory named ‘$Recyc1e.Bin’ will be searched in the drive and if not found, will be created.
This directory will be used as the target path for copying files to the drive or source path for obtaining them from it.
To understand which direction of file copy should take place, a special marker file named ‘1.txt’ is searched locally.
If it exists, the malware would expect to find the aforementioned ‘$Recyc1e.Bin’ directory in the drive with previously stolen document archives and attempt to copy it to the disk.
Otherwise, the local archive files will be copied to the same directory from the disk to the drive.
Figure 10: USBCulprit’s check for the 1.txt marker, indicating if stolen files should be copied to the removable drive, or from it.
The characteristics of the malware can give rise to several assumptions about its purpose and use cases, one of which is to reach and obtain data from air-gapped machines.
This would explain the lack of any network communication in the malware, and the use of only removable media as a means of transferring inbound and outbound data.
Also, we witnessed some variants issue commands to gather various pieces of host network information.
These are logged to a file that is later transferred along with the stolen data to the USB and can help attackers profile whether the machine in which the malware was executed is indeed part of a segregated network.
Figure 11: Commands used to profile the network connectivity of the compromised host.
Another explanation is that the malware was handled manually by operators on the ground.
As mentioned earlier, there is no evident mechanism for automatically executing USBCulprit from infected media, and yet we saw that the same sample was executed from various drive locations, suggesting it was indeed spread around.
This, along with the very specific files that the malware seeks as executable extensions and could not be found as artifacts elsewhere in our investigation, point to a human factor being required to assist deployment of the malware in victim networks.
Cycldek is an example of an actor that has broader capability than publicly perceived.
While most known descriptions of its activity give the impression of a marginal group with sub-par capabilities, the range of tools and timespan of operations show that the group has an extensive foothold inside the networks of high-profile targets in Southeast Asia.
Furthermore, our analysis of the implants affiliated to the group give an insight into its organizational structure.
As already stated, the similarities and differences in various traits of these pieces of malware indicate that they likely originated from different arms of a single organization.
Perhaps it’s worth noting that we noted multiple points where such entities didn’t work in a well-coordinated manner, for example, infecting machines using the BlueCore implant when they were already infected with RedCore.
Lastly, we believe that such attacks will continue in Southeast Asian countries.
The use of different tools to reach air-gapped networks in the same countries and attempts to steal data from them have been witnessed in the past.
Our analysis shows this type of activity has not ceased – it has merely evolved and changed shape, in terms of malware and actors.
We continue to track the actor and report on its activity in our Threat Intelligence Portal.
For more information about Cycldek operations, contact us at: intelreports@kaspersky.com
Note: a full list of IOCs can be found in our reports on the subject in Kaspersky’s Threat Intelligence Portal.
A6C751D945CFE84C918E88DF04D85798 – wsc.dll (side-loaded DLL)
4B785345161D288D1652C1B2D5CEADA1 – msgsm64.acm (encrypted shellcode and implant)
1B19175C41B9A9881B23B4382CC5935F  – QcLite.dll (side-loaded DLL)
6D2E6A61EEDE06FA9D633CE151208831 – QcLite.dll (side-loaded DLL)
6EA33305B5F0F703F569B9EBD6035BFD – QcLite.dll (side-loaded DLL)
600E14E4B0035C6F0C6A344D87B6C27F- stdole.tlb (encrypted Shellcode and Implant)
Lateral Movement and Info-Stealing Toolset:
1640EE7A414DFF996AF8265E0947DE36 Chromepass
1EA07468EBDFD3D9EEC59AC57A490701 Chromepass
07EE1B99660C8CD5207E128F44AA8CBC JsonCookies
809196A64CA4A32860D28760267A1A8B Custom HDoor
81660985276CF9B6D979753B6E581D34 Custom HDoor
A44804C2767DCCD4902AAE30C36E62C0 Custom HDoor
Toolset overlapping in both clusters:
Cycldek: Bridging the (air) gap
Your email address will not be published.
Required fields are marked *
 Save my name, email, and website in this browser for the next time I comment.
Notify me when new comments are added.
May I have a sample of BlueCore and RedCore for self analysis?
The hottest research right in your inbox
While investigating a recent rise of attacks against Exchange servers, we noticed a recurring cluster of activity that appeared in several distinct compromised networks.
With a long-standing operation, high profile victims, advanced toolset and no affinity to a known threat actor, we decided to dub the cluster GhostEmperor.
We discovered a campaign delivering the Tomiris backdoor that shows a number of similarities with the Sunshuttle malware distributed by DarkHalo APT and target overlaps with Kazuar.
This is our latest summary of advanced persistent threat (APT) activity, focusing on significant events that we observed during Q2 2021: attacks against Microsoft Exchange servers, APT29 and APT31 activities, targeting campaigns, etc.
We recently came across unusual APT activity that was detected in high volumes, albeit most likely aimed at a few targets of interest.
Further analysis revealed that the actor, which we dubbed LuminousMoth, shows an affinity to the HoneyMyte group, otherwise known as Mustang Panda.
The hottest research right in your inbox
© 2021 AO Kaspersky Lab.
Registered trademarks and service marks are the property of their respective owners.
The hottest research right in your inbox
