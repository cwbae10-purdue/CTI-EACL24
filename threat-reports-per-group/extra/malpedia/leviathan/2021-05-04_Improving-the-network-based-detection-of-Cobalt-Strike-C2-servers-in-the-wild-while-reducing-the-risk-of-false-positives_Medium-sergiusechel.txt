Cobalt Strike it’s a commercial post exploitation platform for Windows based environments.
The Cobalt Strike beacon (implant) can be delivered in multiple ways to the chosen target even without exploiting technical vulnerabilities in the target environment (e.g.
The product functionality can be enhanced through plug-ins and over the years it gained notoriety with both offensive security teams (red teamers) and threat actors.
Since 2019 Cobalt Strike was used in multiple big game ransomware attacks, APT campaigns, and espionage.
To share some personal statistics related to Cobalt Strike, in 25 large scale incidents I investigated over the past 12 months, I encountered Cobalt Strike in 20 big-game ransomware cases and in one APT campaign.
Just to quote other researchers:
“Interestingly, 66 percent of all ransomware attacks this quarter involved red-teaming framework Cobalt Strike, suggesting that ransomware actors are increasingly relying on the tool as they abandon commodity trojans.” Cisco Talos
Like all good tools, every time a new version of Cobalt Strike is released, within a month we can expect to see the cracked version being offered on underground forums, and this contributes as well to the surge of Cobalt Strike use in cyber attacks.
The industry is full of good tools, so what’s the fuss about Cobalt Strike?
The product has reached a balance between functionality and ease of use that attracts experienced and novice users as well (and, the official video course is free).
Given the proliferation of Cobalt Strike in cyber attacks, incident responders developed specific workflows to analyze Cobalt Strike beacons on disk, in memory and on the network.
Recently the product evolved to be stealthier and it offers various ways to execute the beacon without writing data on disk (fileless execution), and this poses a challenge to incident responders and blue teams as the network and memory detection are more difficult than the on disk detection.
Specially during DFIR (digital forensics and incident response) engagements we often have to rely on incomplete data, systems that were rebooted, lack of event logs and inconsistent network logs.
Dealing with fileless malware on top of that can make the investigations even harder.
More than once, during investigations I had to parse and analyze millions of network events and tens of thousands of IP addresses while trying to find somehow the Cobalt Strike C2 servers cause all other endpoint artifacts were not available.
In this article I will go over some network-based techniques which can be used by blue teams, incident responders and threat intelligence analysts to detect Cobalt Strike C2 servers in the wild, for active and proactive defense.
JARM fingerprints were developed by the Salesforce Engineering team as a method to detect malicious C2 servers, and is a good method to reduce the threat surface from billions of IP addresses to something more manageable before analyzing each C2 server.
In April 2021 I identified 3 Cobalt Strike JARM fingerprints, in C2 servers deployed all around the world.
The current available literature is focused on researching C2s that match the 07…b1 JARM fingerprint, which is still widespread, but the other fingerprints shouldn’t be discarded from analysis:
Using Shodan I reduced the threat surface of potential Cobalt Strike C2 servers to several tens of thousands IP addresses:
The threat surface, based solely on the JARM fingerprints is large compared to the actual number of C2s I found active on 03 May 3, 2021.
From what I’ve seen in the wild, many C2 servers are using a generic certificate that has the serial number 146473198.
Now, I know that the JARM fingerprints are based on the TLS certificates, but different implementations using the same certificate can lead to different JARM fingerprints, and as such searching for potential C2 servers based on the serial numbers can complement the JARM fingerprints approach:
On 3rd May 2021 I found 914 potential C2 servers, based on Shodan results.
Again, the threat surface is large compared to the actual number of C2s I found active 03 May 3, 2021 but to point out on interesting fact, there was less than 50% overlap between the JARM fingerprints population and the certificate-based detection.
Both the JARM detection and the certificate detection methods are a good starting point to map the potential threat surface.
Combining both methods will likely increase the threat surface and provide more data for the payload retrieval part.
Cobalt Strike payloads can be retrieved by actively interacting with a Cobalt Strike C2 server.
The techniques were already described by other researchers and are available on the internet.
For a faster threat surface reduction I used the NMAP implementation of the payload retrieval technique.
The script was created by GitHub user “whickey-r7” (grab_beacon_config) and is effective at retrieving the beacon configuration from a Cobalt Strike C2 server:
The script can be used to automate the Cobalt Strike detection at scale on thousand IP addresses.
Of course, the payload retrieval technique could be applied on the entire internet address space but for most organizations that would be an overkill and a waste of resources.
By scanning the entire threat surface, made up of all the servers identified with the JARM fingerprints and the certificate serial, I found 474 active Cobalt Strike C2 servers on 3rd May 3, 2021.
After that I queried Shodan with a combination between the JARM fingerprints and the default certificate serial and that resulted in a reduced threat surface of 477 Cobalt Strike C2 servers (out of which 474 were still active).
The network-based detection approaches described in the article offer a cost-effective way to proactively defend networks against threat actors that leverage Cobalt Strike to conduct offensive operations or against big-game ransomware groups.
The method is not perfect, as threat actors can modify Cobalt Strike in several ways in order to reduce detection, and as such the detection and mitigation efforts must evolve as well, to keep pace with the evolving threats.
PhD, CISA, CISM, CRISC, CFE, CEH, CBP, CSSLP, CDPSE, GICSP, GPEN, GWAPT, GCFA, GNFA, GASF, GCTI, GREM, PMP
PhD, CISA, CISM, CRISC, CFE, CEH, CBP, CSSLP, CDPSE, GICSP, GPEN, GWAPT, GCFA, GNFA, GASF, GCTI, GREM, PMP
