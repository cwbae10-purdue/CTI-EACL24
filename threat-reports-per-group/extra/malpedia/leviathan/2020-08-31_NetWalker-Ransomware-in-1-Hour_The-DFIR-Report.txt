Real Intrusions by Real Attackers, The Truth Behind the Intrusion
The threat actor logged in through RDP, attempted to run a Cobalt Strike Beacon, and then dumped memory using ProcDump and Mimikatz.
Next, they RDPed into a Domain Controller, minutes before using PsExec to run the NetWalker ransomware payload on all Domain joined systems.
The entire intrusion took ~1 hour.
NetWalker, as a ransomware strain, first appeared in August 2019.
In its initial version, the ransomware went by the name of Mailto but rebranded to NetWalker towards the end of 2019.
The ransomware operates as a closed-access RaaS — a ransomware-as-a-service portal.
Other hacker gangs sign up and go through a vetting process, after which they are granted access to a web portal where they can build custom versions of the ransomware.
The distribution is left to these second-tier gangs, known as affiliates, and each group deploys it as they see fit.
For more info on NetWalker check out the following posts:
We saw multiple RDP logins around the time of the attack but we believe 198.181.163[.
]103 (possibly IPVanish VPN) to be the source of this intrusion.
We will include other IPs that logged into the honeypot on this day in the IOCs section.
The threat actor logged in using the DomainName\Administrator account.
c37.ps1 was dropped and run about 16 minutes after initial login.
There didn’t appear to be any network connections made while running this script which makes us wonder if the script works or not.
The script is heavily obfuscated but still looks like Cobalt Strike.
When we uploaded the script to VT, Thor said it may also contain Windshield or SplinterRAT.
c37.ps1 has a very low detection rate even after 7+ days.
Minutes later they ran c37.exe, which copies itself to a temp directory and then stops.
This binary includes Neshta as well as many capabilities as seen below:
After further analysis and a comment from @GaborSzappanos, we were able to confirm that both of these are indeed Cobalt Strike and connect to 173.232.146[.
The Cobalt Strike server at 173.232.146.37 is using the default cert (146473198) and oddly enough could not be MiTM.
We tried to MiTM this connection multiple times and kept getting an error stating SSL session did not authentication successfully.
We attempted to run c37.ps1 and c37.exe in a few sandboxes and none of them captured the network traffic which tells us that these Beacons include sandbox evasion techniques.
Here are a couple runs – https://capesandbox.com/analysis/54494/ https://app.any.run/tasks/4524fb0c-8e17-4255-8582-35b0e206ff3f/ https://capesandbox.com/analysis/54493/
The c37.exe binary includes shared code from Neshta, poison, BazarBackdoor, XMRig and a large portion from CobaltStrike according to Intezer.
AdFind was dropped alongside a script named adf.bat.
We’ve seen this script in the past and wrote about it here.
We can see from these lnk files that they opened a few of the txt files output by AdFind.
We can also see that domains.txt and ips.log were opened minutes after AdFind being run.
A few minutes after AdFind was run, a command prompt was opened and the following commands were either copy and pasted slowly or manually typed.
Shortly after that, a script named pcr.bat was dropped and executed.
This script pings a list of hostnames (domains.txt) and writes the output to ips.log.
The ping command they use sends one ping and forces IPv4.
This domains.txt file most likely came from the above AdFind command using the domainlist parameter.
Mimikatz was dropped and then a minute later procdump64.exe was dropped.
The threat actors then used Procdump to dump lsass using the following command:
This procdump64 binary appears to be compiled with Delphi and does not match known hashes.
It appears the threat actors rolled their own but included the original instructions.
Mimikatz was run about a minute later.
The threat actor RDPed into a Domain Controller (DC) after dumping credentials.
Shortly after accessing the DC they dropped ip.list.txt, P100119.ps1, and PsExec.
The threat actor was now ready to execute it’s objective.
The threat actor used PsExec to mount a share on all systems as the Domain Administrator and then execute the ransomware payload using PowerShell.
NetWalker was delivered to all online Domain joined systems in the honeypot via the below command:
C:\psexec.exe @ip-list.txt -d cmd /c “(net use q: /delete /y &; net use q: \\DomainController\DomainName /user:DomainName\administrator ThisWasThePassword &; powershell -ExecutionPolicy ByPass -NoLogo -NoProfile -windowstyle hidden -NoExit -File q:\P100119.ps1”
After the PowerShell script runs you are left with the following ransom note.
The NetWalker operators asked for $50k within 7 days or $100k after.
They were talked down to $35k after the time expired.
Please consider donating $1 or more to the project using Patreon.
Thank you for your support!
ET POLICY PsExec service created
PsExec Service Start – https://github.com/Neo23x0/sigma/blob/master/rules/windows/process_creation/win_psexesvc_start.yml
Suspicious Use of Procdump – https://github.com/Neo23x0/sigma/blob/master/rules/windows/process_creation/win_susp_procdump.yml
Detects AdFind usage from our case:
Yara rule for Mimikatz https://github.com/gentilkiwi/mimikatz/blob/master/kiwi_passwords.yar
Yara – embedded_win_api – A non-Windows executable contains win32 API functions names – Author: nex
RDP logins on the day of the intrusion
Enter your email address to subscribe to this blog and receive notifications of new posts by email.
Intro The Ryuk threat actors went from a phishing email to domain wide ransomware in 5 hours.
They escalated privileges using Zerologon (CVE-2020-1472), less than 2 hours after the initial … Read More
Intro The Ryuk group went from an email to domain wide ransomware in 29 hours and asked for over $6 million to unlock our systems.
They used tools such as … Read More
The threat actor logged in through RDP, attempted to run a Cobalt Strike Beacon, and then dumped memory using ProcDump and Mimikatz.
Next, they RDPed into a Domain Controller, minutes … Read More
Here’s another example of threat actors brute forcing RDP to install ransomware, this time the brute forced system was not using the default RDP port.
The threat actors installed ransomware … Read More
