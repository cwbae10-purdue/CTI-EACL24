I decided to release this blog post as a longer form, more in depth version of this twitter thread I released on the 12th of May.
The aim of this blog post is to provide you with actionable prevention’s and detection’s against known TTPs which have been seen during DarkSide ransomware operations from the group and their affiliates.
It is important to note that many of these prevention’s and detection’s will work not only for this group, but for preventing and detecting attacks from many threat actors due to their generic nature.
This thread was in response to the fantastic blog post by FireEye – “Shining a Light on DARKSIDE Ransomware Operations” released on the 10th of May.
Before getting into the post, here are some further reading resources on DarkSide if you are interested.
Time to get into the detection’s and prevention’s.
I have listed a large number of SIEM rules below which I have had stored on a personal database for a while.
I can’t remember exactly who created each and every one of them (Various people – it wasn’t me) – but apologies that I am unable to give particular credits for these.
I know some were created by Florian Roth, Samir Bousseaden, Markus Neis and Roberto Rodriguez.
I hope however sharing them will make up for this in providing further detection’s to the community.
Also, for all the SIEM rules I have listed below, keep sure of three things if you create them.
Do you have the correct auditing configured, 2.
Are the logs in your SIEM, 3.
Are the properties being parsed correctly.
If any of these answer no, they won’t work.
The first initial compromise method mentioned was password spray attacks against VPNs.
This is extremely common, but luckily for us relatively easy to protect against compared to other attack vectors.
Password spray attacks and brute forces will happen not just against VPN’s but any public facing authentication methods, such as Azure Active Directory.
I know everyone says this, but they say it for a reason – Multi-factor authentication should be used for all accounts in your network.
Also ensure users are using unique passwords for each service / platform they have access too.
This will make the likelihood of a password attack breaching your perimeter a lot lower.
You also want to ensure you have lockout thresholds for failed logins to any accounts.
If an attacker is attempting various password attacks, this may at least slow them down whilst you react to alerts.
In terms of detection’s, there are a number of things we want to look for.
Do your best to ensure all perimeter facing devices are on boarded to your SIEM so you can monitor authentication events.
Finally for this section, it is mentioned in the report that attackers may have used a vulnerability in SonicWall to disable MFA on the VPN.
I always recommend that you audit change events on any networking equipment in your environment.
You likely have VPN’s, Firewall’s and a plethora of other networking equipment logging network traffic and authentications – keep sure you are also auditing and logging change activities on these too.
Look for events such as deletions, creations and modifications of objects, policies and accounts on these devices.
Alert on them and ensure that any changes are legitimate and expected.
It is mentioned that another initial access vector was, unsurprisingly; malicious emails.
I’m not going to cover email security and all its facets here.
Rather, this tweet from @TinkerSec at the time sums up up the basics pretty well.
Look into each of these aspects separately and see if you have them, or a direct alternative; in place.
So plan on it.– Use email security proxies to conduct scans of attachments ahead of time.– Use endpoint protection.– Use outbound domain inspection.– Have a way for users to report phishes.– Don't punish users if they self report.
This is mentioned in this phase and also for lateral movement, but I will just include it here.
Beacon / Cobaltstrike is now known for being used in a large number of intrusions to perform numerous functions (which you can learn about in the below link)
To hunt for it, detect it or are looking for IOCs, this is your go-to link.
Awesome-CobaltStrike-Defense contains the following topics and is regularly updated.
The report shows us that the threat actor downloaded and used Teamviewer.
They also browsed to locations indicating downloads of Anydesk.
I would recommend that, if possible; your business mandates one remote access application which is allowed to be used.
Then, anything outside this is immediately suspicious.
In terms of alerting, we should approach this from two avenues.
Firstly, I recommend you look for outbound connections on the following ports which are used by common remote access applications.
RDP – 3389Anydesk – 6568Dameware – 6129, 6130, 6132, 6133Teamviewer – 5938VNC – 5800/5900
If your business does mandate the use of one, or no; remote access applications.
Block the download links for these and then alert if there is a blocked connection to these download URLs (such as hxxps://dl.teamviewer[.
This is difficult to deal with and is a huge challenge that we face, as threat actors purchase working user credentials and log directly into systems.
There is some steps that we can take however.
In terms of detection’s, for this we really need to look at anomalous behaviour patterns, such as.
Mimikatz is another tool which commonly used during many attacks, especially for privilege escalation.
Due to its common usage, it is worth taking your time to mitigate as many potential attacks as possible.
The following articles detail numerous mitigation’s which can be taken against Mimikatz.
SANS – Mitigations against Mimikatz style attacks.
Tempest Security – Mitigating credential theft attacks.
Once you have mitigated potential issues, it is then worth implementing the below detection’s.
Mimikatz does so much it is hard to list a detection for everything that it can do, so here are the more common ones.
Commonly at this phase of an attack, attackers will look to dump the memory from LSASS and other attacks against the service.
I highly recommend reading this threat detection report by RedCanary.
It explains well what LSASS is, why it is attacked so frequently and several detection’s for these attacks.
I also recommend reviewing the MITRE sub technique – OS Credential Dumping: LSASS Memory .
This provides further extra information and resources around what LSASS is, potential mitigation’s and detection’s.
Some detection’s which are relating to LSASS below (I also listed some in the previous section as Mimikatz targets LSASS)
RDP has been used extensively by many threat actors for lateral movement among other purposes, therefore it is important we monitor its the best we can.
But before we get to the detection stage, as always lets first try to mitigate.
MITRE have some fantastic mitgations listed here which I highly recommend following to deter and make an attackers life more difficult.
RDP is such a frequently used protocol during attacks, so I am going to list a bunch of my favourites below which I recommend looking into.
Threat actors commonly use tools such as Powerview and Bloodhound to perform internal recon against Windows targets.
Find and fix the weaknesses before they do.
I discussed Active Directory Security Hardening, Auditing and Detection Rules on a post a while ago.
I recommend giving it a read and following the steps outlined within.
There are some SIEM rules which we can look to implement to pick up the activity from these tools.
Frequently we see threat actors using built in Windows utilities to aid their reconnaissance and attacks in general.
Outside of this incident, we can also see this when we look at reports from the likes of TheDFIRReport.
Almost every post, there is evidence of an attacker using these in built utilities.
Therefore, we have to try and detect this.
Between the DFIRReport link above and JPCert – Windows Commands used by Attackers we can quickly build a list of frequently used commands.
It is worth taking these commands and creating a rule looking for a user running 5+ of them in 5 minutes.
(You may need to change your thresholds).
You will need to allow list Domain Admins, Network Admins and potentially other staff members depending on role.
On top of this, there are a number of other good built in recon rules which can be found in this Sigma repository and search for recon.
During most reconnaissance attackers will run various network scans to fingerprint the target environment and find vulnerable devices, open ports etc.
Before we get into the detection’s, the best mitigation here is to ensure only required ports are open on devices.
This will limit what an attacker can find out about your devices, or at least make the job more difficult in the worst case.
It is therefore important that we monitor for suspicious network activity.
I wrote this blog post a while back, it needs updated but contains some basic logic around network monitoring.
If you have DNS logs, also take a look at this post.
On top of the two above articles you should also be looking for things such as –
PSExec has been seen during DarkSide ransomware attacks to deploy the ransomware itself.
In terms of what PSExec is, why threat actors use it and how we can detect it; the following two posts are fantastic.
Firstly, Praetorian – Threat Hunting: How to Detect PsExec.
This contains details on what it is, how to detect, variants of PSExec and further considerations.
Next up, another great RedCanary post.
Threat Hunting for PsExec, Open-Source Clones, and Other Lateral Movement Tools.
This contains similar detail on PSExec but goes on to focus on the many clones of PSExed, what they are, and how we can detect them also.
Before we finish, I have some final thoughts which I thought were best to mention at the end rather than throughout the rest of the post.
Patch – I know this can be easier said than done at times, but it can be the difference between being breached, and not.
Most attacks, if the breach itself wasn’t due to a vulnerability; the attackers was able as part of their attack chain to exploit some vulnerability to speed up their attack or bypass defenses.
Do your best to limit their opportunities to do this.
Test your prevention’s and detection’s – Once you have mitigation’s and detection’s in place, test them.
Are things really being blocked?
Do alerts really trigger in your SIEM?
Testing your hard work is a vital step in the process which should never be skipped.
Response – If a serious incident does occur – do you have an IR team?
Do you have one on retainer?
Have you played out scenarios and went through the how, who and why you will respond to a real event?
There are some fantastic Incident Response resources here.
Thanks for taking your time to read this blog post and I hope you found it useful.
I always love feedback, so contact me at My Twitter if you want to discuss this article, or anything related.
Your email address will not be published.
Required fields are marked *
 Save my name, email, and website in this browser for the next time I comment.
