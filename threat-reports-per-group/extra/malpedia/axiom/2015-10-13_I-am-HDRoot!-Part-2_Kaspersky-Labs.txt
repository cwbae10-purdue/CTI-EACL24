Some time ago while tracking Winnti group activity we came across a suspicious 64-bit sample.
It was a standalone utility with the name HDD Rootkit for planting a bootkit on a computer.
Once installed the bootkit infects the operating system with a backdoor at the early booting stage.
The principles of this bootkit’s work, named HDRoot, have been described in the first part of our article.
During our investigation we found several backdoors that the HDRoot bootkit used for infecting operating systems.
These backdoors are described in this part of the article.
Since the backdoor installed with the use of HDRoot might be arbitrary, we can’t describe what malware is run by HDRoot bootkit in every case where it might be found.
But at least we have managed to collect two types of malware that were identified while tracking HDRoot.
The first one was extracted manually from the hard drives of victims where HDRoot was detected and who contacted us for the help with combating the infection.
Another one was found in a standalone dropper that contained both HDRoot and the installed backdoor.
This is the malware family known as server-side Derusbi, which we observed during several Winnti-related incidents.
Usually this is a DLL with the internal name OfficeUt32.dll and exported functions like:
DllRegisterServer
DllUnregisterServer
ServiceMain
SvchostPushServiceGlobals
WUServiceMain
__crt_debugger_hook
This list of functions can differ slightly from version to version.
The main DLL includes other malware components in its body, usually maintained in the XOR-ciphered form:
The structure for maintaining additional modules
The Derusbi samples installed with the use of the HDRoot bootkit contained a Remote Shell module and network driver.
The installation routine is implemented in the exported function “DllRegisterServer“.
When called, this function performs the following actions:
The malware stores its configuration data in encrypted form in the “Security” value of the HKLMSOFTWAREMicrosoftRpc registry key.
It contains a unique computer identifier, and the signature for matching incoming C&C server packets.
The malware can either connect to the C&C server directly if it is specified in the settings block in its body or work in listening mode if no C&C server is defined.
The samples related to the HDRoot bootkit we found worked in listening mode.
(The driver was signed on ‎December 19, 2012 17:11:14 with the stolen certificate of South Korean online gaming company XL Games.
The certificate was revoked on Jun 21, 2013.
Its serial number is: 7b:d5:58:18:c5:97:1b:63:dc:45:cf:57:cb:eb:95:0b).
The main malware DLL decrypts, drops and runs the rootkit as a file “%System32%DriversLst_Update.sys”.
The driver at the very beginning of the process removes all registry values created during its launch and the actual driver file.
The rootkit conceals malicious network activity from popular network monitoring tools by hooking the IRP_MJ_DIRECTORY_CONTROL service routine of “DeviceTcp” or “Drivernsiproxy” system objects.
It also hides the file “windowssystem32wiarpc.dll” from user-mode applications by hooking the IRP_MJ_DIRECTORY_CONTROL service routine of the file system driver “FileSystemNtfs”.
If the malware works in listening mode, the rootkit is also engaged in the communication routines.
It sniffs all incoming network packets and searches them for a specially crafted signature.
If found, it redirects these packets to the listening socket opened by the main malware module.
The main module creates a network socket on a random port on all network interfaces.
If the rootkit pushes a network packet that matches the predefined signature, the main malware module will process it.
This network packet includes command code and the module ID that has to perform that command.
Known versions of the malware recognize five modules with different commands:
As was mentioned earlier, besides a network driver there was only one additional module included in the discovered versions of the Dersubi samples related to HDRoot – Remote Shell.
The main malware module decrypts, drops and runs it as the file “%Systemroot%Helpperfc009.dat”.
This is the DLL with the internal name Office.dll and one exported function R32.
The library is run by executing the following command line:
where <random_number> is a pre-shared value generated by the main module.
The Remote Shell library creates two named pipes used to communicate with the main module:
The command line from the operator for execution is expected to come through the pipe pipeusb<random_number>o.
When this command comes a new process is created to execute it in the working directory %SystemDrive%.
Standard input of the process that has just been created is set to be obtained from the pipe pipeusb<random_number>o, while output and STDERR are redirected into the parallel pipe pipeusb<rando_number>i.
This means input to the executing program comes from an operator and the program’s output goes back to him, framing an effective backdoor channel.
We were able to spot a sample that turned out to be a one-click installer of the backdoor with the use of HDRoot.
This is a Win32 executable compiled on 18 November 2013 according to its data stamp in the header.
The executable includes resources “102” and “103” of custom type “MHM”.
These are the executable of HDRoot installer and the installed backdoor.
The role of the installed backdoor is played by the executable maintained as the resource “102” and dropped as the file %windir%bootmgr.exe.
(Running a few steps forward we have to say that formally it’s not a backdoor but a downloader.)
The tool “HDD Rootkit” which is the resource “103” is dropped as %windir%hall32.exe.
Then the dropper runs the following command line:
that instructs the HDRoot installer named hall32.exe to install the HDRoot bootkit onto the hard drive where disk C: is located with subsequent running of the downloader bootmgr.exe on system start-up.
There are other files specified in the dropper’s body that it checks for in the file system or which the malware uses in intermediate procedures:
The downloader bootmgr.exe was also compiled on 18 November 2013 like the dropper.
According to the list specified in its body, it downloads files by following URLs and runs them:
http://www.gbutterfly.com/bbs/data/boot1.gif
http://www.btdot.com/bbs/data/boot1.gif
http://boot.ncook.net/bbs/data/boot1.gif
http://www.funzone.co.kr/bbs/data/boot1.gif
http://www.srsr.co.kr/bbs2/data/boot1.gif
If anything is available via these URLs, it is dropped onto the disk with one of the following file names and run:
The downloader checks the size of the dropped file and only runs it if it is greater than 20896 bytes.
It turned out that this is a double downloader: it maintains another sample with downloading functionality in its body.
The malware drops it with the file name %windir%svchost.exe and subsequently runs it with the parameter “install”.
For some reason, immediately after running the 2nd downloader the malware stops the work of the Internet Connection Sharing service with the command line:
cmd.exe /c net stop sharedaccess
There are other files specified in the downloader’s body that it checks for in the file system:
This malware is able to recognize two parameters: “install” and “remove”.
In the installation branch it creates the auto-starting “Winlogon” service with the description “Provides automatic configuration for the 802.11 adapters” and adjusted to run its own executable.
The “remove” parameter obviously leads to the deleting of this service.
While running, the service decrypts the list of URLs included in its body and tries to download the content by addresses formed by appending “default.gif” to the URLs from the list.
This is a complete decrypted list of URLs:
As you can see, this list includes sites of legitimate and trusted parties and they are unlikely to maintain malware components.
Because every site is generally not malicious, some of them were probably compromised, or else the malware would not have been functional.
The content is downloaded into the file %windir%image.jpg.
But this is only an intermediate stage.
It should be a text file that is parsed by the malware.
The first line of that file should contain only numbers greater than 139; if not, the malware skips processing that content.
The second line is for the URL the malware should use to download an executable and the third line specifies the file name for the downloaded executable that is dropped into the file system.
After downloading the malware restores 2 bytes “MZ” at the very beginning of the dropped file and runs it.
At the same time as it is downloading, the malware tries to remove specific antivirus software.
On finding an uninstall command line in the registry the malware runs it and by manipulating the user interface buttons of the application it tries to remove three AV products: AhnLab’s V3 Lite, AhnLab’s V3 365 Clinic and ESTsoft’s ALYac.
Although there is a process for those products only, the malware also includes inactive functions to disable Naver Vaccine and McAfee Security Center.
The origin of those vendors clearly suggests that the malware was intended for targets in South Korea.
Since the malware is already quite old we have not been able to download any relevant material from the URLs specified both in the 1st and 2nd downloaders.
Servers have been responding with nothing or pages stating the absence of content.
We were not actually the first AV company to encounter HDRoot malware face to face.
At the end of 2013 South Korean AhnLab issued a comprehensive report on the ETSO Hacking group based on incident response cases their digital forensic team was working on.
ETSO malware, according to AhnLab’s classification, mostly corresponds to Winnti malware as we detect it.
During their analysis AhnLab’s engineers discovered infected MBRs that, according to their description (pages 14-15, chapter “2.5 Maintain Network Presence”), sound like the result of an HDRoot bootkit installer at work:
AhnLab’s HDRoot scheme of work
Also, we know about incident handlers not necessarily from AV companies that are acquainted with the HDD Rootkit utility.
However, when it comes to detection, despite the fact that this dangerous threat is quite old, antivirus products were not that good at detecting it.
As expected, HDRoot infections prevail in Winnti’s traditional region of primary interest – South East Asia, especially South Korea, according to KSN.
But other parts of the world have also been affected and the extent and impact of this threat may be significant.
It’s important to point out that the numbers don’t represent the nature of the targets.
It means that by simply looking at the numbers we can’t see what sort of companies were attacked.
Hence, the map may present a different story from the reality in terms of probable damage for a particular country.
For example, we were involved in mitigating an HDRoot infection in two major companies in Russia and the UK where the malware was discovered on multiple servers with the use of our products.
In both cases, the damage due to infection could be very significant, especially in Russia where many of the company’s customers could have been affected.
However, on the map Russia is shown as having suffered just a single hit, while the UK has 23 attacked systems.
Although we have not found many malware families installed using HDRoot, and attribute known HDRoot-related activity to Winnti, we continue to assume that this bootkit may be used in multiple APT.
We already know about an overlap in Winnti activity and other APT from previous incidents.
Taking into account the HDRoot installer’s nature as a standalone tool, it’s very possible that this bootkit could be in the hands of other threat actors.
We detect HDRoot malware with following verdicts:
Hacktool.Win32.HDRoot
Hacktool.Win64.HDRoot
Rootkit.Win32.HDRoot
Rootkit.Win64.HDRoot
Trojan.Boot.HDRoot
Backdoors and downloaders related to HDRoot bootkit:
Your email address will not be published.
Required fields are marked *
 Save my name, email, and website in this browser for the next time I comment.
Notify me when new comments are added.
Okay, I’ve got most if not all of the syswow64 Trojan in two laptops.
I’ve had them in to the Geek Squad twice but as the above articles state, it comes back.
What do I do now?
Yes, I can’t get rid of them either.
The even got a hold of on line tickets of mine that were in my email.
I just stumbled upon this article on one of many attempts to research what has infected my devices.
I’m not sure this is exactly what I have, but it has plagued me for the last 2 years.
I’ve tried reaching out for advice/help but my accounts end up getting stripped away.
I’ve gone through 3 phone numbers and multiple phones and laptops.
Most of my web traffic is redirected.
I’m to the point that I’m not even sure if my calls are being directed to the correct place as I’m pretty much convinced their being routed through WiFi Calling.
Does your research find any uses of the accessibility options to”shadow” a user?
Most notably the color options and using emojis as search terms?
I’ve encountered so many anomalies but I feel like I’m running in circles.
I don’t know how you could help me.
Or point me in a direction that’s not so dark.
None of the AV or OS tools work as there always ends up being some whilelist injected and nothing is found.
The hottest research right in your inbox
While investigating a recent rise of attacks against Exchange servers, we noticed a recurring cluster of activity that appeared in several distinct compromised networks.
With a long-standing operation, high profile victims, advanced toolset and no affinity to a known threat actor, we decided to dub the cluster GhostEmperor.
We discovered a campaign delivering the Tomiris backdoor that shows a number of similarities with the Sunshuttle malware distributed by DarkHalo APT and target overlaps with Kazuar.
This is our latest summary of advanced persistent threat (APT) activity, focusing on significant events that we observed during Q2 2021: attacks against Microsoft Exchange servers, APT29 and APT31 activities, targeting campaigns, etc.
We recently came across unusual APT activity that was detected in high volumes, albeit most likely aimed at a few targets of interest.
Further analysis revealed that the actor, which we dubbed LuminousMoth, shows an affinity to the HoneyMyte group, otherwise known as Mustang Panda.
The hottest research right in your inbox
© 2021 AO Kaspersky Lab.
Registered trademarks and service marks are the property of their respective owners.
The hottest research right in your inbox
