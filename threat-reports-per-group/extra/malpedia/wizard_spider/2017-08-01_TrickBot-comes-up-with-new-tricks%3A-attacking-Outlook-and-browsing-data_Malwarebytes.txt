Protect your devices, your data, and your privacy—at home or on the go.
"Thanks to the Malwarebytes MSP program, we have this high-quality product in our stack.
It’s a great addition, and I have confidence that customers’ systems are protected."
Activate Malwarebytes Privacy on Windows device.
Posted: August 1, 2017 by Malwarebytes Labs

Last updated: November 19, 2020
Last year, we reported on a new modular malware called TrickBot that uses a network protocol similar to Dyreza.
The malware was not particularly stealthy, and some parts looked to be still under development, but we noticed its potential and capability to be easily extended.
Indeed, the authors of TrickBot are persistent not only in spreading their malware but also in developing new features.
Some of the novel changes applied to TrickBot were noted in Spanish cybersecurity company S2Grupo’s June 2017 report called the Evolution of Trickbot.
In addition, it has been found that developers added to the bot a worm module,  probably inspired by the success of other worm-equipped ransomware such as WannaCry and EternalPetya.
But authors of this malware didn’t stop there.
Recently, we captured some additions that allow for TrickBot to attack Outlook and capture browsing data.
For example, we noticed a new module called Outlook.dll, which was written in Delphi (while most of the other modules are written in C++).
This may indicate that the team of TrickBot developers gained some new members that are more comfortable with this particular language.
As before, after being deployed, TrickBot installs itself in a new directory created in %APPDATA%.
It runs a new instance from the installation directory.
Inside, it creates another directory—Modules—where it drops downloaded modules and their configuration files in encrypted form:
The way in which the modules and configuration files are encrypted didn’t change.
We can still use the same scripts to recover them.
After decrypting config.conf, we got some more details about the current campaign: the version of the analyzed configuration is 1000030 and the given group tag is tt0002.
As before, persistence is achieved with the help of a Scheduled Task:
The task deploys the main bot that, after being run, decrypts and loads other modules.
Each module is injected into a new instance of svchost:
As before, all the TrickBot modules follow a predefined API.
As mentioned in “behavioral analysis,” we observed five modules in the current run.
SystemInfo.dll and loader.dll (injectDll32) have been present in TrickBot since the very beginning.
The module mailsearcher.dll was introduced in December 2016 (according to the F5 DevCentral’s article).
But there are some modules in the set that we haven’t seen described before: module.dll and Outlook.dll.
This bulky module is written in C++, compiled with Qt5 and OpenSSL, and also incorporates SQLite.
Inside the binary, we can find the strings indicating particular versions of the libraries:
We can also find references in the code.
In the given example, QAbstractSocket class from Qt library is used:
DLL’s compilation timestamp indicates that it is pretty fresh, written in May 2017:
Functionality-wise, this module is focused on stealing data from the browsers, such as:
Authors didn’t put any effort into hiding their intentions.
Debug strings informing about every action taken are being printed.
In contrast to loader.dll/injectDll (referenced here), which is modular and stores all the scripts and targets in dedicated configuration files, module.dll/importDll32 comes with all its data hardcoded.
For example, inside the binary we found a long list of targets—websites from countries all around the world, including France, Italy, Japan, Poland, Norway, Peru, and more:
During its run, the module creates a hidden desktop:
This desktop is used as a workspace where the malicious module can open and fingerprint browsers in a way that is not noticed by the user.
Inside the malware’s code, we found hardcoded HTML files with JavaScripts that are used for gathering information about the browser’s configuration.
You can see the full content here.
This script, while being executed, fills the text area with the data gathered about the environment and passes this data to the malware:
Another script is used for gathering information on the plugins installed in Internet Explorer (compare with this script):
You can see the full content here.
The scripts send the collected data in the POST request in the variable called marker_:
The data is received by the handler inside the TrickBot module:
Interestingly, the malicious plugin also contains four base64-encoded pictures in PNG format:
Among the data hardcoded within the module.dll we can find a string referencing an SQLite release:
The incorporated SQLite is used to retrieve and steal data such as cookies from locally stored databases (similar to Terdot Zbot, described here, that also incorporated SQLite for this purpose):
Sample strings and queries to the cookies database:
We can see also queries used for stealing the stored browsing history:
This is the module written in Delphi.
It contains a hardcoded configuration that follows a pattern typical for TrickBot modules:
Its purpose is to steal data saved by Microsoft Outlook.
The module opens relevant registry keys and tries to retrieve saved credentials:
TrickBot’s new modules are not written well and are probably still under development.
The overall quality of the design is much lower than the quality of the earlier code.
For example, module.dll is bulky and does not follow the clean modular structure introduced by TrickBot before.
Also, they make use of languages and libraries that are easier, using Qt instead of native sockets for module.dll, and Delphi language for Outlook.dll.
The differences in code, languages, and design may indicate that some changes were made to the development team.
Either they gained new members who have been delegated to the new tasks, or some of the previous members resigned and have been substituted with lower quality programmers.
It may also be possible that the malware authors are doing some prototyping and experimenting for the further development.
Whichever is the case, it’s clear that TrickBot is still actively maintained, and is not going to leave the threat landscape anytime soon.
This was a guest post written by hasherezade, an independent researcher and programmer with a strong interest in InfoSec.
She loves describing malware in detail and sharing threat information with the community.
Check her out on Twitter as well as on her personal blog, hasherezade’s 1001 nights.
 May 18, 2021 - Unfortunately for you, Bizarro malware is a banking Trojan that comes with a bag of tricks and a versatile backdoor.
Malware | Threat analysis | Threat Intelligence
 May 21, 2020 - The latest Malwarebytes Threat Intel report focuses on Silent Night, a new banking Trojan recently tracked as Zloader/Zbot.
Threat analysis | Threat Intelligence
 December 3, 2019 - We take a deep dive into the IcedID Trojan, describing the new payloads of this advanced malware.
 March 14, 2019 - Emotet is often mentioned as one of the most annoying, effective, and costly present-day malware infections.
We discuss the reasons why and the proper way to remove it.
 November 14, 2018 - There’s a newer, more sophisticated banking Trojan in town attempting to penetrate business networks and giving Emotet a run for its money.
And its name is TrickBot.
Learn how this threat is giving organizations a run for their money.
Want to stay informed on the latest news in cybersecurity?
Sign up for our newsletter and
                            learn
                            how to protect your computer from threats.
Imagine a world without malware.
Your intro to everything relating to cyberthreats, and how to stop them.
