MalwareBytes recently shared some information about web skimmers that store malicious code inside real .ico files.
During a routine investigation, we detected a similar issue.
Instead of targeting .ico files, however, attackers chose to inject content into real .png files — both on compromised sites and in booby trapped Magento repos on GitHub.
Our security analyst Keith Petkus found this piece of malware injected on a compromised Magento 2.x site.
This code was found appended to real Google Tag Manager code, so seeing a reference to googletagmanager.png might not spark suspicion at first glance.
Moreover, it’s a valid .png image from the same site.
Nonetheless, the code is not typical for Google Tag Manager.
If you inspect it closely, you’ll notice that it loads contents of the image file and then executes part of it (x.slice(-34905)) as a JavaScript function.
If we check the contents of googletagmanager.png, it appears to be a regular binary .png file, including proper PNG file signatures and chunk marks such as IHDR and IEND.
However, after the end of the last chunk (IEND), we can see JavaScript code.
This code is ignored by image viewers, but you can access it if you work with the .png file as if it was a regular text file.
In our case, the malware extracts the last 34,905 bytes of the file.
After deobfuscation, a typical Magecart skimmer code is revealed containing modifications that prevent someone from seeing the exfiltration gate right away.
The following code is responsible for computing the URL of the gate.
What we see here is the malware which attempts to load mage.png file from a GitHub repository (hxxps://raw.githubusercontent[.
]com/mag202/magento/master/pub/media/downloadable/mage.png), then conduct some operations with chunks of its contents.
Indeed, at https://github.com/mag202/magento we find a repository of a beta version of Magento 2.4 created by the user mag202 on April 4, 2020.
Unsurprisingly, we found the suspected  magento/pub/media/downloadable/mage.png file within the repo.
A quick lookup in the official Magento repository reveals that this directory shouldn’t contain this  mage.png file.
In fact, it doesn’t have any image files at all.
When checking the raw contents of this file, we find this encrypted text at the very bottom after the IEND signature.
Since we have the actual JavaScript code that decrypts it, we retrieved this exfiltration gate URL: “hxxps://fontsgoogle-apis[.
One cool feature of version control systems is that they keep track of all repository modifications.
This mag202/magento repository on GitHub also has a public commit history.
The commit history basically consists of a series of uploads and deletions for the malicious mage.png file.
The hacker modifies the appended malicious code in these files and uploads new versions either in pub/media/downloadable/mage.png or app/design/frontend/Magento/luma/media/mage.png.
All historical versions of these files are also available on GitHub.
For example, the version from April 10 of magento/app/design/frontend/Magento/luma/media/mage.png contained the following code appended at the end.
At this point, it was real JavaScript code rather than just encrypted text.
The purpose of this code was the same, however — to hide the exfiltration details and allow the attacker to update it through GitHub at their convenience.
After its execution, we get the exfiltration URL:
This is the same URL found in images loaded by similar skimmer malware.
This same server also hosts the soon-to-be-expired domain gstatlcs[.
]com, which was registered on July 23rd, 2019.
Web skimmer operators are always actively searching for new methods to prevent detection of their malware on compromised websites.
This time, we found them combining four popular tricks to conceal their malicious code:
While this approach may make it more difficult to spot the malware for third-party researchers, webmasters who implement integrity control checks or website monitoring services should be able to detect addition of new files to the system or changes in existing files.
Categories: Magento Security, Sucuri Labs, Website Malware Infections, Website SecurityTags: Best Practices, Google, Hacked Websites, Obfuscation
Denis Sinegubko is Sucuri’s Senior Malware Researcher who joined the company in 2013.
Denis' main responsibilities include researching emerging threats and creating  signatures for SiteCheck.
The founder of UnmaskParasites, his professional experience covers over 20 years of programming and information security.
When Denis isn’t analyzing malware, you might not find him not online at all.
Connect with him on Twitter.
We're actively engaged across multiple platforms.
Follow us and let's connect!
© 2021 Sucuri Inc. All rights reserved
Sucuri Cookie Policy  See our policy>>
Our website uses cookies, which help us to improve our site and enables us to deliver the best possible service and customer experience.
