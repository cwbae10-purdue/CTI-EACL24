AZORult is an information stealer first analyzed in 2016[1].
It steals browsing history, cookies, ID/passwords, cryptocurrency information, and more.
Based on its configuration settings, it can also behave as a downloader.
In this blog, we investigate AZORult v3.2 and v3.3[2],[3].
According to ANY.RUN, AZORult ranked as a Top 10 threat from October 2018 to December 2018 [4].
Exploit kits and phishing emails are major infection vectors for this threat.
Other malware families such as Ramnit and Emotet also download AZORult.
This report details our threat research team’s recent technical observations of AZORult.
AZORult is an infostealer malware.
Its general behavior is summarized in Figure 1.
Once a victim's computer is infected, the malware exfiltrates sensitive data.
First, AZORult generates a unique ID of the victim's computer and applies XOR encryption using the generated ID.
A masked ID is used for the initial request to command and control (C2) servers.
C2 servers respond with configuration data which contains target web browser names, web browser path information, API names, sqlite3 queries, and legitimate DLLs.
AZORult then harvests sensitive information from the victim's computer according to rules set by its configuration data.
The collected information is packed and XORed.
AZORult can also download and run additional programs.
We did not observe any anti-analysis code in AZORult’s malware files:
Figure 1: AZORult attack cycle
Once AZORult runs in the victim's environment, it generates a unique ID from the following data (see Figure 2):
Each value is acquired with Win32 APIs and registry calls, and converted to 4-byte values with the following function:
 A 4-byte XOR key, 0x6521458A, is passed to the function as well.
The same XOR mask is used in AZORult v3.2 and v3.3.
Then, all 4-bytes data are concatenated with a hyphen.
The generated ID is used for two purposes:
AZORult attempts to convert the generated ID as follows:
The converted ID is used for the initial C2 communication.
AZORult sends an initial request to its C2 server to receive configuration data.
The configuration data format is described in Figure 3:
Figure 3: Configuration data format (v3.3)
The configuration data has three types of content:
Web browser path information, email client software, hardcoded sqlite3 queries, etc.
See Figure 4 for excerpted configuration data.
AZORult utilizes this information to scan victim's machines and steal sensitive data:
Figure 4: Excerpted configuration data of this part
Commands from the C2 servers      Commands are also in the configuration data.
See Figure 5 as an example:
                          -F                           AZORult to upload additional files                           -I                           AZORult to send geolocation of IP addresses of victim machines                           -L                           AZORult to download and run files
Figure 5: Command list example
Legitimate DLLs      These are used for stealing sensitive information on victim computers:
AZORult scans the victim’s environment looking to steal personal information such as passwords, cookies, browsing history, and more.
This section explains how the malware grabs password information saved in the victim’s Google Chrome browser:
Search target file:      In the case of Google Chrome, password information is saved in %LOCALAPPDATA%\Google\Chrome\User Data\Default\Login Data.
(The path is constructed by the information in the configuration data)
Copy the file “Login Data” to %TEMP%:      The destination filename in %TEMP% contains digits constructed with the result data of GetTickCount() and QueryPerformanceCounter() as shown in Figure 6:
Figure 6: A temporary file of copied “Login Data”
Run sqlite3 query:      The file “Login Data” is SQLite 3.x database code.
To query sqllite3 data, AZORult reads the configuration data to load a dll (in this case, “nss3.dll”).
It also loads the sqllite3 query data, then runs the query to extract sensitive information.
Once the data is extracted, AZORult saves the information as shown in Figure 7:
Figure 7: AZORult saves stolen password information with this format
Delete copied “Login Data” from %TEMP% directory.
Based on our analysis, AZORult tries to get sensitive information from these programs:
AZORult collects sensitive data from victim machines and sends it to C2 servers.
We confirmed several types of data sent to C2 servers including:
The data is packed and a hardcoded separator is added, as shown in Figure 8.
Hardcoded separators differ between v3.2 and v3.3.
Before the packed data is sent to C2 servers it is XOR masked:
Figure 8: Packed Information (separator is grayed-out)
Zip data contains some files and folders as shown in Figure 9:
Figure 9: Files and folders in zip data
AZORult may be configured to download and run additional payloads.
It saves the malicious files under %TEMP% or %ProgramFiles%.
AZORult checks the extension of downloaded files and if it finds “.exe”, it runs them via CreateProcessW() as shown in Figure 10.
During our investigation, we found hXXp://cindysonam[.]org/putty[.]exe.
The file was digitally signed and legitimate putty.exe v0.68.
However, the URL also distributed a banking Trojan, Panda Banker: [1],[2]
Figure 10: AZORult checks extension of downloaded file,   then it is run via CreateProcessW or ShellExecuteW
Blackberry Cylance discovered a builder website and the administrator panel web application.
The description, which highlighted several AZORult improvements, was written in Russian:
Figure 11: A screenshot of builder website of AZORult
The administrator panel is designed for showing information captured from victim computers.
On the top page it displays statistics of stolen information and the countries of victims:
Figure 12: Top page of administrator panel
Administrators can edit stealer config to specify information they want to steal and include additional malware samples.
AZORult will receive these administrator preferences as configuration data:
Figure 13: AZORult’s stealer config menu
Threat actors use AZORult to steal system information, browsing history, cookies, IDs/passwords saved in browsers, cryptocurrency information and more.
Though AZORult does not currently implement anti-analysis measures, we suspect it will in the future.
Blackberry Cylance uses artificial intelligence-based agents trained for threat detection on millions of both safe and unsafe files.
This allows Blackberry Cylance to spot a threat based on countless file attributes instead of a specific file signature to block AZORult.
Blackberry Cylance, which offers a predictive advantage over zero-day threats, is trained on and effective against both new and legacy cyberattacks.
o   A{Generated ID by AZORult}

        BlackBerry uses cookies to help make our website better.
Some of the cookies are necessary for proper
            functioning of the site, while others are to help us understand how you use it.
Read more here about our cookies, and how you can
            opt out.
By continuing to use this site you accept our use of cookies.
