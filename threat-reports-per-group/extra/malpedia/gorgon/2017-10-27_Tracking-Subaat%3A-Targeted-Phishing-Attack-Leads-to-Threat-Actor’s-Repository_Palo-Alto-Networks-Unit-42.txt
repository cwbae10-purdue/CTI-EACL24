October 27, 2017 at 5:00 AM
Tags: CVE-2012-0158, Downloader, QuasarRAT, Subaat
In mid-July, Palo Alto Networks Unit 42 identified a small targeted phishing campaign aimed at a government organization.
While tracking the activities of this campaign, we identified a repository of additional malware, including a web server that was used to host the payloads used for both this attack as well as others.
We’ll discuss how we discovered it, as well as possible attribution towards the individual behind these attacks.
Beginning on July 16, 2017, Unit 42 observed a small wave of phishing emails targeting a US-based government organization.
We observed a total of 43 emails with the following subject lines:
Within the 43 emails we observed, we found that three unique files were delivered, which consisted of two RTFs and a Microsoft Excel file.
Both RTFs exploited CVE-2012-0158 and acted as downloaders to ultimately deliver the QuasarRAT malware family.
The downloaders made use of the same shellcode, with minor variances witnessed between them.
Additionally, the RTFs made use of heavy obfuscation within the documents themselves, making it more difficult to extract the embedded shellcode.
The Microsoft Excel file contained malicious macros that resulted in dropping and subsequently executing Crimson Downloader.
The Excel document contained a UserForm that in turn contained three text boxes.
The embedded payload was hex-encoded and split between these three text boxes.
The malicious macro extracted this information from the text boxes, dropped it to a specific location, and eventually executed the Crimson Downloader payload.
Detailed information about these malware samples may be found in the appendix of this blog.
A curious aspect of this campaign is the use of Crimson Downloader in this email campaign.
To date, we have not widely seen Crimson Downloader being used: in fact, we have only seen 123 unique instances of this malware family being used to date.
Readers may recall a previous blog post from March 2016 that discussed Crimson Downloader.
That blog post discussed relationships with both Operation Transparent Tribe and Operation C-Major, which were both targeted campaigns that made use of Crimson Downloader aimed at diplomatic and political targets.
The connections we observed in this research leads us to believe there might be a connection between this most recent activity we observed and those campaigns.
However, there is not enough evidence to say so decisively.
Expanding the Scope from the Original Attacks
When looking at the various malware samples encountered as we analyzed this campaign, we identified a total of three hosts/IP addresses, as shown in the following chart:
Starting with the first IP address that was used by Crimson Downloader, we can see that this address appears to be located in Germany and is almost exclusively associated with this malware family.
Based on our telemetry, this IP address has exclusively been used to communicate with Crimson Downloader.
We observed a total of 16 unique Crimson Downloader samples starting in May of this year.
Moving onto the second IP address of 115.186.136[.
]237, we see that this IP address belongs to a Pakistan-based Internet Service Provider (ISP), based in Islamabad, that services both residential and commercial customers.
]com domain has historic WHOIS information from early 2016 that references a Pakistani location, as seen in the image below.
]net for its DNS, which is a Pakistan-based hosting provider.
Figure 1 Historical WHOIS information for subaat[.
The references to Pakistan in conjunction with the use of Crimson Downloader, which has historically been associated with Pakistan actors, is certainly interesting.
The RTFs we observed in the original email campaign downloaded QuasarRAT from http://subaat[.]com/files/sp.exe.
Checking this host led us to discover that directory listings were enabled.
We were able to discover a large repository of malware on this open server.
Figure 2 Open directory listing of subaat[.
Since beginning this research, this domain has been suspended by the hosting provider.
However, it returned in mid-August, hosting both a malicious APK and a known instance of QuasarRAT.
Figure 3 Subaat returns after suspension
In total, we found 84 unique malware payloads hosted on this server, in addition to a number of miscellaneous scripts.
The chart below shows the malware families we identified:
Figure 4 Malware families identified in web server repository
As we can see from the above chart, a wealth of different malware families were stored on this web server.
Many of these malware families are considered to be commodity malware, or widely used by criminals.
Palo Alto Networks has reported on many of these families in the past, including LuminosityLink, QuasarRAT, and DarkComet to name a few.
The large number of commodity malware families paints a very different picture from the original attack that made use of Crimson Downloader, which is not a widely used malware.
A full list of SHA256 hashes associated with these samples may be found in the appendix.
One thing that caught our eye was the large number of LuminosityLink malware samples stored on this server.
Looking at the embedded configuration settings for these samples, we see that they are all similar.
The following example shows one of these configurations.
A script written in a previous blog post was used to generate the output below, it can be downloaded here.
Figure 5 Embedded configuration within LuminosityLink sample
The email address shown above is used to register a customer’s copy of LuminosityLink.
All samples using this registered builder contain this email address.
We found all 20 of the identified LuminosityLink samples contained this same email address.
The primary domain shown above is registered to 115.186.136[.
]237, which is the IP address used by QuasarRAT for Command and Control (C2) communications.
Looking at other samples found within the web server repository, we identified a number of malware families communicating with this IP address, including the following:
We also discovered that the email address discussed above was being used by an account on the popular HackingForum web forum service.
The account in question that claims to own this email address is none other than ‘Subaat’.
Figure 6 Subaat user mentioning the hotmail email address on HackForums
Looking at this user’s profile below, we can see their posting history: a total of 14 posts in the past two years.
We also see a date of birth of 2/24/1990, stating that the individual is 27 years old.
Figure 7 Subaat profile information
A quick look at the posting history indicates that this person was inactive starting around December 2016, but returned to posting in early July of this year.
This is in line with the campaign witnessed against a US-based government organization that took place on July 16th.
The posts look to be related to various Office exploit builders and crypters.
This again is in line with both the campaign we witnessed as well as the various malware we identified on subaat[.
Figure 8 Subaat posting history
A Look Behind the Scenes
Looking at logs for the subaat webserver between July 1st and July 20th shows the IP address of 115.186.136[.
]237 uploading and interacting with a number of malicious files.
We found interactions with a total of 64 unique files during this period.
Below is a chart showing the attacker at this IP address interacting with some of the more popular malware families that have been identified.
Figure 9 Interaction between attacker and web server
As we can see from the chart above, a spike of activity took place in the July 11th to July 16th timeframe.
This again is consistent with the email campaign that took place in the midst of this period.
A number of malware families have been used by this specific attacker, and many of them are configured to communicate with 115.186.136[.
What started out as a simple look into what appeared to be a targeted phishing campaign turned into much more.
By the end of this research endeavor, we have identified a server hosting a large number of malware samples that has been primarily used by one specific IP address.
This IP address not only interacted with this web server, but also acted as a C2 server for many of these malware families.
While looking at malware associated with this actor, we discovered an email address that is tied to a user account on HackForums that has a name consistent with the domain used to host the actor’s malware.
We saw similarities this campaign and both the Operation Transparent Tribe and Operation C-Major campaigns.
Additionally, there is marginal evidence that suggests that the attacker may be based in Pakistan, which is again in line Operation Transparent Tribe.
However, the overall evidence is not conclusive, and there is insufficient proof to say decisively that this is the same threat actor.
Palo Alto Networks customers are protected by this threat in a number of ways:
Analysis of Malicious RTF Documents
The two identified samples that were used in a campaign against a US-based government organization has the following SHA256 hashes:
These samples varied in size greatly, however, the underlying shellcode was consistent.
One notable difference observed in one of the samples (0ade05…) was the inclusion of injecting the shellcode into a newly spawned instance of svchost.exe.
When the shellcode begins, it will start by loading a number of functions that are used to inject code into svchost.exe.
The following Python code demonstrates how this hashing function operates:
Figure 10 Python code demonstrating API hashing technique #1
The shellcode continues to decrypt a blob of data using a 4-byte XOR key of 0x8F51F053.
This blob contains a series of important strings, such as the URL and filename, as well as functions that will be used to download the payload.
After this blob is decrypted, flow control proceeds to this blob’s code, where the shellcode will load multiple libraries and functions using a specific hashing algorithm.
The shellcode continues download a file to the %TEMP% directory from the following URL:
The shellcode proceeds to execute this newly downloaded file prior to exiting.
Analysis of Malicious Excel Documents
The identified sample that was used in a campaign against a US-based government organization has the following SHA256 hash:
When this sample is initially executed, it will attempt to run a malicious macro that is embedded within the file.
This macro begins by determining where a dropped file will reside.
It will attempt to find the following folders residing within a user’s profile path:
Figure 11 Macro determining file path
The payload itself is stored within text boxes in a user form within the Excel document.
This data is extracted and hex-decoded.
The three blobs of data are concatenated to form a proper PE32 executable.
Figure 12 Macro loading data from text boxes
A quick look at the included user form gives us a better view as to how this data is stored.
Figure 13 Embedded user form with three text boxes
The following example Python code demonstrates the hex-decoded data shown in the highlighted text box above.
Figure 14 Python code hex-decoding the stored data
After this data is properly handled, the macro will drop this file with an extension of .scr to the designated file path.
It is then executed in a new process.
This newly spawned process is an instance of the Crimson Downloader malware family.
Sign up to receive the latest news, cyber threat intelligence and research from us
Please enter your email address!
Please mark, I'm not a robot!
By submitting this form, you agree to our Terms of Use and acknowledge our Privacy Statement.
© 2021 Palo Alto Networks, Inc. All rights reserved.
