During our threat monitoring activities, we discovered an interesting drop chain related to the well-known Aggah campaign, the ambiguous infection chain observed by Unit42 which seemed to deliver payloads potentially associated with the Gorgon Group APT.
After that, we discovered other malicious activities using the same TTPs and infrastructures, for instance in “The Enigmatic “Roma225” Campaign” and “The Evolution of Aggah: From Roma225 to the RG Campaign” reports.
But, despite the very similar infection chain, this latest attacks revealed a curious variation of the final payload, opening up to different interpretations and hypothesis about the “Aggah” activities.
As in most infections, the multi-stage chain starts with a weaponized Office document containing VBA macro code.
It immediately appears obfuscated and after a de-obfuscation phase, we discovered it invokes the following OS command:
The bit.ly link redirects on the attacker’s page hosted on Blogspot at hxxps://myownteammana.blogspot[.com/p/otuego4thday.html.
This is the typical Aggah modus operandi.
In fact, the webpage source code contains a JavaScript snippet designed to be executed by the MSHTA engine.
This script is obfuscated using a combination of URL-encoding and string reversing.
Once again, the script is only a dropper that downloads the next malicious stage hosted on PasteBin.
Like the previous Aggah campaigns, the pastes were created by the “hagga” account.
This stage is designed to kill the Office suite processes and to create a new registry key to achieve persistence on the target system.
This way the hagga dropper would survive the reboot.
In detail, the malware uses three mechanisms to ensure its persistence on the victim machine:
Each entry contact pastebin.com to download and execute further payload.
The interesting fact is that the URL referred by tasks and regkey are different from each other, so the attacker is able to deliver more than a payload by just changing one of the pastes.
During the analysis, all the three URL pointed to the same script, which is reported in the following screen.
The cleaned code reveals a byte array composing Powershell commands.
It downloads two other snippets from Pastebin.
The first one corresponds to the “Hackitup” DLL file, previously discussed in our previous report.
The second paste is the final payload.
In many other Aggah campaigns it corresponds to RevengeRAT, which could also be linked to the Gorgon Group.
However, during the analysis we identified another kind of final stage.
This time, the final payload was a variant of a popular infostealer for sale on the dark markets, AzoRult.
It is able to access to saved credentials of the major browser like Chromium, Firefox, Opera, Vivaldi to exfiltrate cookies, credentials and other navigation data.
Having a deeper look to the command and control infrastructure we noticed some interesting details.
In fact, we discovered the particular, customized, AzoRult 3.2 fork called “Mana Tools”.
At the same time, reviewing the infection chain data revealed the presence of a reference to this “Mana” customization even in the blogspot page abused in the first steps of the chain.
We have monitored the campaign and its final payload for different days finding the attacker delivered AzoRult samples only a few times, during the first days of September 2019, and after that it resumed to deliver RevengeRAT samples.
The “Mana” campaign opens to a series of hypothesis about the threat actor behind it.
According to Palo Alto Networks, the “Aggah” infection chain could have been used by GorgonGroup too, but with a different payload.
So, it is possible that Gorgon added this particular AzoRult version to their arsenal, maybe to retrieve initial information about its initial victims or to increase their recon capabilities.
But the confidence in this scenario is not high enough to confirm it.
Another possibility is that another minor cyber criminal leveraged the Aggah infection chain to deliver his AzoRult payload, which is a commodity malware, or also the actors behind the “Hagga” Pastebin account used their own infection chain to conduct its own attack campaign.
Many question only further hunting could answer.
This blog post was authored by Antonio Farina and Luca Mella of Cybaze-Yoroi Z-LAB
