AZORult attackers continue to adjust tactics to increase the chances that they’ll evade detection.
This malware is a common information stealer, capable of exfiltrating a wide range of sensitive artifacts from an endpoint, including files, cached passwords, and even cryptocurrency wallet keys.
Since Minerva’s last post about a highly evasive AZORult campaign, there were many other reports, describing AZORult attacks successfully infecting hundreds of individual victims in a single wave.
Below are the details of this AZORult campaign, to assist others with detecting infected endpoints and clarify how such attacks can be identified in the future.
Our investigation began when a Minerva customer contacted us about a suspicious executable that Minerva’s Anti-Evasion Platform prevented on their endpoint.
The customer was surprised to see that the suspect file, named GoogleUpdate.exe, was digitally signed by a valid, non-revoked certificate.
The icon of this malicious file matched the legitimate updater:
The icon of the malicious Google Updater looked just like the legitimate one.
However, the certificate with which the malicious file was signed did not belong to Google:
Fake GoogleUpdate.exe, valid signature – but not by Google
If we’re to take the meaning of this certificate attached to the malicious GoogleUpdate.exe file at its face value, we’d assume that the signer vouched for the legitimacy of this file.
This does not mean that the file is benign, although some users (and even security products) assume that it might be.
The certificate authority only verifies that the details of the signer are legitimate, regardless of the safety of the signed files.
The certificate used to sign the malicious GoogleUpdate.exe file either stolen from its legitimate owner or obtained for malicious purposes.
Since this certificate was issued on November 19th, 2018, it was used for signing more than a hundred different binaries, all disguised as GoogleUpdate.exe (see the IOC section for hashes).
We were unable to determine whether the signer was aware of the malicious use of their certificate.
After concluding that the GoogleUpdate.exe was malicious, we faced the task of determining the file’s malware family.
We identified it as a likely an AZORult variant by analyzing the specimen’s network communications, which included the following AZORult patterns:
AZORult’s typical HTTP POST request
We were able to corroborate our initial identification using the publicly available Intezer Analyze platform, which confirmed that the sample, once unpacked, has an over 98% match to AZORult.
Intezer’s Analyze report of the unpacked GoogleUpdate.exe file
One of the capabilities of this AZORult sample is that it not only uses the file name GoogleUpdate.exe, but also replaces the legitimate Google Updater in C:\Program Files\Google\Update\GoogleUpdate.exe.
This helps the malicious program run with administrative privileges and allows it to establish a stealthy persistence mechanism.
Google typically defines two scheduled tasks to update its products:
In addition, there are two Google update services running this binary as well, as defined in the registry values:
This AZORult variant does not modify either the tasks or the registry.
However, as the result of replacing the original GoogleUpdate.exe file, the malware will run with administrative privileges whenever an update is started.
This also allows the malware to gain persistence that can be difficult to notice, since the tasks and services are not suspicious–only the contents of the file they run.
Google’s update routine, GoogleUpdateBroker, starts the malicious GoogleUpdate.exe on the AZORult-infected system
This is not a new technique and was used in the past by APT groups like MuddyWater, but so far, there was no evidence linking AZORult samples to this method .
In addition to replacing GoogleUpdate.exe, this AZORult variant also drops a copy of itself to C:\ProgramData\localNETService\localNETService.exe and adds an entry to the registry to start it as a service as well.
Five different persistency mechanisms, four of those are achieved by replacing the original updater
Minerva’s Anti-Evasion Platform prevents this infection by interfering with the attempt of AZORult to decrypt and run its malicious payload in memory.
This allowed us to protect customers from this variant without any AZORult-specific countermeasures, days before other vendors did.
Minerva’s Management Console, reporting it prevented the AZORult variant from injecting code into itself
After preventing the infection, Minerva’s Management Console also displays details for the suspicious certificate, allowing incident responders and SOC teams to detect a mismatch between the alleged identity of the file and its actual signer.
The suspicious signer, as displayed in the Minerva prevention original event.
Interested to learn more about what we’re doing here at Minerva to protect endpoints?
Come meet us at CyberTech Israel 2019, booth #C11

    Sign up for the Minerva newsletter and stay on top of the latest cybersecurity news.
