Collected from over 1000 configurations, here are some high-level statistics that demonstrate some of the common trends among one of the most popular tools in an adversary’s arsenal.
These configs were collected from live servers around early May 2021.
If you are interested in how the data was collected, scroll to the bottom of the article.
Also if you just want the raw data here is a link.
If you want to read more about how the configurations are structured in Cobalt Strike payloads his article is a good start:
Unsurprisingly most common watermark was 0.
The watermark of 0 is indicative of cracked versions for Cobalt Strike which are commonly used by threat actors in their campaigns.
More interestingly is 305419896, 1359593325, and 1580103814, all had configuration counts above 100.
The watermark 305419896 has been associated with the Maze ransomware:
Besides the standard user agents imitating web browsers, several configurations had the user agent of “Shockwave Flash”
The more standard URIs of /submit.php and /jquery-3.3.2.min.js were the most common but this one stood out to me:
Most common process spawn targets
The default values of rundll32.exe were the most common.
Looking at the information, I was most interested in some of the more custom values such as:
I used 2 main queries to get as many C2 IPs as quickly as possible.
If you want to learn more about JARM, which is developed by the Salesforce team, this is a great article:
This data contained many IPs that were burnt by the time of analysis; however, it still provided a decent enough dataset to get some results.
I had two ideas for harvesting configs; one would be downloading the binary payload from sources like Virustotal and MalwareBazaar and parsing them.
But if we know the IPs already, let's just ask the servers for the config?
There are a bunch of awesome tools that exist for extracting and parsing Cobalt beacon configs, but the one I used for this was a Nmap NSE script by Wade Hickey.
I had added some error exception handling and most importantly an extra line to pull out the beacon Watermark (or license number) which is very helpful for threat intelligence.
I then used the IP lists I had as input and ran the Nmap script.
The output of the script will look something like this:
From there, it was an exercise of cleaning up the data into something useable and using Excel-fu to get some ugly pie graphs :)
