Recently there have been several reports of a financial malware named TrickBot1.
The malware’s code looked similar to Dyre’s code but was lacking in functionality in comparison to the old Dyre samples.
It also had a fairly basic module configuration, including:
The malware had no VNC, SOCKS, and form grabber modules.
The samples that were observed in the field had a persistency mechanism, browser function hooks (also known as man-in-the-browser) and a short list of Australian targets that were fetched from the command and control (C&C) server.
This week our research team came across a new campaign of TrickBot malware.
The previous webinjects configuration was partial and looked like a part of a testing version of the TrickBot malware.
After analyzing this campaign, we noticed a change in the webinjects configuration.
Many new targets, including Germany and the UK, were added to the previous targets of Canada, Australia, and New Zealand.
Figure 1: TrickBot target evolution
TrickBot has server-side webinjects, meaning, when the user connects to the targeted bank’s site, a replication of the target’s response source is sent to the C&C, where Javascript injections are inserted.
After the targeted source has been injected with malicious code, it is returned to the user as if it actually came from the bank.
In the following illustrations, one can see the fields that were added.
These are intended to filter out certain file types as they can be fetched from the real bank site.
Figure 2: TrickBot’s old configuration
Figure 3: TrickBot's new configuration
Static injections, also known as “redirects,” are now fully functional in TrickBot.
When the user tries to connect to a targeted site, the malware redirects the request to a malicious C&C server and returns a fake page that looks exactly like the bank’s original page.
Figure 4: TrickBot's new configuration
Inside the browser function hook, the request page is forwarded to the fake domain containing Bot ID inside the “ClientInfo” header.
Figure 5: A redirected request to a malicious domain
A ping request, which is sent from every page in the site, is launched by a “start_ping” function on a “document.ready” event in an endless loop every two seconds (like Dyre).
These requests are also redirected to the malware’s server inside the browser network hook.
Figure 6: A ping is sent by the malicious code in the page
Similar to Dyre, TrickBot uses pipes for its inter-process communication.
Once a browser is launched, a malicious module (“core-dll.dll”) is injected into its memory by the main TrickBot module in svchost.exe.
Figure 7: TrickBot’s module in Firefox’s address space
The browser module waits for incoming pipe connections.
The main module connects to the browser module using a named pipe “\Device\NamedPipe\ <PID >lacesomepipe” where PID is the process ID number of the browser.
Figure 8: The pipe in the infected svchost.exe process
The commands are one byte long.
Each command is a letter that signifies the data to transfer.
Figure 9: Handling pipe commands
“i” – get client_id, e.g.
“a” – get self ip, e.g.
“g” – get group_id, e.g.
“q” – quit and disconnect the pipe
The browser module asks the main module for every one of these data pieces and if one of the data pieces is not received, the malcious thread will terminate and the browser will not be patched by the malware.
A security improvement from Dyre’s pipe is implemented by closing the pipe right after all the commands are sent.
Meaning that if a researcher is inspecting the malware, connecting to the pipe in order to get the configuration is not as trivial as it was in Dyre.
It seems that the creators of this malware are rolling it out to the field gradually, testing its spreading capabilities and adding targets as they go along.
It is highly likely that we will witness its functionality expand and its target list will continue to grow.
The information you provide will be treated in accordance with the F5 Privacy Notice.
Need to change your email or add a new one?
Julia Karpin is a senior malware researcher on the F5 security research team.
She has been dealing with financial malware and its shenanigans for most of the current decade.
Her main interest is Windows and Android malware, reverse engineering and automating every research aspect that can be automated.
She has been a speaker at various security conferences, including REcon (@reconmtl), Virus Bulletin (@virusbtn), and OWASP Israel (@OWASPIL).
Shaul Vilkomir-Preisman is a contributing researcher and author for F5 Labs.
Anna (Hadas) Dorfman is a security researcher for F5 and a contributor for F5 Labs.
So, we get to work.
We obsess over effective attack methods.
We monitor the growth of IoT and its evolving threats.
We dive deep into the latest crypto-mining campaigns.
We analyze banking Trojan targets.
We hunt for the latest malware.
And then our team of experts share it all with you.
For more than 20 years, F5 has been leading the app delivery space.
With our experience, we are passionate about educating the security community-providing the intel you need to stay informed so your apps can stay safe.
So, we get to work.
We obsess over effective attack methods.
We monitor the growth of IoT and its evolving threats.
We dive deep into the latest crypto-mining campaigns.
We analyze banking Trojan targets.
We hunt for the latest malware.
And then our team of experts share it all with you.
For more than 20 years, F5 has been leading the app delivery space.
With our experience, we are passionate about educating the security community-providing the intel you need to stay informed so your apps can stay safe.
The information you provide will be treated in accordance with the F5 Privacy Notice.
Need to change your email or add a new one?
The information you provide will be treated in accordance with the F5 Privacy Notice.
