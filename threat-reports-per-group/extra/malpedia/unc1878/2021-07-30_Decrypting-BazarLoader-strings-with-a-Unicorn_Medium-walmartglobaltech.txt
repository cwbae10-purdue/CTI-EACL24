BazarLoader[1,2,6] has been used by various teams over the past year primarily being leveraged for spam campaigns by teams associated with TrickBot[3].
While the initial malware changed the on objective TTPs (TrickBot Attack Team PlayBook) remain very similar to most of their infections that end with Anchor on high priority servers and ultimately ransomware infections[4,5,7].
Recently I’ve noticed on the Loader side that two versions have shown up using different obfuscations and in different campaigns.
There are few different obfuscations being utilized by the various teams involved in Bazar but for the purpose of this report we will be focusing on the samples utilizing LLVM[8].
Some of the unpacked samples we will be looking at refer to themselves as:
These samples store most of their relevant strings in an obfuscated manner where the data is manually loaded in and then ran through a fairly lengthy process of decoding the data.
Investigating more instances of this process in the same sample shows variations meaning it was dynamically generated whether using macros or a lower level obfuscator, the TrickBot group has historically utilized both ADVobfuscator[11] and LLVM[8].
For decoding the strings with an emulator[12] we will need to capture the block of data that loads the bytes and also the loop that decodes it, luckily for obfuscators like this there are normally patterns we can signature on for the samples:
In this code block we are doing some initial setup for unicorn[12] and then finding our block of code, because of how python regex is being used here we will get the first block in the file all the way through the last block.
This means we will need to break up and parse out the individual blocks, I prefer this method because it lets me take control of the process to a degree.
So we break up each block by the start and end while accounting for a variation that I noticed in some of the samples for the ending bytes.
Up next we will finish setting up our emulator and then loop through and emulate each block of code:
After emulation we will read in the entire memory we had allocated for the stack and then print out any strings found by stripping all NULL bytes:
An example gives us a healthy chunk of data:
Running on a set of files from VirusTotal we can quickly churn out some C2 lists.
We’re powering the next great retail disruption.
We’re powering the next great retail disruption.
Learn more about us — https://www.linkedin.com/company/walmartglobaltech/
Malware Researcher, Crimeware Threat Intel, Reverse Engineer @Walmart
We’re powering the next great retail disruption.
Learn more about us — https://www.linkedin.com/company/walmartglobaltech/
