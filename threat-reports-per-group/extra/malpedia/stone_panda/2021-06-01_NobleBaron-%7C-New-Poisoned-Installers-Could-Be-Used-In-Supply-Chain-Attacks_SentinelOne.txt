The operations of ‘APT29’ no longer look anything like they did in the past half decade.
At this point our preconceptions about these groups are doing more to cloud our judgment than they elucidate.
Perhaps new naming conventions (like ‘NOBELIUM’ or ‘StellarParticle’) will help piece these new clusters of activity apart– all the while upsetting folks who would prefer a simpler threat landscape than the one our reality affords us.
We track this new activity under the name ‘NobleBaron’, building off of the excellent reporting by Microsoft and Volexity.
We acknowledge the suspicion that this is a newer iteration of APT29 but share in the general trepidation to equate the two.
As noted by Microsoft, the actor appears to be experimenting with various multi-stage infection chains.
Common variations include the method of delivering the ISO containers and a wide variety of custom downloaders enmeshed with Cobalt Strike Beacon.
There’s a vague mention of an iOS zero-day being hosted on Nobelium fingerprinting servers but no mention as to whether this entails an iOS payload.
That said, we also suspect no company is in a position to monitor iPhone endpoints for these payloads, Apple included.
While the Cobalt Strike Beacon payload is a disappointingly ubiquitous end for such a convoluted infection chain, it’s not in fact the end of that chain.
Rather, it serves as an early scout that enables selective distribution of rarer payloads directly into memory where they’re less likely to be detected.
A similar technique was employed by HackingTeam’s Remote Control System (RCS) where initial infections used their ‘Scout’ malware for initial recon and could then be selectively upgraded to the full ‘Elite’ payload.
After years of burned iterations on custom toolkits, it seems NobleBaron has opted for maximizing return on investment by simply lowering their upfront investment.
Notable TTPs include the following:
Most notably, one of these NativeZone downloaders is being used as part of a clever poisoned installer targeting Ukrainian government security applications.
A zip file is used to package legitimate components alongside a malicious DLL (KM.Filesystem.dll).
The malicious KM.Filesystem.dll was crafted to impersonate a legitimate component of the Ukrainian Institute of Technology’s cryptographic keys of the same name.
It even mimics the same two exported functions as the original.
The package is not an ISO, but it follows a familiar formula.
‘ScanClientUpdate.zip’ relies on a triad of sorts.
An LNK is used to kick off the malicious KM.FileSystem.dll component.
In turn, KM.FileSystem.dll starts by checking for presence of KM.EkeyAlmaz1C.dll (a benign DLL).
This check is presumably meant as an anti-sandbox technique that would keep this downloader from executing unless it’s in the same directory as the other packaged components.
We stop short of referring to this as a supply chain attack since we lack visibility into its means of distribution.
The poisoned installer may be delivered directly to relevant victims that rely on this regional solution.
Alternatively, the attackers may have found a way of abusing an internal resource to distribute their malicious ‘update’.
The LNK starter invokes the KMGetInterface export to execute the malware’s functionality.
It passes a benign Windows component as an argument (ComputerDefaults.exe).
The attackers will use the file’s attributes later on.
Upon execution, the user is presented with a vague ‘Success’ message box.
Note that the heading of the message box is ‘ASKOD’, a reference to the Ukrainian electronic document management system.
This initiative is meant to enforce electronic digital signatures through the use of cryptographic keys like the Алмаз-1К (transliterated as ‘Almaz-1K’ or translated to ‘Diamond-1K’) shown below.
These particular electronic keys are referenced in Ukrainian government tenders and make for a cunning regional-specific lure to distribute malware.
After displaying the message box, the malicious DLL proceeds to resolve APIs by hash and decrypts its payload directly into memory.
You guessed it: Cobalt Strike Beacon v4.
It then decrypts the configuration via single-byte XOR 0x2E and attempts to establish contact with the command-and-control server doggroomingnews[.]com.
It checks for ‘/storage/main.woff2’ and if necessary falls back to ‘/storage/page.woff2’.
The domain resolves to an IP address in Ukraine (45.135.167.27), which appears to be a compromised domain.
While we have not been able to fetch the response at this time, it’s worth noting that this same IP was also contacted by a Cobalt Strike Beacon sample in late 2020:
These malicious updates are distributed in zip archives.
At this time, we’ve discovered two ‘ScanClientUpdate.zip’ samples, both containing the same malicious DLL:
NobleBaron developers internally refer to these components under the name ‘DLL_stageless’
The following are variants of DLL_stageless with their respective delivery mechanisms and encrypted command-and-control configuration.
Analyzing GraphicalComponent.dll led to the discovery of another DLL_stageless sample.
At this time, we have not discovered the delivery mechanism.
The name suggests the possibility of a different poisoned installer, with a focus on the Java SRE runtime.
The malicious functionality of this sample is launched via the exported function CheckUpdteFrameJavaCurrentVersion.
This particular instance of DLL_stageless doesn’t check for a nearby file or specific directory.
Get notified when we post new content.
Keep an eye out for new content!
In the era of interconnectivity, when markets, geographies, and jurisdictions merge in the melting pot of the digital domain, the perils of the threat ecosystem become unparalleled.
Crimeware families achieve an unparalleled level of technical sophistication, APT groups are competing in fully-fledged cyber warfare, while once decentralized and scattered threat actors are forming adamant alliances of operating as elite corporate espionage teams.
Get notified when we post new content.
Keep an eye out for new content!
