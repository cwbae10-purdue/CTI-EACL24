This will navigate you to Accenture.com Sign In page.
Turla, identified internally by Accenture Cyber Threat Intelligence as Belugasturgeon, continues to target government organizations using custom malware, including updated legacy tools, designed to maintain persistence through overlapping backdoor access while evading their victim’s defenses.
One such tool, the HyperStack backdoor (named after its filename on one identified sample), has seen significant updates that appear to be inspired by the group’s Carbon backdoor and the RPC backdoor described by ESET researchers.
Turla has conducted espionage operations on behalf of its state sponsor for over a decade.
The group primarily targets foreign governments and embassies using advanced custom tools designed to stay hidden for long periods of time.
The activity identified by Accenture threat researchers is within the group’s typical targeting set using their custom tools, albeit with some updates.
Accenture Cyber Threat Intelligence researchers identified a Turla compromise of a European government organization.
During this compromise Turla utilized a combination of remote procedure call (RPC)-based backdoors, such as HyperStack and remote administration trojans (RATs), such as Kazuar and Carbon, which ACTI researchers analyzed between June and October 2020.
The RATs transmit the command execution results and exfiltrate data from the victim's network while the RPC-based backdoors use the RPC protocol to perform lateral movement and issue and receive commands on other machines in the local network.
These tools often include several layers of obfuscation and defense evasion techniques.
This combination of tools has served Turla well, as some of their current backdoors use code that dates back to 2005, according to Palo Alto researchers.
The threat group will likely continue to maintain and rely on this ecosystem, and iterations of it, as long as the group targets Windows-based networks.
Turla uses a variety of command and control (C&C) implementations within each compromise which allows for multiple avenues of reentry if parts of the compromise are identified by defenders.
Notably, Accenture researchers recently identified novel command and control (C&C) configurations for Turla’s Carbon and Kazuar backdoors on the same victim network.
The Kazuar instances varied in configuration between using external C&C nodes off the victim network and internal nodes on the affected network, and the Carbon instance had been updated to include a Pastebin project to receive encrypted tasks alongside its traditional HTTP C&C infrastructure.
HyperStack, first observed in 2018, is one of several RPC backdoors Turla uses.
A sample identified in September 2020 has updated functionality which appears to be inspired the RPC backdoors previously publicly disclosed by ESET and Symantec Researchers as well as with the Carbon backdoor.
Based on these similarities, we assess with high confidence that HyperStack is a custom Turla backdoor.
Comparison of Hyperstack to Turla's carbon and RPC backdoors
HyperStack uses named pipes to execute remote procedure calls (RPC) from the controller to the device hosting the HyperStack client.
To move laterally, the implant tries to connect to another remote device’s IPC$ share, either using a null session or default credentials.
IPC$ is a share that facilitates inter-process communication (IPC) by exposing named pipes to write to or read from.
If the implant’s connection to the IPC$ is successful, the implant can forward RPC commands from the controller to the remote device, and likely has the capability to copy itself onto the remote device.
Another version of HyperStack observed in this campaign contained a simpler functionality, allowing Turla operators to run commands via a named pipe from the controller to the implant, without any of the IPC$ enumeration activity.
Analysis of several backdoors identified in this recent operation revealed that Turla has relied on traditional C&C implementations, using compromised web servers as C&C, as well as utilizing legitimate web services like Pastebin.
Additionally, one analyzed sample of Kazuar is configured for commands sent through likely internal nodes in the government's network, while others use the more traditional method of external C&C nodes.
Varying the C&C ensures multiple avenues of recovery into the network if some of the group’s accesses are found and remediated against by network defenders.
Kazuar - Command and Control
In mid-September, we analyzed a sample of Kazuar that, unlike traditional Kazuar samples, is configured to receive commands via Uniform Resource Identifiers (URI) pointing to internal C&C nodes in the victim government network.
This Kazuar configuration acts in conjunction with another sample, analyzed in early October, on the same victim network.
Based on references to the internal C&C node, the October sample likely acts as a transfer agent used to proxy commands from the remote Turla operators to the Kazuar instances on internal nodes in the network via an internet-facing shared network location.
This set-up allows Turla operators to communicate with Kazuar-infected machines in the victim network that are not accessible remotely.
Another recently analyzed sample of Kazuar from the same victim network had a traditional C&C implementation where the implant communicates directly with a C&C server located outside the victim network.
The C&C URLs correspond to compromised legitimate websites for Turla to proxy commands and exfiltrate data to Turla backend infrastructure.
Carbon - Command and control using Pastebin
Turla has extensively used Carbon, a modular backdoor framework with advanced peer-to-peer capability, for several years.
A June 2020 analyzed instance of the Carbon backdoor augmented the traditional threat actor-owned C&C infrastructure with tasks served from Pastebin, a legitimate web service.
The Carbon installer discovered by ACTI analysts dropped a Carbon Orchestrator, two communication modules, and an encrypted configuration file.
The configuration file contains C&C URLs traditionally observed in Carbon instances, which are likely compromised web servers hosting a web shell that transmits commands and exfiltrates data from the victim network.
It also contains a parameter labeled [RENDEZVOUS_POINT] which contains a URL for a Pastebin project.
When accessing the Pastebin URL, an encrypted blob is downloaded that requires a corresponding RSA private key from the configuration file.
The configuration file analyzed did not contain the RSA private key and therefore we were unable to decrypt the contents of the Pastebin link.
We assess the decrypted blob was likely a task for the Carbon instance.
Exploiting legitimate web services for C&C
We are increasingly observing cyber-espionage groups use legitimate web services for their operational command and control, and Turla is no exception to this trend.
Groups likely use these services for several reasons:
Additionally, web services have the added benefit of being free or inexpensive and requiring limited resources for creation and maintenance.
Turla will likely continue to use its legacy tools, albeit with upgrades, to compromise and maintain long term access to its victims because these tools have proven successful against windows-based networks.
Government entities, in particular, should check network logs for indicators of compromise and build detections aimed at thwarting this threat actor.
The Accenture Cyber Threat Intelligence (ACTI) team provides actionable and relevant threat intelligence to support decision makers.
The intelligence analysis and assessments in this report are grounded in verified facts; more information on this activity is available to subscription customers on ACTI IntelGraph.
IntelGraph is a proprietary next generation security intelligence platform that allows users to search, visualize, and contextualize the relationships between malicious actors, their tools and the vulnerabilities they exploit.
Web Service
Data Obfuscation
Proxy
Standard Application Layer Protocol
Accenture Security is a leading provider of end-to-end cybersecurity services, including advanced cyber defense, applied cybersecurity solutions and managed security operations.
We bring security innovation, coupled with global scale and a worldwide delivery capability through our network of Advanced Technology and Intelligent Operations centers.
Helped by our team of highly skilled professionals, we enable clients to innovate safely, build cyber resilience and grow with confidence.
Follow us @AccentureSecure on Twitter or visit us at www.accenture.com/security.
Accenture, the Accenture logo, and other trademarks, service marks, and designs are registered or unregistered trademarks of Accenture and its subsidiaries in the United States and in foreign countries.
All trademarks are properties of their respective owners.
All materials are intended for the original recipient only.
The reproduction and distribution of this material is forbidden without express written permission from Accenture.
The opinions, statements, and assessments in this report are solely those of the individual author(s) and do not constitute legal advice, nor do they necessarily reflect the views of Accenture, its subsidiaries, or affiliates.
Given the inherent nature of threat intelligence, the content contained in this report is based on information gathered and understood at the time of its creation.
It is subject to change.
Accenture provides the information on an “as-is” basis without representation or warranty and accepts no liability for any action or failure to act taken in response to the information contained or referenced in this report.
Upon execution, HyperStack undergoes a similar registry key check to Turla’s RPC backdoor and updates the same registry key to determine which named pipes can be accessed anonymously.
The HyperStack backdoor first copies itself to C:\ADSchemeIntegrity.exe and then installs itself with system-level privileges as the service Active Directory Scheme Integrity Service.
HyperStack checks for the following registry entry and, when found, adds the name of its communication pipe (‘adschemerpc’) to the key value:
To make the pipe available to anyone, HyperStack sets the security descriptor for the pipe to S:(ML;;NW;;;S-1-16-0)—a method that Turla also uses in its RPC backdoor.
Next, HyperStack uses a custom handshake that is similar to handshakes used for Carbon named-pipe communications.
To detect incoming connections from the controller, the HyperStack implant uses the Windows API call ‘ConnectNamedPipe’.
When HyperStack receives an incoming connection, it starts a new thread and continues with the custom handshake.
The malware reads 8 bytes from the pipe and checks if it matches : B19B055CA11CACA0.
If it matches, the HyperStack implant returns the value CACA05ACCE55F11E to the controller.
Similar 8-byte hex values are exchanged as part of the Carbon backdoor’s custom handshake.
HyperStack writes a configuration file named backport.inf, the same file format as the Carbon malware's configuration file.
The configuration file is written to %SystemRoot%\INF\backport.inf and contains a [Version] section with various keys:
The [Version] section of the file contains several keys that the malware writes including:
HyperStack checks the configuration file to determine if the Type equals SilentMoon.
If yes, it generates an RSA PKCS key using CryptGenKey that is used for encryption of communication session keys.
It then writes the RSA key to the PRVK key  in the [Version] section of the config file.
Turla’s Carbon backdoor also implements RSA encryption on the session keys for some of its C&C channels.
Use of inter-process communication (IPC$) share
HyperStack sets the registry key HKLM\SYSTEM\CurrentControlSet\Control\LSA\Restrict Anonymous value to 0 so anonymous logon users (i.e., null session connections) can list all account names and enumerate all shared resources on a remote share.
The implant can then use the WNetAddConnection2 API call to connect to another remote device's IPC$ share.
IPC$ is a share that facilitates inter-process communication (IPC) by exposing named pipes to write to or read from.
The implant attempts to connect to the IPC$ share using a null session, or if this fails, with default credentials.
HyperStack uses named pipes to execute remote procedure calls (RPC) from the controller to the device hosting the HyperStack implant.
If the implant’s connection to the IPC$ is successful, the implant can forward RPC commands from the controller to the remote device, and likely has the capability to copy itself onto the remote device.
Turla also used the IPC$ share during the lateral movement stage of its compromise of Swiss defense firm RUAG, according to the Swiss Government Computer Emergency Response Team's technical report describing the incident.
The HyperStack implant writes command results and error messages to log files stored in the %Temp% directory.
The log files have randomly generated names with the prefixes  ‘sm’ and ‘~D’.
Turla uses the same ‘~D’ prefix for the names of Carbon log files.
The HyperStack implant also searches for log files with the prefix ~X and deletes them, suggesting it may be cleaning up after previous versions or another malware family's logs.
Another version of HyperStack observed in this campaign contained a simpler functionality, allowing Turla operators to run commands via a named pipe from the controller to the implant, without any of the IPC$ enumeration activity.
To mitigate the threat of Carbon, Kazuar, and HyperStack, ACTI recommends checking network logs for indicators related to these backdoors including the following IOCs:
]com:443/raw/5qXBPmAZ
suplexrpc – Named pipe
The first name is required and cannot be empty
The last name is required and cannot be empty
This email address is already in use
This value is not valid
This value is not valid
This email address is already in use.
This value is not valid
