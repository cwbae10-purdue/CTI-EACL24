Scrutinize Files Before Ransomware Runs !
APT36 ( a.k.a Transparent Tribe / Mythic Leopard / PROJECTM/ TEMP ) is a prominent group believed to be operating on behalf of Pakistan state and conducting espionage with great interests in a very specific set of countries specially India, widely since 2013.
Most frequent target sectors include:
Cyberstanc's very own threat research team have been tracking APT36's activities and we would like to provide you an insight into their tradecraft specially their main malware dubbed "Crimson RAT".
Transparent Tribe employees multitude of tactics from the old books of espionage 101 for dummies for example honey-trapping army personals however frequent payload delivery methods constitutes of usually the following:
Stage 1 (Macro enabled document dropper) :
Kashmir_conflict_actions.docx contains a macro which in turn makes a remote SQL query to C2 server (Datroapp[.
]mssql.somee.com) and writes the second stage payload to "\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\Trayicos.exe" and launches the payload
Initial looks at the PE file straight up looks like a payload loader of some sorts specially looking at the resource section of the file we can see a data blob with bigger size than usual and an exceptionally high entropy value.
Further analysis indicates the same with a import chain of :
FindResource -> LoadResource -> LockResource -> SizeofResource -> FreeResource
We can clearly conclude the encrypted data block located in the resource section is the 3rd stage payload.
After some dynamic analysis we are able to decrypt the 3rd stage payload.
However we are not finished yet !
Once the 3rd stage payload is decrypted which in turn is revealed as a .NET assembly its loaded in the memory space of the same unmanaged process "TrayIcos.exe" .
Stage 3 (Third stage dropper):
We get a unpacked / obfuscated C# assembly which we dumped during the dynamic analysis of the 2nd stage dropper.
The functionality of the dropper is pretty straight forward payload from resource and then execute entrypoint of the payload.
Final stage includes execution of our crown king Crimson Remote Access Trojan.
Crimson RAT supports basic functionalities a remote access trojan should have like screen capture, screen size enumeration, commands execution, process list, process kill, etc.
However the functionalities differ from variant to variant and are stripped in many samples however the complete list of all functionalities supported by the framework are listed below :
Persistence mechanism is the least notable and extremely basic in nature
C2 communication is implemented using simple TCP protocol with no added encryption / encoding even which is highly disappointing.
