Hunting for secrets from high-profile targets while staying in the shadows
This is the modus operandi of the two malicious components of InvisiMole.
They turn the affected computer into a video camera, letting the attackers see and hear what’s going on in the victim’s office or wherever their device may be.
Uninvited, InvisiMole’s operators access the system, closely monitoring the victim’s activities and stealing the victim’s secrets.
Our telemetry indicates that the malicious actors behind this malware have been active at least since 2013, yet the cyber-espionage tool was never analyzed nor detected until discovered by ESET products on compromised computers in Ukraine and Russia.
The campaign is highly targeted – no wonder the malware has a low infection ratio, with only a few dozen computers being affected.
InvisiMole has a modular architecture, starting its journey with a wrapper DLL, and performing its activities using two other modules that are embedded in its resources.
Both of the modules are feature-rich backdoors, which together give it the ability to gather as much information about the target as possible.
Extra measures are taken to avoid attracting the attention of the compromised user, enabling the malware to reside on the system for a longer period of time.
How the spyware was spread to the infected machines is yet to be determined by further investigation.
All infection vectors are possible, including installation facilitated by physical access to the machine.
The first part of the malware we are looking at is a wrapper DLL, compiled with the Free Pascal Compiler.
From our telemetry, we have observed that this DLL is placed in the Windows folder, masquerading as a legitimate mpr.dll library file with a forged version info resource.
Figure 1 – The wrapper DLL poses as a legitimate mpr.dll library, both by its name and version info
We have not seen a wrapper DLL named differently; however, there are hints in the DLL code that it might be also named fxsst.dll or winmm.dll.
The first way in which the malware can be launched is by hijacking a DLL.
Being placed in the same folder as explorer.exe, the wrapper DLL is loaded during the Windows startup into the Windows Explorer process instead of the legitimate library located in the %windir%\system32 folder.
We have found both 32-bit and 64-bit versions of the malware, which makes this persistence technique functional on both architectures.
As an alternative to DLL hijacking, other loading and persistence methods are possible.
The wrapper DLL exports a function called GetDataLength.
When this function is called, the DLL checks whether it was loaded by the rundll32.exe process with either explorer.exe or svchost.exe as its parent process, and only then does it launch the payload.
This suggests other possible persistence methods – by scheduling a task (i.e.
having svchost.exe as a parent process) or by installation in a startup registry key (explorer.exe being the parent process).
Regardless of the persistence method, the behavior of the malware and of the actual payload is the same in all cases.
The wrapper DLL loads both the modules stored in its resources, named RC2FM and RC2CL, and (if DLL hijacking was used) finally loads the legitimate library into the explorer.exe process, in order not to disrupt the normal operation of the application, and thereby remain hidden.
Figure 2 – Exported functions of the wrapper DLL
The exact date when the malware was compiled is unknown – the recent wrapper DLL samples were tampered with by the malware authors, with the PE timestamps manually set to zero values.
However, during our research, we found an earlier version of the malware with a PE timestamp reading Oct 13, 2013, so the compilation date of the later version is almost surely more recent.
Figure 3 – The compilation timestamp is set to zero in all the latest samples
To increase its level of stealth, the malware protects itself from the eyes of administrators and analysts by encrypting its strings, internal files, configuration data and network communication.
While the RC2FM module uses a handful of custom ciphers, the wrapper DLL and the RC2CL module share one particular routine for all purposes, especially for decrypting other malware modules embedded in the wrapper DLL.
A script that is able to extract the embedded modules RC2FM and RC2CL from the wrapper DLL, using this routine, is available on ESET’s malware-research GitHub repository.
Figure 4 – Encryption routine used across the samples (decompiled and disassembled)
The first, smaller module RC2FM contains a backdoor with fifteen supported commands.
These are executed on the affected computer when so instructed by the attackers.
The module is designed to make various changes to the system but it also offers a bunch of spying commands.
A logging option is implemented throughout the file but the name of the log file is not configured in the analyzed sample.
This suggests that it was only used during the development of the malware.
This module communicates with C&C servers that are either hardcoded in the sample, or updated later by the attackers.
Moreover, the module is able to reach out to the C&C servers even if there is a proxy configured on the infected computer.
If a direct connection is unsuccessful, the module attempts to connect to any of its C&C servers using locally-configured proxies or proxies configured for various browsers (Firefox, Pale Moon, and Opera).
RC2FM can go as far as inspecting the recently executed applications list and look specifically for portable browser executables:
FirefoxPortable.exe
OperaPortable.exe
Run waterfox.exe
OperaAC.exe
Palemoon-Portable.exe
Should the victim use one of these portable browsers with a proxy server configured, the malware can find that in the user’s preferences and use that proxy to communicate with its C&C servers.
C&C communication consists of a series of HTTP GET and POST requests, as shown in Figure 5.
The encrypted request includes a PC identifier and timestamp, and optionally some other data.
It is worth noting that the RC2FM module uses a number of encryption methods (variations of a simple XOR encryption routine), unlike the other InvisiMole parts.
Figure 5 – Example of a request sent to the C&C server by the RC2FM module
After successfully registering the victim with the C&C server, additional data are downloaded, which are to be interpreted on the local computer as backdoor commands.
RC2FM supports commands for listing basic system information and performing simple changes on the system, but also includes a few spyware features.
When required by the attacker, it is capable of remotely activating the microphone on the compromised computer and capturing sounds.
The audio recordings are encoded to MP3 format using a legitimate lame.dll library, which is downloaded and misused by the malware.
Another way in which the malware can interfere with the victim’s privacy is by taking screenshots, which is another of the backdoor commands.
The malware also monitors all fixed and removable drives mapped on the local system.
Whenever a new drive is inserted, it creates a list of all the files on the drive and stores it encrypted in a file.
All of the collected data can ultimately be sent to the attackers, when the appropriate command is issued.
