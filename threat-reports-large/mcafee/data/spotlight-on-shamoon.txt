Our analysis this month has pointed to Shamoon emerging in the Middle East.
We have recently seen a number of similarities that we had highlighted in our earlier blogs (on mcafee.com).
The campaign continues to target organizations in the Middle East from a variety of verticals.
Reports suggest that a further 15 disk-wiping Shamoon incidents have occurred in public and private sectors.
The code for the current revision is almost identical to the original version: Changes include the addition of a victim’s credentials to spread and execute the wiper in a large part of the environment.
In the following screenshot, we can see that the old encoded resource names PKCS12, PKCS7, and X509 are still present in the new variants but not used.
A question that many of us in the industry have asked ourselves is How were the attackers able to gain the credentials from so many victims in the Middle East?
Let’s approach this from the attacker’s view and follow the Cyber Kill Chain steps.
An attack group prepares a plan and identifies the victims it wants to hit to create an impact or make a statement.
The group gathers email addresses and other open-source intelligence as the first step to preparing for the campaign.
They register domains, code backdoors, and prepare for the reconnaissance phase.
When all is tested, the initial attack starts with spear phishing:
The victims receive emails, for example, one like the preceding business proposal.
The email also contains a tempting attachment.
When opening the attachment, some victims saw this:
Any requirement to activate macros before seeing content should set off alarm bells.
Analyzing the document, we received confirmation of our suspicions:
Decoding the obfuscated macro code results in a PowerShell script that proceeds to download a file, a Trojan capable of gathering system information and downloading other tools.
In other cases, we found a backdoor using a PowerShell script to gather information from the system and write to a temporary file.
A code snippet:
We also found a script that creates an instance of Mimikatz, a tool known to dump user credentials from a computer:
CreateMimi1.Bat or CreateMimi2.Bat
When all the data are gathered, the information is uploaded.
To open a command channel, the attackers used, for example, a PowerShell script that launches Powercat, a TCP/IP “Swiss army knife” that works with netcat.
A code example:
The attackers invariably sort the credentials of the victims to gain an indication of the IP range and possible scale of the network.
Depending on the goal of the attack, a selection of victims can be made to serve the cause.
From the original Shamoon code, the current attackers have made several changes:
Added victims’ credentials
Replaced picture from flag to boy
Changed resource language to Yemeni Arabic
Tested samples
In these phases, the actors needed only one or two hosts in the victim’s network as a beachhead to upload the wipers and scripts.
Because the attackers already had valid credentials, no exploitation was needed.
Batch file:
The batch file copies ntertmgr32.exe (one of many filenames of the Shamoon 2 variant) and starts it.
Once the hardcoded date was reached, systems were wiped.
Objective accomplished.
Our analysis of the execution of this attack tells a story about the actors capability and skills.
Their attack precision is very good; they know whom and what to attack, in this case to disrupt and leave a statement.
Their focus is on Windows and they use well-known practices to gather information and credentials, with no zero days.
From a coding perspective, many security industry colleagues have already commented on the sloppy coding practices.
From an operations security perspective—how well are the actors able to hide details that could lead to them?—we noticed that quite a few details are available: email addresses, program database paths, and Yemeni Arabic as the language identifier of almost all the samples, although we discovered one sample with a different language identifier.
Was that on purpose, or a slip by the actor because this was a large campaign?
winappupdater.com
update.winupdater.com
// domain registered on 2016-11-25 by benyamin987@mail.com
hash 146a112cb01cd4b8e06d36304f6bdf7b and bf4b07c7b4a4504c4192bd68476d63b5 were connecting to this site
146a112cb01cd4b8e06d36304f6bdf7b
bf4b07c7b4a4504c4192bd68476d63b5
a96d211795852b6b14e61327bbcc3473
1507A4FDF65952DFA439E32480F42CCF1460B96F
Collection of system information:
“%localappdata%\Microsoft\Windows\Tmp765643.txt” //where Tmp[6digits].txt is the syntax//
Filenames and Locations:
Microsoft\Windows\ccd
Microsoft\Windows\ccd6.exe”
Microsoft\Windows\ssc”
Microsoft\Windows\tss.ps1″
Microsoft\Windows\Tmp9932u1.bat”
Microsoft\Windows\Tmp765643.txt”
Microsoft\Windows\dp.ps1″
Microsoft\Windows\ccd61.ps1
Microsoft\Windows\dp.ps1″
Interesting strings in code samples:
F:\Projects\Bot Fresh\Release\Bot Fresh.pdb
F:\Projects\Bot\Bot\Release\Ism.pdb
G:\Projects\Bot\Bots\Bot5\Release\Ism.pdb
