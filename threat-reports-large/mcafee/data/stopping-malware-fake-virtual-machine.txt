As we explained in a previous post, some advanced malware can detect a virtual environment such as a sandbox to avoid detection and analysis.
Some threats can also detect monitoring tools used for malware analysis.
Often such malware will not execute or change their behavior to appear harmless.
Because some malware uses these tactics, planting fake virtual machine artefacts or fake analysis tools on a system could stop their malicious behavior.
We have created a quick proof of concept (POC) to demonstrate this defensive tactic.
Some malware use a mutex or registry key to avoid re-infecting a machine.
For example, a previous version of Locky used a registry key with the string “locky” to check if the machine was already infected.
This variant also used a basic check to verify if the local language was Russian; if it was, the ransomware did not infect the machine.
With this kind of information, security analysts can proactively configure these artefacts to boost protection against some malicious software.
The following diagram illustrates this concept:
Proof of concept functions
Sandboxes and virtual environments are full of artefacts that betray their analysis environment.
Malware can protect itself against these by running some checks to detect such environments before performing any malicious actions.
Our POC will reproduce a virtual environment on a normal user machine.
It is available at https://github.com/fr0gger/RocProtect-V1.
Creating fake registry keys
A lot of registry keys are created by specific tools or by sandbox emulation.
Using the Windows API RegCreateKeyEx we can create all the (fake) keys normally created by a virtual hypervisor.
The following list shows of few of the potential registry keys that malware can detect:
HKLM\HARDWARE\DEVICEMAP\Scsi\Scsi Port 0\Scsi Bus 0\Target Id 0\Logical Unit Id 0\“Identifier”;“VMWARE”
HKLM\SOFTWARE\VMware, Inc.\VMware Tools
HKLM\HARDWARE\Description\System\ “SystemBiosVersion”;”VMWARE”
HKLM\HARDWARE\Description\System\”SystemBiosVersion”;VBOX
HKLM\SOFTWARE\Oracle\VirtualBox Guest Additions
HKLM\HARDWARE\ACPI\DSDT\VBOX__
The following function explains in more detail the registry key creation process:
