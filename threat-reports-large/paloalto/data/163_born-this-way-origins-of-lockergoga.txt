This Unit 42 blog provides insights into the ransomware attacks referred to as LockerGoga.
The LockerGoga ransomware was first publicly reported in January by Bleeping Computer, which tied the malware to an attack against French engineering company Altran Technologies.
Several variants have since been found in the wild, where they were used in attacks against Norwegian aluminum manufacturer Norsk Hydro and two chemical companies: Hexion and Momentive.
Unit 42 reviewed malware samples from these attacks and found evidence that caused us to question the origin of the threat name.
“LockerGoga” was taken from a string that did not exist anywhere in the code used in the original attack on Altran.
Bleeping Computer reported that the name came from this source code path discovered by MalwareHunterTeam:
X:\work\Projects\LockerGoga\cl-src-last\cryptopp\src\rijndael_simd.cpp for SHA256 bdf36127817413f625d2625d3133760af724d6ad2410bea7297ddc116abc268f
We were able to find this string referenced in earlier ransomware variants identified as Ransom.GoGalocker by Symantec, but not in the sample identified in Bleeping Computer’s report.
To avoid confusion, we will continue to use the LockerGoga name to refence the initial variant and its predecessors.
Palo Alto Networks has identified 31 ransomware samples that are similar in behavior and code to the initial variant.
In this report we will attempt to trace back to the origin of these samples, discuss their evolution, then expose some of their inner working capabilities and even faults.
The earliest known sample of LockerGoga (SHA256: bdf36127817413f625d2625d3133760af724d6ad2410bea7297ddc116abc268f) we found was submitted to VirusTotal on January 24.
We believe this sample was used in the attack on Altran.
We do not know how the ransomware infected Altran’s networks or propagated once there.
Currently LockerGoga does not support any worm-like capabilities that would allow it to self-propagate by infecting additional hosts on a target network.
We have observed LockerGoga moving around a network via the server message block (SMB) protocol, which indicates the actors simply manually copy files from computer to computer.
This sample requires administrative privileges in order to successfully execute, though the specific mechanism for initial code execution is unknown.
Once it executes it seeks to encrypt files on the infected computer and any attached hard drives.
Once it’s fully executed, it leaves a ransom note on the user’s desktop containing an email address to contact presumably for decryption and payment options.
The initial sample was written in the C++ programming language and employs publicly available libraries such as Boost, Cryptopp and regex.
This sample includes a denylist that excludes the following files and directories from encryption:
readme-now.txt
files starting with ntsuser or usrclass
File extensions: .dll, .lnk, .sys, .locked
Microsoft\Windows\burn
dat
log
The malware does not support any self-propagating code to infect other hosts on the network and is signed by a certificate issued in the name MIKL LIMITED, which has been revoked.
The following command line arguments are also supported:
Table 1.
Supported command line arguments
LockerGoga uses the Cryptopp library to implement RSA, as implementing RSA from scratch would be very time consuming and error prone.
To encrypt files, (Strong RSA) RSA-OAEP MGF1(SHA-1) is used.
The RSA public key found in this sample is:
