Some months ago we wrote a blog post about CoinVault.
In that post we explained how we tore the malware apart in order to get to its original code and not the obfuscated one.
So when were contacted recently by the National High Tech Crime Unit (NHTCU) of the Netherlands’ police and the Netherlands’ National Prosecutors Office, who had obtained a database from a CoinVault command & control server (containing IVs, Keys and private Bitcoin wallets), we were able to put our accumulated insight to good use and accelerate the creation of a decryption tool.
We also created a website and started a communications campaign to notify victims that it might be possible to get their data back without paying.
To build the decryption tool we needed to know the following:
Which encryption algorithm was being used?
Which block cipher mode was being used?
And, most importantly, what malware are dealing with?
There was obviously no time for “hardcore” reverse engineering, so the first thing we did was run the malware sample to see what it was doing.
And indeed, just as we thought, it was another CoinVault sample.
The next thing we did was open the executable in a decompiler, where we saw that the same obfuscation method was used as described in the post.
So CoinVault it is.
However, we still didn’t know which encryption algorithm and block cipher mode it was using.
But luckily we have a sandbox!
The nice thing about the sandbox is that it executes the malware, but also has the ability to trace virtually anything.
We can dump files and registry changes but in this case the memory dumps were the most interesting.
We knew from the previous CoinVault samples that the malware was using the RijndaelManaged class, so all we had to do was search in the memory dump for this string.
And here it is.
We see that it still uses AES, although not the 128-bit block size anymore, but the 256-bit one.
Also the block cipher mode has changed from CBC to CFB.
This was all the information we needed to write our decryption tool.
To see if you can decrypt your files for free, please go to https://noransom.kaspersky.com
