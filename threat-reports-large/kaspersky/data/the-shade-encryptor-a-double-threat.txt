A family of ransomware Trojans that encrypts files and adds the extensions “.xtbl” and “.ytbl” emerged in late 2014/early 2015, and quickly established itself among the top three most widespread encryptors in Russia (along with Trojan-Ransom.Win32.Cryakl and Trojan-Ransom.BAT.Scatter).
This threat has been assigned the verdict Trojan-Ransom.Win32.Shade according to Kaspersky Lab’s classification.
The original name given to the encryptor by its creator is not known; other security vendors detect it as Trojan.Encoder.858, Ransom:Win32/Troldesh.
There has been no appreciable evolution of this Trojan over time – only the format of the encrypted file’s name, the C&C server addresses and the RSA keys have been changing.
There are two main methods used to deliver the malware to victims’ computers: spam messages and exploit kits (in particular, NuclearEK).
When delivered via spam, the user receives a letter with a malicious file attached.
The system is infected when the user attempts to open the attachment.
The following file names have been used when spreading Trojan-Ransom.Win32.Shade:
doc_dlea podpisi.com
doc_dlea podpisi.rar
documenti_589965465_documenti.com
documenti_589965465_documenti.rar
documenti_589965465_doc.scr
doc_dlea podpisi.rar
неподтвержден 308853.scr
documenti dlea podpisi 05.08.2015.scr.exe
akt sverki za 17082015.scr
It should be noted that the file name changes for each mass mailing campaign, so the potential file names are not limited to those listed above.
The second delivery mechanism – via exploit kit – is more dangerous because the infection occurs when the victim unwittingly visits a compromised website.
It may be a site belonging to cybercriminals, or a legitimate resource that has been hacked.
In most cases, the user is completely unaware of the danger the website poses.
Malicious code on the website exploits a vulnerability in the browser or a plugin, and the Trojan is then covertly installed in the system.
Unlike the spam delivery method, the victim doesn’t even have to run an executable file.
After Trojan-Ransom.Win32.Shade ends up in the system, it connects to a C&C server located in the Tor network, reports the infection and requests a public RSA-3072 key that is subsequently used to encrypt files (as discussed below).
Should the connection attempt fail, the Trojan chooses one of the 100 public keys that are stored within its body for just such an eventuality.
The Trojan then starts encrypting files.
While scanning for objects to encrypt, it uses the static list of extensions shown in the screenshot below.
When encryption is complete, a menacing image is set as the desktop background:
The Trojan leaves ransom demands in the files README1.txt, …, README10.txt.
The contents of these files are always the same:
However, unlike most other encryptors, Trojan-Ransom.Win32.Shade doesn’t stop there.
It doesn’t terminate its process, but instead starts an infinite loop in which it requests a list from the C&C server containing the URLs of additional malware.
It then downloads that malware and installs it in the system.
This sort of activity is typical of download bots.
We have spotted malware from the following families being downloaded:
Trojan.Win32.CMSBrute (a more detailed description is provided below).
Trojan.Win32.Muref
Trojan.Win32.Kovter
Trojan-Downloader.Win32.Zemot
Below is the code for the download and listening loop:
It is therefore very important to run a complete anti-malware scan of the computer if the Shade encryptor (or the .xtbl, .ytbl files it creates) is detected.
If left untreated, the system will most probably remain infected with several malicious programs downloaded by the encryptor.
Written in C++ using STL and its own classes.
Statically linked with Tor client.
Uses boost (threads), curl, OpenSSL libraries.
Each sample has the URL of a C&C server hardcoded in it.
A total of 10 C&C server addresses were identified in various samples, eight of which are currently active.
All the C&C servers are located in the Tor network.
All strings (including the names of imported functions) are AES encrypted.
They are decrypted when the program starts, then the import table is dynamically populated.
Prior to setting the new desktop background, the old one is saved in the registry.
Typically packed with UPX and an extra packer.
Once unpacked, it is 1817 KB in size.
Creates 10 identical files named README1.txt, …README10.txt on the victim computer, containing ransom demands in Russian and English.
A unique 256-bit AES key is generated to encrypt the contents and the name of each file.
The encryption is done in CBC mode with a zero initialization vector.
Contains 100 public RSA-3072 keys with the public exponent 65537 (A total of 300 different public keys were detected in various samples).
Has the capability of downloading and launching malware.
A unique 256-bit AES key is generated to encrypt the contents and the name of each file.
The encryption is done in CBC mode with a zero initialization vector.
Contains 100 public RSA-3072 keys with the public exponent 65537 (A total of 300 different public keys were detected in various samples).
Has the capability of downloading and launching malware.
The Trojan obtains the computer name (comp_name) with the help of API function GetComputerName, and the number of processes (num_cpu) with the help of API function GetSystemInfo;
Using the serial number of the system volume, it calculates a 32-bit constant and converts it into a HEX string (vol_const);
Obtains data about the OS version (os_version) divided with the symbol “;” (e.g.
“5;1;2600;1;Service Pack 3”);
Creates the string comp_namenum_cpuvol_constos_version;
Calculates the MD5 hash of this string;
Converts the MD5 hash into a HEX string and uses its first 20 characters as the computer’s ID.
When the computer ID has been generated, the Trojan attempts to connect to the C&C server located in the Tor network, sends the computer ID to it and receives the public RSA key in return.
If the connection attempt fails, one of the 100 public RSA keys hardcoded in the Trojan body is selected.
The algorithm AES 256 in CBC mode is used to encrypt files.
For each encrypted file, two random 256-bit AES keys are generated: one is used to encrypt the file’s contents, while the other is used to encrypt the file name.
These keys are placed in the utility structure key_data, which is then encrypted with the selected RSA key (so it takes up 384 bytes after encryption) and placed at the end of the encrypted file:
In C syntax, this stricture can be written as follows:
The Trojan attempts to rename the encrypted file using the result of the calculation Base64(AES_encrypt(original file name)).xtbl (e.g.
ArSxrr+acw970LFQw.xtbl).
Failing this, it simply adds the extension .ytbl to the original file name.
In later versions, the Trojan adds the infected computer’s ID and then the extension .xtbl to the file name, e.g.
ArSxrr+acw970LFQw.043C17E72A1E91C6AE29.xtbl.
The address of one C&C server is contained in the Trojan’s body.
The servers are located in the Tor network and communication is established using a Tor client that is statically linked to the Trojan.
The sample sends the following requests to the C&C server:
Request for a new public RSA key: GET http://<server>.onion/reg.php?i=ID&b=build&v=version&ss=stage ID – the ID of the infected computer; build – the ID of the specific Trojan sample; version – the Trojan’s version (we encountered versions 1 and 2); stage – the stage of encryption – request for a new public key or a message about completing file encryption.
Error message: GET http://<server>.onion/err.php?i=ID&b=build&v=version&err=error error – a base64-coded message about an error during encryption.
Report about the encryptor’s current stage: GET http://<server>.onion/prog.php?i=ID&b=build&v=version&ss=stage&c=count&f=finish count – the current count of encrypted files; finish – the flag showing that encryption has completed.
