Jumcar is the name we have given to a family of malicious code developed in Latin America particularly in Peru and which, according to our research, has been deploying attack maneuvers since March 2012.
After six months of research we can now detail the specific features of Jumcar.
We will communicate these over the following days.
Essentially the main purpose of the malware is stealing financial information from Latin American users who use the home-banking services of major banking companies.
Of these, 90% are channeled in Peru through phishing strategies based on cloning the websites of six banks.
Some variants of the Jumcar family also target two banks in Chile, and another in Costa Rica.
Percentage of the phishing attacks by countries
We know that in Latin America the cyber-criminal culture is expanding at great speed.
This is evidenced by some of the botnets managed through crimeware developed in the region, which also have the ability to generate customized malware.
The botnets we have discovered over the past two years have this capability and we have warned about them at different times.
These include vOlk-Botnet, UELP, Chimba-Botnet, AlbaBotnet and PiceBOT.
However, the Jumcar family of malware has completely different characteristics and very particular components compared to those previously mentioned.
They share the same goal: to steal financial information; and a common initial infection strategy: email associated with a strong visual social engineering based on false messages.
From a technical perspective, for the moment all variations of this family of malware are developed in .NET, while the usual pattern around malware developed in Latin America (excluding Brazil) is developing malicious projects in VisualBasic.
Likewise, and contrary to common patterns in Latin American malware that obfuscate part of his code through simple hexadecimal conversions, all the Jumcar variants use symmetric and asymmetric cryptographic algorithms to hide the functionality specified in the source code.
For this, the malware uses the following classes: System.Security.Cryptography.TripleDES, System.Security.Cryptography.Aes y System.Security.Cryptography.RSA.
The images below highlight the difference in the malware obfuscation implemented in the most popular botnets in the region, compared to the obfuscation used by Jumcar:
Example of hexadecimal conversion in the configuration parameters of malicious code propagated through S.A.P.Z., vOlk-Botnet, PiceBOT and AlbaBotnet
Configuration parameters of the Jumcar malware encrypted with RSA
The patterns that distinguish this family of malware are:
Campaigns to spread and infect are always by email.
The social engineering strategy is based on the Facebook image in the email message and in the name of the file downloaded (e.g.
: facebook.exe).
Also in emails supposedly issued by Peruvian banks.
The size of the variants does not exceed 44kB.
The icons used also concern Facebook in 80% of cases; the other 20% involve icons that hint at a mobile phone company and one percent to the native icon of programming languages .NET and VB.
That is, 8 out of 10 samples used a Facebook icon image.
Campaigns to spread and infect are always by email.
The social engineering strategy is based on the Facebook image in the email message and in the name of the file downloaded (e.g.
: facebook.exe).
Also in emails supposedly issued by Peruvian banks.
The size of the variants does not exceed 44kB.
The icons used also concern Facebook in 80% of cases; the other 20% involve icons that hint at a mobile phone company and one percent to the native icon of programming languages .NET and VB.
That is, 8 out of 10 samples used a Facebook icon image.
The social engineering strategy is based on the Facebook image in the email message and in the name of the file downloaded (e.g.
: facebook.exe).
Also in emails supposedly issued by Peruvian banks.
The size of the variants does not exceed 44kB.
The icons used also concern Facebook in 80% of cases; the other 20% involve icons that hint at a mobile phone company and one percent to the native icon of programming languages .NET and VB.
That is, 8 out of 10 samples used a Facebook icon image.
The size of the variants does not exceed 44kB.
The icons used also concern Facebook in 80% of cases; the other 20% involve icons that hint at a mobile phone company and one percent to the native icon of programming languages .NET and VB.
That is, 8 out of 10 samples used a Facebook icon image.
The icons used also concern Facebook in 80% of cases; the other 20% involve icons that hint at a mobile phone company and one percent to the native icon of programming languages .NET and VB.
That is, 8 out of 10 samples used a Facebook icon image.
