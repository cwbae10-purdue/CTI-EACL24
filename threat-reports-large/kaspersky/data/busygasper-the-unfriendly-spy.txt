In early 2018 our mobile intruder-detection technology was triggered by a suspicious Android sample that, as it turned out, belonged to an unknown spyware family.
Further investigation showed that the malware, which we named BusyGasper, is not all that sophisticated, but demonstrates some unusual features for this type of threat.
From a technical point of view, the sample is a unique spy implant with stand-out features such as device sensors listeners, including motion detectors that have been implemented with a degree of originality.
It has an incredibly wide-ranging protocol – about 100 commands – and an ability to bypass the Doze battery saver.
As a modern Android spyware it is also capable of exfiltrating data from messaging applications (WhatsApp, Viber, Facebook).
Moreover, BusyGasper boasts some keylogging tools – the malware processes every user tap, gathering its coordinates and calculating characters by matching given values with hardcoded ones.
The sample has a multicomponent structure and can download a payload or updates from its C&C server, which happens to be an FTP server belonging to the free Russian web hosting service Ucoz.
It is noteworthy that BusyGasper supports the IRC protocol which is rarely seen among Android malware.
In addition, the malware can log in to the attacker’s email inbox, parse emails in a special folder for commands and save any payloads to a device from email attachments.
This particular operation has been active since approximately May 2016 up to the present time.
While looking for the infection vector, we found no evidence of spear phishing or any of the other common vectors.
But some clues, such as the existence of a hidden menu for operator control, point to a manual installation method – the attackers used physical access to a victim’s device to install the malware.
This would explain the number of victims – there are less than 10 of them and according to our detection statistics, they are all located in the Russia.
Intrigued, we continued our search and found more interesting clues that could reveal some detailed information about the owners of the infected devices.
Several TXT files with commands on the attacker’s FTP server contain a victim identifier in the names that was probably added by the criminals:
Some of them sound like Russian names: Jana, SlavaAl, Nikusha.
As we know from the FTP dump analysis, there was a firmware component from ASUS firmware, indicating the attacker’s interest in ASUS devices, which explains the victim file name that mentions “ASUS”.
Information gathered from the email account provides a lot of the victims’ personal data, including messages from IM applications.
Among the other data gathered were SMS banking messages that revealed an account with a balance of more than US$10,000.But as far as we know, the attacker behind this campaign is not interested in stealing the victims’ money.
We found no similarities to commercial spyware products or to other known spyware variants, which suggests BusyGasper is self-developed and used by a single threat actor.
At the same time, the lack of encryption, use of a public FTP server and the low opsec level could indicate that less skilled attackers are behind the malware.
Here is the meta information for the observed samples, certificates and hardcoded version stamps:
It’s interesting that the issuer “Sun” matches the “Sun1” and “Sun2” identifiers of infected devices from the FTP server, suggesting they may be test devices.
The analyzed implant has a complex structure, and for now we have observed two modules.
The first module, which was installed on the targeted device, could be controlled over the IRC protocol and enable deployment of other components by downloading a payload from the FTP server:
@install command
As can be seen from the screenshot above, a new component was copied in the system path, though that sort of operation is impossible without root privileges.
At the time of writing we had no evidence of an exploit being used to obtain root privileges, though it is possible that the attackers used some unseen component to implement this feature.
Here is a full list of possible commands that can be executed by the first module:
The implant uses a complex intent-based communication mechanism between its components to broadcast commands:
Approximate graph of relationships between BusyGasper components
This module writes a log of the command execution history to the file named “lock”, which is later exfiltrated.
Below is a fragment of such a log:
Log with specified command
Log files can be uploaded to the FTP server and sent to the attacker’s email inbox.
It’s even possible to send log messages via SMS to the attacker’s number.
As the screenshot above shows, the malware has its own command syntax that represents a combination of characters while the “#” symbol is a delimiter.
A full list of all possible commands with descriptions can be found in Appendix II below.
The malware has all the popular capabilities of modern spyware.
Below is a description of the most noteworthy:
The implant is able to spy on all available device sensors and to log registered events.
Moreover, there is a special handler for the accelerometer that is able to calculate and log the device’s speed: This feature is used in particular by the command “tk0” that mutes the device, disables keyguard, turns off the brightness, uses wakelock and listens to device sensors.
This allows it to silently execute any backdoor activity without the user knowing that the device is in an active state.
As soon as the user picks up the device, the implant will detect a motion event and execute the “tk1” and “input keyevent 3” commands.
“tk1” will disable all the effects of the “tk0” command, while “input keyevent 3” is the shell command that simulates the pressing of the ‘home’ button so all the current activities will be minimized and the user won’t suspect anything.
The implant is able to spy on all available device sensors and to log registered events.
Moreover, there is a special handler for the accelerometer that is able to calculate and log the device’s speed:
This feature is used in particular by the command “tk0” that mutes the device, disables keyguard, turns off the brightness, uses wakelock and listens to device sensors.
This allows it to silently execute any backdoor activity without the user knowing that the device is in an active state.
As soon as the user picks up the device, the implant will detect a motion event and execute the “tk1” and “input keyevent 3” commands.
“tk1” will disable all the effects of the “tk0” command, while “input keyevent 3” is the shell command that simulates the pressing of the ‘home’ button so all the current activities will be minimized and the user won’t suspect anything.
Location services to enable (GPS/network) tracking:
The email command and control protocol.
The implant can log in to the attackers email inbox, parse emails for commands in a special “Cmd” folder and save any payloads to a device from email attachments.
Accessing the “Cmd” folder in the attacker’s email box Moreover, it can send a specified file or all the gathered data from the victim device via email.
Accessing the “Cmd” folder in the attacker’s email box
Moreover, it can send a specified file or all the gathered data from the victim device via email.
Emergency SMS commands.
If an incoming SMS contains one of the following magic strings: ” 2736428734″ or ” 7238742800″ the malware will execute multiple initial commands:
Keylogging is implemented in an original manner.
Immediately after activation, the malware creates a textView element in a new window with the following layout parameters:
All these parameters ensure the element is hidden from the user.
Then it adds onTouchListener to this textView and is able to process every user tap.
Interestingly, there is an allowlist of tapped activities:
The listener can operate with only coordinates, so it calculates pressed characters by matching given values with hardcoded ones:
Additionally, if there is a predefined command, the keylogger can make a screenshot of the tapped display area:
There is a hidden menu (Activity) for controlling implant features that looks like it was created for manual operator control.
To activate this menu the operator needs to call the hardcoded number “9909” from the infected device:
A hidden menu then instantly appears on the device display:
The operator can use this interface to type any command for execution.
It also shows a current malware log.
The attackers used ftp://213.174.157.151/ as a command and control server.
The IP belongs to the free Russian web hosting service Ucoz.
SuperSU config fragment for implant components and the busybox tool supersu.cfg:
This config allows the implant to use all root features silently.
Content of bdata.xml file:
It can be added to the /system/etc/sysconfig/ path to allowlist specified implant components from the battery saving system.
A Gmail account with password is mentioned in the sample’s code:
It contains the victim’s exfiltrated data and “cmd” directory with commands for victim devices.
9E005144EA1A583531F86663A5F14607 18ABE28730C53DE6D9E4786C7765C3D8 2560942BB50EE6E6F55AFC495D238A12 6C246BBB40B7C6E75C60A55C0DA9E2F2 7C8A12E56E3E03938788B26B84B80BD6 9FFC350EF94EF840728564846F2802B0 BDE7847487125084F9E03F2B6B05ADC3
ftp://213.174.157.151/
These values are valid for the most recently observed version (v3.18s).
