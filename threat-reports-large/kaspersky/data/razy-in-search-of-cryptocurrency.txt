Last year, we discovered malware that installs a malicious browser extension on its victim’s computer or infects an already installed extension.
To do so, it disables the integrity check for installed extensions and automatic updates for the targeted browser.
Kaspersky Lab products detect the malicious program as Trojan.Win32.Razy.gen – an executable file that spreads via advertising blocks on websites and is distributed from free file-hosting services under the guise of legitimate software.
Razy serves several purposes, mostly related to the theft of cryptocurrency.
Its main tool is the script main.js that is capable of:
Searching for addresses of cryptocurrency wallets on websites and replacing them with the threat actor’s wallet addresses
Spoofing images of QR codes pointing to wallets
Modifying the web pages of cryptocurrency exchanges
Spoofing Google and Yandex search results
The Trojan Razy ‘works’ with Google Chrome, Mozilla Firefox and Yandex Browser, though it has different infection scenarios for each browser type.
For Firefox, the Trojan installs an extension called ‘Firefox Protection’ with the ID {ab10d63e-3096-4492-ab0e-5edcf4baf988} (folder path: “%APPDATA%\Mozilla\Firefox\Profiles\.default\Extensions\{ab10d63e-3096-4492-ab0e-5edcf4baf988}”).
For the malicious extension to start working, Razy edits the following files:
“%APPDATA%\Mozilla\Firefox\Profiles\.default\prefs.js”,
“%APPDATA%\Mozilla\Firefox\Profiles\.default\extensions.json”,
“%PROGRAMFILES%\Mozilla Firefox\omni.js”.
The Trojan edits the file ‘%APPDATA%\Yandex\YandexBrowser\Application\\browser.dll’ to disable extension integrity check.
It renames the original file ‘browser.dll_’ and leaves it in the same folder.
To disable browser updates, it creates the registry key ‘HKEY_LOCAL_MACHINE\SOFTWARE\Policies\YandexBrowser\UpdateAllowed” = 0 (REG_DWORD).
Then the extension Yandex Protect is installed to folder ‘%APPDATA%\Yandex\YandexBrowser\User Data\Default\Extensions\acgimceffoceigocablmjdpebeodphgc\6.1.6_0’.
The ID acgimceffoceigocablmjdpebeodphgc corresponds to a legitimate extension for Chrome called Cloudy Calculator, version 6.1.6_0.
If this extension has already been installed on the user’s device in Yandex Browser, it is replaced with the malicious Yandex Protect.
Razy edits the file ‘%PROGRAMFILES%\Google\Chrome\Application\\chrome.dll’ to disable the extension integrity check.
It renames the original chrome.dll file chrome.dll_ and leaves it in the same folder.
It creates the following registry keys to disable browser updates:
“HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Google\Update\AutoUpdateCheckPeriodMinutes” = 0 (REG_DWORD)
“HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Google\Update\DisableAutoUpdateChecksCheckboxValue” = 1 (REG_DWORD)
“HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Google\Update\InstallDefault” = 0 (REG_DWORD)
“HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Google\Update\UpdateDefault” = 0 (REG_DWORD)
We have encountered cases where different Chrome extensions were infected.
One extension in particular is worth mentioning: Chrome Media Router is a component of the service with the same name in browsers based on Chromium.
It is present on all devices where the Chrome browser is installed, although it is not shown in the list of installed extensions.
During the infection, Razy modified the contents of the folder where the Chrome Media Router extension was located: ‘%userprofile%\AppData\Local\Google\Chrome\User Data\Default\Extensions\pkedcjkdefgpdelpbcmbmeomcjbeemfm’.
Irrespective of the targeted browser type, Razy added the following scripts it brought along to the folder containing the malicious script: bgs.js, extab.js, firebase-app.js, firebase-messaging.js and firebase-messaging-sw.js.
The file manifest.json was created in the same folder or was overwritten to ensure these scripts get called.
Left: list of files of the original Chrome Media Router extension.
Right: list of files of the modified Chrome Media Router extension.
The scripts firebase-app.js, firebase-messaging.js and firebase-messaging-sw.js are legitimate.
They belong to the Firebase platform and are used to send statistics to the malicious actor’s Firebase account.
The scripts bgs.js and extab.js are malicious and are obfuscated with the help of the tool obfuscator.io.
The former sends statistics to the Firebase account; the latter (extab.js) inserts a call to the script i.js with parameters tag=&did=&v_tag=&k_tag= into each page visited by the user.
In the above example, the script i.js is distributed from the web resource gigafilesnote.com (gigafilesnote.com/i.js?tag=&did=&v_tag=&k_tag=).
In other cases, similar scripts were detected in the domains apiscr.com, happybizpromo.com and archivepoisk-zone.info.
The script i.js modifies the HTML page, inserts advertising banners and video clips, and adds adverts into Google search results.
YouTube page with banners added by the script i.js
The culmination of the infection is main.js – a call to the script is added to each page visited by the user.
Fragment of the script i.js code that inserts the script main.js to web pages.
The script main.js is distributed from the addresses:
Nolkbacteria.info/js/main.js?_=
2searea0.info/js/main.js?_=
touristsila1.info/js/main.js?_=
solkoptions.host/js/main.js?_=
The script main.js is not obfuscated and its capabilities can be seen from the function names.
The screenshot above shows the function findAndReplaceWalletAddresses that searches for Bitcoin and Ethereum wallets and replaces them with the addresses of the threat actor’s wallets.
Notably, this function works on almost all pages except those located on Google and Yandex domains, as well as on popular domains like instagram.com and ok.ru.
Images of QR codes that point to wallets also get substituted.
The substitution occurs when the user visits the web resources gdax.com, pro.coinbase.com, exmo.
*, binance.
* or when an element with src=’/res/exchangebox/qrcode/’ is detected on the webpage.
As well as the functionality described above, main.js modifies the webpages of the cryptocurrency exchanges EXMO and YoBit.
The following script calls are added to the pages’ codes:
/js/exmo-futures.js?_= – when exmo.
*/ru/* pages are visited
/js/yobit-futures.js?_= – when yobit.
*/ru/* pages are visited
where is one of the domains nolkbacteria.info, 2searea0.info, touristsila1.info, or archivepoisk-zone.info.
These scripts display fake messages to the user about “new features” in the corresponding exchanges and offers to sell cryptocurrency at above market rates.
In other words, users are persuaded to transfer their money to the cybercriminal’s wallet under the pretext of a good deal.
Example of a scam message on the EXMO website
