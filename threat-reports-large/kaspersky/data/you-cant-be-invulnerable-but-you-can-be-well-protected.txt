Software vulnerabilities are one of those problems that potentially affect all users.
A vulnerability is a fault in a program’s implementation that can be used by attackers to gain unauthorized access to data, inject malicious code or put a system out of operation.
In most cases, vulnerabilities arise from a lack of attention to fine details at the design stage rather than programming errors.
Sometimes a system can seem virtually invulnerable at the design stage, but then, at some point, a new technology arises and hackers prove that the system can be successfully attacked.
A notable example is DES – a symmetric-key encryption algorithm developed in 1975, which was considered bulletproof at the time.
However, in 1990 it was successfully broken in 39 days using an enormous computer network.
A supercomputer built in 1998 succeeded in breaking DES in less than three days.
Continually testing popular software to identify vulnerabilities and releasing patches to close any vulnerabilities found is part of a program’s normal lifecycle.
The more sophisticated and popular the program the higher the chances of vulnerabilities being found in it.
Most developers try to close any vulnerabilities found in their products in a timely manner.
They analyze their software independently or with the help of external experts.
However, third-party researchers also hunt for vulnerabilities.
Some do this to improve the overall level of security online.
Others are paid to search for vulnerabilities.
Still others prefer to sell information on any vulnerabilities they discover on the black market.
They can do this because information on new vulnerabilities is valuable for cybercriminals.
If a researcher finds a flaw in a system and proves that it can be exploited in practice (that is, if he writes an exploit), he can make tens of thousands of dollars on the black market.
There is an entire sector of the cybercriminal underworld that specializes in finding and selling vulnerabilities.
Luckily, this business does not operate on a mass scale.
One reason for this is that not all vulnerabilities can be exploited in the real world.
A combination of different conditions is often needed to be able to do real harm and the chances of these combinations arising are not very high.
A second reason is that it takes a highly skilled programmer to write an effective exploit, and there are not many of them around.
One more option for making money on vulnerabilities is to sell them to third-party companies that, at first glance, seem to have nothing to do with crime.
This is what some researchers do.
However, these companies may be involved in creating spyware for governments or special services, so the vulnerabilities will still be used to illegitimately manipulate information systems.
Moreover, it turns out that the security of such companies is not always as good as it ought to be, so occasionally external parties are able to gain access to their knowledge, with dire consequences.
Idealists, who search for vulnerabilities for the sake of universal security, face a dilemma.
On the one hand, the later they publicly announce their discovery, the more time the developers have to fix the problem.
On the other, the earlier they publish the information the sooner users will learn about the danger posed by the vulnerability.
In theory, cybercriminals might also discover the vulnerability and immediately take advantage of it.
It should also be kept in mind that disclosing the information will inevitably result in attempts to abuse the newly discovered vulnerability.
Sometimes, attacks can start within an hour of making information about a vulnerability public.
This is what happened, for example, after the Shellshock disclosure.
An exploit is a program or code fragment that uses vulnerabilities to attack a computing system.
In some cases, an exploit is used on a mass scale – that is, cybercriminals try to use it to attack a broad range of systems.
In such cases, vulnerabilities in popular software (such as the Adobe Flash Player) are exploited to deliver payloads to user machines.
This is commonly done via so-called drive-by attacks that attempt to download malicious code to the computers of all users visiting an infected website.
Sometimes cybercriminals develop targeted attacks.
They analyze the software used by a particular company and write targeted exploits for those specific programs.
One such highly tailored attack was carried out as part of the Duqu 2.0 APT.
The ‘useful’ life of exploits can vary.
Some are used for years, even though developers release patches that close the relevant vulnerabilities.
This is because some users are in no hurry to install those patches.
According to Kaspersky Lab data, today cybercriminals extensively use exploits for the vulnerabilities listed below:
