Interactivity is a security system feature that implies interaction with the attacker and their tools as well as an impact on the attack scenario depending on the attacker’s actions.
For example, introducing junk search results to confuse the vulnerability scanners used by cybercriminals is interactive.
As well as causing problems for the cybercriminals and their tools, these methods have long been used by researchers to obtain information about the fraudsters and their goals.
There is a fairly clear distinction between interactive and “offensive” protection methods.
The former imply interaction with attackers in order to detect them inside the protected infrastructure, divert their attention and lead them down the wrong track.
The latter may include all the above plus exploitation of vulnerabilities on the attackers’ own resources (so-called “hacking-back”).
Hacking-back is not only against the law in many countries (unless the defending side is a state organization carrying out law enforcement activities) it may also endanger third parties, such as users’ computers compromised by cybercriminals.
The use of interactive protection methods that don’t break the law and that can be used in an organization’s existing IT security processes make it possible not only to discover if there is an intruder inside the infrastructure but also to create a threat profile.
One such approach is Threat Deception – a set of methods, specialized solutions and processes that have long been used by researchers to analyze threats.
In our opinion, this approach can also be used to protect valuable data inside the corporate network from targeted attacks.
Despite the abundance of technology and specialized solutions to protect corporate networks, information security incidents continue to occur even in large organizations that invest lots of money to secure their information systems.
Part of the reason for these incidents is the fact that the architecture of automated security solutions, based on identifying patterns in general traffic flows or monitoring a huge number of endpoints, will sooner or later fail to recognize an unknown threat or a criminal stealing valuable data from the infrastructure.
This may occur, for example, if the attacker has studied the specific features of a corporate security system in advance and identified a way of stealing valuable data that will go unnoticed by security solutions and will be lost among the legitimate operations of other users.
nother reason is the fact that APT attacks differ from other types of attacks: in terms of target selection and pinpoint execution, they are similar to surgical strikes, rather than the blanket bombing of mass attacks.
The organizers of targeted attacks carefully study the targeted infrastructure, identifying gaps in configuration and vulnerabilities that can be exploited during an attack.
With the right budget, an attacker can even deploy the products and solutions that are installed in the targeted corporate network on a testbed.
Any vulnerabilities or flaws identified in the configuration may be unique to a specific victim.
This allows cybercriminals to go undetected on the network and steal valuable data for long periods of time.
To protect against an APT, it is necessary not only to combat the attacker’s tools (utilities to analyze security status, malicious code, etc.)
but to use specific behavioral traits on the corporate network to promptly detect their presence and prevent any negative consequences that may arise from their actions.
Despite the fact that the attacker usually has enough funds to thoroughly examine the victim’s corporate network, the defending side still has the main advantage – full physical access to its network resources.
And it can use this to create its own rules on its own territory for hiding valuable data and detecting an intruder.
After all, “locks only keep an honest person honest,” but with a motivated cybercriminal a lock alone is not enough – a watchdog is required to notify the owner about a thief before he has time to steal something.
In our opinion, in addition to the obligatory conventional methods and technologies to protect valuable corporate information, the defensive side needs to build interactive security systems in order to get new sources of information about the attacker who, for one reason or another, has been detected inside the protected corporate network.
Interactivity in a security system implies a reaction to the attacker’s actions.
That reaction, for instance, may be the inclusion of the attacker’s resources to a black list (e.g.
the IP address of the workstations from which the attack is carried out) or the isolation of compromised workstations from other network resources.
An attacker who is looking for valuable data within a corporate network may be deliberately misled, or the tools used by the attacker, such as vulnerability scanners, could be tricked into leading them in the wrong direction.
Let’s assume that the defending side has figured out all the possible scenarios where the corporate network can be compromised and sets traps on the protected resource:
a special tool capable of deceiving automated vulnerability scanners and introducing all sorts of “junk” (information about non-existent services or vulnerabilities, etc.)
in reports;
a web scenario containing a vulnerability that, when exploited, leads the attacker to the next trap (described below);
a pre-prepared section of the web resource that imitates the administration panel and contains fake documents.
How can these traps help?
Below is a simple scenario showing how a resource with no special security measures can be compromised:
The attacker uses a vulnerability scanner to find a vulnerability on the server side of the protected infrastructure, for example, the ability to perform an SQL injection in a web application.
The attacker successfully exploits this vulnerability on the server side and gains access to the closed zone of the web resource (the administration panel).
The attacker uses the gained privileges to study the inventory of available resources, finds documents intended for internal use only and downloads them.
Let’s consider the same scenario in the context of a corporate network where the valuable data is protected using an interactive system:
The attacker searches for vulnerabilities on the server side of the protected infrastructure using automated means (vulnerability scanner and directory scanner).
Because the defending side has pre-deployed a special tool to deceive scanning tools, the attacker has to spend time analyzing the scan results, after which the attacker finds a vulnerability – the trap on the server side of the protected infrastructure.
The attacker successfully exploits the detected vulnerability and gains access to the closed zone of the web resource (the administration panel).
The attempt to exploit the vulnerability is recorded in the log file, and a notification is sent to the security service team.
The attacker uses the gained privileges to study the inventory of available resources, finds the fake documents and downloads them.
The downloaded documents contain scripts that call the servers controlled by the defending side.
The parameters of the call (source of the request, time, etc.)
are recorded in the log file.
This information can then be used for attacker attribution (what type of information they are interested in, where the workstations used in the attack are located, the subnets, etc.)
and to investigate the incident.
Currently, in order to strengthen protection of corporate networks the so-called Threat Deception approach is used.
The term ‘deception’ comes from the military sphere, where it refers to a combination of measures aimed at misleading the enemy about one’s presence, location, actions and intentions.
In IT security, the objective of this interactive system of protection is to detect an intruder inside the corporate network, identifying their attributes and ultimately removing them from the protected infrastructure.
The threat deception approach involves the implementation of interactive protection systems based on the deployment of traps (honeypots) in the corporate network and exploiting specific features of the attacker’s behavior.
In most cases, honeypots are set to divert the attacker’s attention from the truly valuable corporate resources (servers, workstations, databases, files, etc.).
The use of traps also makes it possible to get information about any interaction between the attacker and the resource (the time interactions occur; types of data attracting the attacker’s attention, toolset used by the attacker, etc.
).
However, it’s often the case that a poorly deployed trap inside a corporate network will not only be successfully detected and bypassed by the attackers but can serve as an entry point to genuine workstations and servers containing valuable information.
Incorrect implementation of a honeypot in the corporate network can be likened to building a small house next to a larger building containing valuable data.
The smaller house is unlikely to divert the attention of the attacker; they will know where the valuable information is and where to look for the “key” to access it.
Simply installing and configuring honeypots is not enough to effectively combat cybercriminals; a more nuanced approach to developing scenarios to detect targeted attacks is required.
At the very least, it is necessary to carry out an expert evaluation of the attacker’s potential actions, to set honeypots so that the attacker cannot determine which resources (workstations, files on workstations and servers, etc.)
are traps and which are not, and to have a plan for dealing with the detected activity.
Correct implementation of traps and a rapid response to any events related to them make it possible to build an infrastructure where almost any attacker will lose their way (fail to find the protected information and reveal their presence).
Getting information about a cybercriminal in the corporate network enables the defending side to take measures to protect their valuable data and eliminate the threat:
to send the attacker in the wrong direction (e.g., to a dedicated subnet), and thereby concealing valuable resources from their field of view, as well as obtaining additional information about the attacker and their tools, which can be used to investigate the incident further;
to identify compromised resources and take all necessary measures to eliminate the threat (e.g., to isolate infected workstations from the rest of the resources on the corporate network);
to reconstruct the chronology of actions and movements of the attacker inside the corporate network and to define the entry points so that they can be eliminated.
The attacker has an advantage over the defender, because they have the ability to thoroughly examine their victim before carrying out an attack.
The victim doesn’t know where the attack will come from or what the attacker is interested in, and so has to protect against all possible attack scenarios, which requires a significant amount of time and resources.
Implementation of the Threat Deception approach gives the defending side an additional source of information on threats thanks to resource traps.
The approach also minimizes the advantage enjoyed by the attacker due to both the early detection of their activity and the information obtained about their profile that enables timely measures to be taken to protect valuable data.
It is not necessary to use prohibited “offensive security” methods, which could make the situation worse for the defending side if law enforcement agencies get involved in investigating the incident.
Interactive security measures that are based on deceiving the attacker will only gain in popularity as the number of incidents in the corporate and public sector increases.
Soon, systems based on the Threat Deception approach will become not just a tool of the researchers but an integral part of a protected infrastructure and yet another source of information about incidents for security services.
If you’re interested in implementing the Threat Deception concept described in the post on your corporate network, please complete the form below:
