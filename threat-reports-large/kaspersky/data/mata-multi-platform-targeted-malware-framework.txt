As the IT and OT environment becomes more complex, adversaries are quick to adapt their attack strategy.
For example, as users’ work environments diversify, adversaries are busy acquiring the TTPs to infiltrate systems.
Recently, we reported to our Threat Intelligence Portal customers a similar malware framework that internally we called MATA.
The MATA malware framework possesses several components, such as loader, orchestrator and plugins.
This comprehensive framework is able to target Windows, Linux and macOS operating systems.
The first artefacts we found relating to MATA were used around April 2018.
After that, the actor behind this advanced malware framework used it aggressively to infiltrate corporate entities around the world.
We identified several victims from our telemetry and figured out the purpose of this malware framework.
The Windows version of MATA consists of several components.
According to our telemetry, the actor used a loader malware to load the encrypted next-stage payload.
We’re not sure that the loaded payload is the orchestrator malware, but almost all victims have the loader and orchestrator on the same machine.
Component of the Windows version of MATA
This loader takes a hardcoded hex-string, converts it to binary and AES-decrypts it in order to obtain the path to the payload file.
Each loader has a hard-coded path to load the encrypted payload.
The payload file is then AES-decrypted and loaded.
From the loader malware found on one of the compromised victims, we discovered that the parent process which executes the loader malware is the “C:\Windows\System32\wbem\WmiPrvSE.exe” process.
The WmiPrvSE.exe process is “WMI Provider Host process”, and it usually means the actor has executed this loader malware from a remote host to move laterally.
Therefore, we assess that the actor used this loader to compromise additional hosts in the same network.
We discovered the orchestrator malware in the lsass.exe process on victims’ machines.
This orchestrator malware loads encrypted configuration data from a registry key and decrypts it with the AES algorithm.
Unless the registry value exists, the malware uses hard-coded configuration data.
The following is a configuration value example from one orchestrator malware sample:
