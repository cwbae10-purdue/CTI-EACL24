Turla, also known as Venomous Bear, Waterbug, and Uroboros, is a Russian speaking threat actor known since 2014, but with roots that go back to 2004 and earlier.
It is a complex cyberattack platform focused predominantly on diplomatic and government-related targets, particularly in the Middle East, Central and Far East Asia, Europe, North and South America and former Soviet bloc nations.
2019 has seen the Turla actor actively renew its arsenal.
Its developers are still using a familiar coding style, but they’re creating new tools.
Here we’ll tell you about several of them, namely “Topinambour” (aka Sunchoke – the Jerusalem artichoke) and its related modules.
We didn’t choose to name it after a vegetable; the .NET malware developers named it Topinambour themselves.
The new modules were used in an active campaign that started at the beginning of 2019.
As usual, the actor targeted governmental entities.
The role of the .NET module is to deliver the known KopiLuwak JavaScript Trojan.
Moreover, this actor now also has a heavily obfuscated PowerShell Trojan that is similar to KopiLuwak.
Among the control servers there are several legitimate but compromised WordPress websites with the actor’s .php scripts on them.
This time, the developers left some Easter eggs for the targets and researchers.
The .NET modules include amusing strings such as “TrumpTower” as an initial vector for RC4 encryption.
“RocketMan!” (probably a reference to Donald Trump’s nickname for Kim Jong Un) and “MiamiBeach” serve as the first beacon messages from the victim to the control server.
To deliver all this to targets, the operators use legitimate software installers infected with the Topinambour dropper.
These could be tools to circumvent internet censorship, such as “Softether VPN 4.12” and “psiphon3”, or Microsoft Office “activators”.
The dropper contains a tiny .NET shell that will wait for Windows shell commands from the operators.
Using this and SMB shares on rented virtual private servers (VPS), the campaign operators spread the next-stage modules using just “net use” and “copy” Windows shell commands.
It’s hard to believe, but SMB still works through public networks.
These campaign-related VPSs are located in South Africa.
Interestingly, their external IP addresses start with “197.168”.
Possibly these first two bytes are there to mimic LAN addresses that start with “192.168”.
Lateral movements in the target’s infrastructure show how familiar the campaign operators are with the IPv6 protocol.
Along with IPv4 they use the newer version for shell commands and LAN addresses.
The purpose of all this infrastructure and modules in JavaScript, .NET and PowerShell is to build a “fileless” module chain on the victim’s computer consisting of an initial small runner and several Windows system registry values containing the encrypted remote administration tool.
The tool does all that a typical Trojan needs to accomplish: upload, download and execute files, fingerprint target systems.
The PowerShell version of the Trojan also has the ability to get screenshots.
Even the command system in the different Trojans is quite similar
A plausible hypothesis for developing similar malware in different languages could be to avoid detection: if one version is detected on the victim’s computer, the operators can try an analogue in a different language.
In the table below, we compare Trojans in terms of encryption keys in use and initial messages to control servers.
For some reason, the developers prefer to entertain targets and researchers instead of randomizing strings
Our analysis of the dropper is based on the sample below:
